         MACRO                                                          00010000
         MAPVTOCS                                                       00020000
         USING *,R7                                                     00030000
NOTMOUNT LA    R2,SMINMT .   GET NOT MOUNTED MESSAGE                    00040000
         LA    R3,L'SMINMT                                              00050000
         B     EXCSLOP                                                  00060000
         SPACE                                                          00070000
PROCERR  CNVX  RDCCHHR,SMIPCC  .    FORMAT THE BAD CCHHR                00080000
         CNVX  RDCCHHR+2,SMIPHH                                         00090000
         CNVX  RDCCHHR+4,SMIPRR                                         00100000
         LA    R2,SMIPROC .   PROCESSING ERROR MSG                      00110000
         LA    R3,L'SMIPROC                                             00120000
         B     EXCSLOP                                                  00130000
         SPACE 2                                                        00140000
NEXTDSCB SR    R1,R1                                                    00150000
         IC    R1,CCHHR+4 .  GET CURRENT RECORD NUMBER                  00160000
         LA    R1,1(R1) .    POINT TO NEXT                              00170000
         STC   R1,CCHHR+4 .   STASH BACK                                00180000
         CH    R1,HIGHR .    FIT ON TRACK ?                             00190000
         BNH   MVCCHHR .     GO TO MOVE CORRECT CCHHR INTO REQUEST      00200000
         MVI   CCHHR+4,1 .     RESET TO RECORD 1                        00210000
         LH    R1,CCHHR+2 .   GET TRACK                                 00220000
         LA    R1,1(R1) .    UP IT                                      00230000
         STH   R1,CCHHR+2 .   STASH IT BACK                             00240000
         CH    R1,HIGHTRK .   FITS ON CYL ?                             00250000
         BL    MVCCHHR .     GO TO MOVE CORRECT CCHHR INTO REQUEST      00260000
         MVC   CCHHR+2(2),ZERO .   CLEAR TRACK #                        00270000
         LH    R1,CCHHR .    GET CYL. NO.                               00280000
         LA    R1,1(R1) .    UP                                         00290000
         STH   R1,CCHHR .    STASH BACK                                 00300000
MVCCHHR  MVC   RDCCHHR,CCHHR .    MOVE REQUESTED CCHHR TO READ          00310000
         CLC   CCHHR(5),HIGHMARK .  IN USED PART OF VTOC ?              00320000
         BHR   R9 .          NO, TAKE END-FILE EXIT                     00330000
         SPACE 2                                                        00340000
*        ROUTINE TO GET A DSCB - CCHHR MOVED TO RDCCHHR, BAL R9         00350000
*                                                                       00360000
READDSCB OBTAIN  DSCB .      GET THE DSCB - SEEK                        00370000
         CH    R15,H4 .      GOOD COMP CODE ?                           00380000
         BE    NOTMOUNT .    NOT MOUNTED                                00390000
         BH    4(R9) .       OTHER ERROR                                00400000
         B     8(R9) .       NORMAL EXIT                                00410000
         SPACE 2                                                        00420000
ENDSCAN  L     R10,SPCURR .    GET CURRENT DISPLAY LINE ADDRESS AGAIN   00430000
         SPLINE , ,          GET A FREE LINE                            00440000
         BNL   ENDSMI .      END OF PAGE - USE SMI                      00450000
         MVC   (40-L'EOFMSG)/2(L'EOFMSG,R10),EOFMSG                     00460000
         B     EXCYES .      EXEUNT                                     00470000
ENDSMI   LA    R2,SMIEOF .   GET EOF MESSAGE                            00480000
         LA    R3,L'SMIEOF .   AND LENGTH                               00490000
         B     EXCSLOP .     AND EXIT                                   00500000
         SPACE 2                                                        00510000
*        CONDITIONAL PAGE OUTPUT - ONLY IF LINE 2 IS NON-BLANK          00520000
*                                                                       00530000
CONPOUT  L     R1,BUFAD .    GET START OF BUFFER                        00540000
         CLC   BLANKS,80(R1)   ARE THERE DATA ON FIRST LINE ?           00550000
         BE    PTOP .        NO, SKIP PAGE OUTPUTTING                   00560000
         SPACE 2                                                        00570000
*        OUTPUT THE CURRENT PAGE                                        00580000
*                                                                       00590000
POUT     ST    R9,POUT9 .    SAVE RETURN ADDR.                          00600000
         XPOUT ,             WRITE 'MORE', ETC.                         00610000
         B     *+8 .         ENTER ONLY                                 00620000
         B     EXCIN .       LOOK AT NEW INPUT                          00630000
         L     R9,POUT9 .    RELOAD AGAIN                               00640000
         SPACE 2                                                        00650000
*        INITIALIZE PAGE OUTPUT                                         00660000
*                                                                       00670000
PTOP     ST    R9,POUT9 .    SAVE RETURN ADDR.                          00680000
         BALS  R14,BLANKER . CLEAR BUFFER                               00690000
         SPINIT 0                                                       00700000
         L     R1,BUFAD .    GET START OF BUFFER                        00710000
         MVC   29(L'DSNAM,R1),DSNAM .   PROV. USER DSNAM AS TITLE       00720000
         TR    29(L'DSNAM,R1),TRTAB .  MAKE SURE ITS GOOD               00730000
         MVC   74(L'VOLSER,R1),VOLSER .   ADD VOL-SER                   00740000
         SPLINE ,            COND. LINE ADVANCE FOR SMALL SCREEN        00750000
         L     R9,POUT9 .    RESTORE RETURN ADDR.                       00760000
         BR    R9 .          RETURN                                     00770000
         SPACE 2                                                        00780000
*        ROUTINE TO MOVE ONE LINE; AND PAGE OUT IF NECESSARY            00790000
*                                                                       00800000
LOUT     STM   R2,R3,LOUT23  .  SAVE CALL REGISTERS                     00810000
LOUT1    SPMOVE (R2),(R3)                                               00820000
         B     *+6 .         PAGE WRITE NEXESSARY                       00830000
         BR    R4 .          RETURN, LINE MOVED                         00840000
         BALS  R9,POUT .     ELSE OUTPUT THE PAGE AND WAIT              00850000
         LM    R2,R3,LOUT23 .  RESTORE THE PARM REGISTERS               00860000
         B     LOUT1 .       AND MOVE ON TOP OF PAGE                    00870000
         SPACE 3                                                        00880000
DSCB     CAMLST  SEEK,1,2,3  COMPLETED BY EXHCCVTO                      00890000
SMINMT   SMI    '''ABCXXX'' NOT MOUNTED  '                              00900000
         ORG   SMINMT+1+SMILOFF .   OVERLAY DATA PORTION                00910000
VOLSER   DS    CL6 .         VOL-SER                                    00920000
         ORG   SMINMT+L'SMINMT .    CAN'T USE BLANK ORG                 00930000
SMIPROC  SMI   'ERROR PROCESSING CCCC.HHHH.RR  '                        00940000
         ORG   SMIPROC+SMILOFF .   OVERLAY DATA PORTION                 00950000
         DS    C'ERROR PROCESSING '                                     00960000
SMIPCC   DS    C'CCCC'                                                  00970000
         DS    C                                                        00980000
SMIPHH   DS    C'HHHH'                                                  00990000
         DS    C                                                        01000000
SMIPRR   DS    C'RR'                                                    01010000
         ORG   SMIPROC+L'SMIPROC                                        01020000
SMIEOF   SMI   '**** END OF DISPLAY ****  '                             01030000
         ORG   SMIEOF+SMILOFF . REDEFINE                                01040000
EOFMSG   DC    C'**** END OF DISPLAY ****'                              01050000
         ORG   SMIEOF+L'SMIEOF                                          01060000
         SPACE 2                                                        01070000
POUT9    DC    F'0' .        RETURN ADDR. SAVE WORD                     01080000
LOUT23   DC    2A(0) .       REGISTER STORAGE                           01090000
         SPACE                                                          01100000
HIGHTRK  DC    H'0' .        HIGH TRK PER CYL                           01110000
HIGHR    DC    H'0' .        HIGH DSCB RECORD PER TRK                   01120000
         DS    0H            FORCE ALIGNMENT                            01130000
HIGHMARK DC    XL5'0' .      DSCB 1 HIGH ADDRESS                        01140000
F6PTR    DC    XL5'0' .      FIRST FORMAT 6 ADDRESS IN INITIAL PROC.    01150000
         DS    0H                                                       01160000
CCHHR    DC    XL5'0' .      CURRENT CCHHR FOR SEQUENTIAL PASS OF VTOC  01170000
RDCCHHR  DC    XL5'0' .      CCHHR FOR 'READDSCB' ROUTINE               01180000
F4PTR    DC    XL5'0' .      CCHHR OF FORMAT 4 DSCB                     01190000
         SPACE                                                          01200000
PF       DC    X'0' .        PROCESSING FLAG FOR INDEX, ETC.            01210000
PFIND    EQU   X'80' .       INDEX PAGE REQUESTED                       01220000
PFION    EQU   X'40' .       INDEX PAGE ONLY                            01230000
PFRAW    EQU   X'01'         DISPLAY DSCBS IN HEX               GP01008 01240001
         SPACE                                                          01250000
DSNCLC   CLC   DS1DSNAM(0),DSNMASK .    MASKED DSNAME TEST              01260000
DSNLEN   EQU   DSNCLC+1 .    LEN - 1 OF MASK, IF ANY                    01270000
DSNAM    DC    CL44' ' .     DSNAME FOR SPECIFIC REQUEST PROCESSING     01280000
DSNMASK  DC    CL43' ' .     DSN MASK VALUE, IF USED                    01290000
         SPACE 2                                                        01300000
       INSETS  SPINIT,SPMOVE,INHEX,CVH,CNVR,TRTAB                       01310000
         INSECT                                                         01320000
         SPACE 2                                                        01330000
WRKINPUT DS    0D .          CAMLST WORK AREA                           01340000
         DC    XL100'0' .    WORK AREA                                  01350000
         DC    XL100'0' .    WORK AREA                                  01360000
         DC    XL65'0' .     WORK AREA                                  01370000
         SPACE                                                          01380000
         ORG   WRKINPUT                                                 01390000
     IECSDSL1  1                                                        01400000
         SPACE                                                          01410000
         ORG   WRKINPUT                                                 01420000
     IECSDSL1  2                                                        01430000
         SPACE                                                          01440000
         ORG   WRKINPUT                                                 01450000
     IECSDSL1  3                                                        01460000
         SPACE                                                          01470000
         ORG   WRKINPUT                                                 01480000
DS4DSNAM DS    CL44 .        FORCE OBTAIN IN SAME LOCATION AS FMT 1     01490000
         SPACE                                                          01500000
     IECSDSL1  4                                                        01510000
         SPACE                                                          01520000
         ORG   WRKINPUT                                                 01530000
     IECSDSL1  5                                                        01540000
         SPACE                                                          01550000
         ORG   WRKINPUT                                                 01560000
     IECSDSL1  6                                                        01570000
         SPACE 2                                                        01580000
         ORG   WRKINPUT+148+L'DS1DSNAM+5                                01590000
XVTXWORK DS    0D                                                       01600000
         DS    CL256         FORCE WORK SPACE                           01610000
         ORG                                                            01620000
         MEND                                                           01630000
