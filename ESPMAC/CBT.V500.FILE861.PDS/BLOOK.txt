         MACRO                                                          00010000
&NM      BLOOK &T=,&ERR=*+8,&B=*,&R=,&PFX=,&X=R5,&Y=R6,&Z=R4,          *00020000
               &STRIP=,&ABBR=,&FULL=                            GP13189 00030000
         GBLB  &ZZ@BLUK                                                 00040000
         GBLC  &MACPLAB,&ZZ@BLUF                                GP08269 00050000
.********************************************************************** 00060000
.*                                                                   ** 00070000
.*    Verb lookup routine; see BTAB macro for matching verb defs     ** 00080000
.*    T     - address of BTAB definitions                            ** 00090000
.*    X     - pointer for scanning                             (R5)  ** 00100000
.*    Y     - register pointing at last byte of text           (R6)  ** 00110000
.*    Z     - register for BTAB scanning                       (R4)  ** 00120000
.*    R     - address of text                                        ** 00130000
.*    B     - base address for (b)ddd branching; B=A (absolute)      ** 00140000
.*            branches to BTAB with BASE=0; B=* (default) branches   ** 00150000
.*            from CSECT                                             ** 00160000
.*    ERR   - branch address/register for no match                   ** 00170000
.*    PFX   - 0-4 character label prefix (default VERB)              ** 00180000
.*    STRIP - (default) skip leading blanks                          ** 00190000
.*            =NEVER    process at current input address             ** 00200000
.*    ABBR  - when specified, accepts matches for abbreviated verbs  ** 00210000
.*            of any length from original to ABBR value (no default) ** 00220000
.*            ABBR=3 for 'COMMAND' would match COMMAND, COMMAN,      ** 00230000
.*            COMMA, COMM, and COM                                   ** 00240000
.*    FULL  - one or more trailing characters inhibiting shorter     ** 00250000
.*            compares. No default; common are = and (               ** 00260000
.*            e.g., FULL='=' (valid are FULL=alphanum; FULL='chars'; ** 00270000
.*            FULL=C'chars'; and FULL=X'hexchars')                   ** 00280000
.*            FULL== and FULL='' are valid (= and ' comnpares)       ** 00290000
.*                                                                   ** 00300000
.********************************************************************** 00310000
.*                                                                   ** 00320000
.*    X returns next byte after match, or last text + 1 for no match ** 00330000
.*    R14 is a return register; R15-R1 are work registers.           ** 00340000
.*                                                                   ** 00350000
.*    Y unchanged.                                                   ** 00360000
.*    Z returns last process table entry.                            ** 00370000
.*                                                                   ** 00380000
.********************************************************************** 00390000
.*                                                                   ** 00400000
.*    BLOOK expands an in-line subroutine, called by other           ** 00410000
.*    references. To use in an assembly with multiple, not mutually  ** 00420000
.*    addressable CSECTs, use a unique PFX in each.                  ** 00430000
.*                                                                   ** 00440000
.********************************************************************** 00450000
         LCLC  &L,&D,&LAB,&D1,&D2,&D3                           GP13189 00460000
         LCLA  &I,&J,&K                                         GP13189 00470000
&L       SETC  'L'''                                                    00480000
         AIF   ('&ZZ@BLUF' NE '').OLDLAB                        GP08269 00490000
&ZZ@BLUF SETC  'VERB'        DEFAULT LABEL                      GP08269 00500000
.OLDLAB  ANOP  ,                                                GP08269 00510000
         AIF   ('&PFX' EQ '' OR '&PFX' EQ '&ZZ@BLUF').DONLAB    GP08269 00520000
&ZZ@BLUF SETC  '&PFX'                                           GP08269 00530000
&ZZ@BLUK SETB  0             EXPAND CODE WITH NEW LABELS        GP08269 00540000
.DONLAB  ANOP  ,                                                GP08269 00550000
&LAB     SETC  '&ZZ@BLUF'                                       GP08269 00560000
&NM      MACPARM &Z,&T,NULL==X'FF'                                      00570000
&D       SETC  '('.'&Y'.')'                                      89152  00580000
         AIF   ('&D' EQ '&R' OR '&R' EQ '&Y').NOEND              89152  00590000
         MACPARM &Y,&R+&L&R-1                                           00600000
.NOEND   AIF   (&ZZ@BLUK).NOTONCE                                       00610000
&ZZ@BLUK SETB  1                                                        00620000
         B     &LAB.END      BRANCH AROUND                       88024  00630000
&LAB.LOOK SLR  R15,R15       ZERO IC REGISTER                    88024  00640000
         AIF   ('&STRIP' EQ 'NEVER').NODEBLK                     89152  00650000
&LAB.1   CLI   0(&X),C' '    LOOK FOR NON-BLANK INPUT            88024  00660000
         BNE   &LAB.2        OK                                  88024  00670000
         LA    &X,1(,&X)     SKIP TO NEXT BYTE                          00680000
         CR    &X,&Y         REACHED END OF INPUT BUFFER                00690000
         BNH   &LAB.1        NO, LOOK FOR NON-BLANK              88024  00700000
         BR    R14           RETURN, BUFFER EXHAUSTED                   00710000
         AGO   .YESBLNK                                          88269  00720000
.NODEBLK B     &LAB.2        NO DEBLANKING                       88269  00730000
.YESBLNK ANOP  ,                                                 88269  00740000
&LAB.CHEK CLC  4(0,&Z),0(&X) MATCHING VERB ?                     88024  00750000
&LAB.3   LA    &Z,5(R15,&Z)  BUMP TO NEXT TABLE ENTRY            88024  00760000
&LAB.2   CLI   0(&Z),X'FF'   END OF TABLE ?                      88024  00770000
         BER   R14           YES, VERB NOT FOUND                        00780000
         IC    R15,0(,&Z)    LENGTH - 1  OF TABLE ENTRY                 00790000
         EX    R15,&LAB.CHEK  SAME VERB ?                        88024  00800000
         AIF   ('&ABBR' EQ '').NOABBR                           GP13189 00810000
         BE    &LAB.MAT                                         GP13189 00820000
         LA    R0,1(,R15)    COPY LENGTH                        GP13189 00830000
         SH    R0,=AL2(&ABBR)    SHORTER ALLOWED ?              GP13189 00840000
         BNP   &LAB.3               NO; TRY NEXT                GP13189 00850000
         AIF   ('&FULL' EQ '').LABNKC      SKIP IF NO KEYWORDS  GP13190 00860000
&D       SETC  '&FULL'                                          GP13189 00870000
&D1      SETC  'C'''                                            GP13189 00880000
&D2      SETC  ''''                                             GP13189 00890000
&K       SETA  K'&FULL                                          GP13189 00900000
&J       SETA  1             STRIDE                             GP13189 00910000
         AIF   ('&FULL' EQ '''').LABNKS                         GP13189 00920000
         AIF   (&K LT 3).LABNKS                                 GP13189 00930000
         AIF   ('&D'(1,2) EQ 'X''').HEXSTR       HEX            GP13189 00940000
         AIF   ('&D'(1,2) EQ 'C''').TXTSTR       TEXT           GP13189 00950000
         AIF   ('&D'(1,1) NE '''').LABNKS       PLAIN STRING    GP13189 00960000
&D       SETC  '&D'(2,&K-2)                                     GP13189 00970000
&K       SETA  K'&D                                             GP13189 00980000
         AGO   .LABNKS                                          GP13189 00990000
.TXTSTR  ANOP  ,             TEXT NOTATION   C' '               GP13189 01000000
&D       SETC  '&D'(3,&K-3)                                     GP13189 01010000
&K       SETA  K'&D                                             GP13189 01020000
         AGO   .LABNKS                                          GP13189 01030000
.HEXSTR  ANOP  ,             HEX NOTATION                       GP13189 01040000
&D1      SETC  'X'''                                            GP13189 01050000
&D       SETC  '&D'(3,&K-3)                                     GP13189 01060000
&K       SETA  K'&D                                             GP13189 01070000
&J       SETA  2             STRIDE                             GP13189 01080000
.LABNKS  LA    R1,4(R15,&Z)  POINT TO LAST BYTE OF VERB         GP13189 01090000
&I       SETA  1                                                GP13189 01100000
         AIF   (&K GE &J).LABNKL                                GP13189 01110000
         MNOTE 4,'BLOOK: MALFORMED FULL=&FULL'                  GP13189 01120000
         AGO   .LABNKC                                          GP13189 01130000
.LABNKL  ANOP  ,                                                GP13189 01140000
&D3      SETC  '&D'(&I,&J)                                      GP13189 01150000
         AIF   (&J NE 1 OR ('&D3' NE '''' AND '&D3' NE '&&')).LABNDB    01160000
.*TEST   AIF   ('&D'(&I,&J+1) NE '&D3').LABOOPS                 GP13189 01170000
&I       SETA  &I+1                                             GP13189 01180000
.LABOOPS ANOP  ,             USER ERROR                         GP13189 01190000
&D3      SETC  '&D3'.'&D3'                                      GP13189 01200000
.LABNDB  CLI   0(R1),&D1&D3&D2    SPECIAL?                      GP13189 01210000
         BE    &LAB.3          YES; NO ABBR                     GP13189 01220000
&I       SETA  &I+&J                                            GP13189 01230000
         AIF   (&I LE &K).LABNKL      TRY AGAIN                 GP13189 01240000
.LABNKC  LR    R1,R15                                           GP13189 01250000
&LAB.ALP BCTR  R1,0                                             GP13189 01260000
         EX    R1,&LAB.CHEK  MATCH ?                            GP13189 01270000
         BE    &LAB.MA1        YES; GET OUT                     GP13189 01280000
         BCT   R0,&LAB.ALP   SHORTER ALLOWED ?                  GP13189 01290000
         B     &LAB.3          NO; TRY NEXT                     GP13189 01300000
         AGO   .DOABBR                                          GP13189 01310000
.NOABBR  BNE   &LAB.3        NO, KEEP LOOKING                    88024  01320000
.DOABBR  ANOP  ,                                                GP13189 01330000
&LAB.MA1 LA    R15,1(,R15)   SET FOR CORRECT INPUT POSITION     GP13189 01340000
&LAB.MAT LA    &X,1(R15,&X)  POINT TO FIRST BYTE PAST VERB              01350000
         ICM   R15,7,1(&Z)   LOAD DISPLACEMENT ADDRESS                  01360000
         B     4(,R14)       RETURN FOUND CONDITION                     01370000
&LAB.END DS    0H                                                88024  01380000
.NOTONCE AIF   ('&STRIP' EQ 'NO' OR '&STRIP' EQ 'NEVER').STRIPPD 89152  01390000
         MACPARM R14,&LAB.LOOK,OP=BAL                           GP04234 01400000
         AGO   .REJOIN                                          GP04234 01410000
.STRIPPD AIF   ('&STRIP' EQ 'NEVER').STRIPPR                     89152  01420000
         MACPARM R15,0       CLEAR R15 FIRST                     89152  01430000
.STRIPPR MACPARM R14,&LAB.LOOK,OP=BAL                           GP10164 01440000
.REJOIN  AIF   ('&T' EQ '').NOERR                                       01450000
         AIF   ('&ERR' EQ '*+8' AND '&B' EQ 'A').S6                     01460000
         B     &ERR                                                     01470000
         AGO   .S8                                                      01480000
.S6      B     *+6           SKIP OVER 'BR A'                           01490000
.S8      ANOP                                                           01500000
         AIF   ('&B' EQ '').NOERR                                       01510000
         AIF   ('&B' EQ '*').RELDEF                                     01520000
         AIF   ('&B'(1,1) EQ '(').REL                                   01530000
         AIF   ('&B' EQ 'A').ABS                                        01540000
         MNOTE 8,'B NOT A OR (REG)'                                     01550000
         AGO   .NOERR                                                   01560000
.REL     B     0(&B(1),R15)                                             01570000
         AGO   .NOERR                                                   01580000
.RELDEF  B     &SYSECT.(R15)                                            01590000
         AGO   .NOERR                                                   01600000
.ABS     BR    R15                                                      01610000
.NOERR   MEND  ,                                                        01620000
