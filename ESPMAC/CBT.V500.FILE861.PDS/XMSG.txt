         MACRO ,                                         NEW ON GP08079 00010000
&NM      XMSG  &MID,&TYPE=MSG,   FORMAT A MESSAGE FOR WTO OR PRT       *00020000
               &LIST=,&PARM=,&ERRET=  MSG WITH TEXT INSERTION           00030000
         GBLC  &MACPLAB,&ZZXMWRK                                        00040000
         GBLA  &MACP#        NUMBER OF (SUB)LIST ARGUMENTS              00050000
         GBLC  &MACP1,&MACP2,&MACP3,&MACP4,&MACP5                       00060000
         GBLC  &MACP6,&MACP7,&MACP8,&MACP9,&MACP10                      00070000
         LCLA  &K,&I,&J,&N,&M,&O                                        00080000
         LCLB  &TF                                                      00090000
         LCLC  &RA,&RL,&RT,&L  DEFINE ADDRESS AND LENGTH REGISTERS      00100000
         LCLC  &TYPA(23),&TYVL(23)                                      00110000
         LCLC  &LIT          SPECIAL HANDLING FOR LITERAL OPERANDS      00120000
&RA      SETC  'R1'          SET NORMAL USE                             00130000
&RL      SETC  'R0'                                                     00140000
&L       SETC  'L'''                                                    00150000
&MACPLAB SETC  '&NM'         SET NAME FIELD                             00160000
         AIF   ('&PARM' EQ '').DEFPARM                                  00170000
&ZZXMWRK SETC  '&PARM'       SET NEW WORK AREA                          00180000
.DEFPARM AIF   ('&ZZXMWRK' NE '').USEPARM                               00190000
&ZZXMWRK SETC  'XMSGMGPM'    USE DEFAULT MDEFPARM NAME                  00200000
.USEPARM ANOP  ,                                                        00210000
.*--------------------------------------------------------------------* 00220000
.*                                                                    * 00230000
.*  XMSG GENERATES A CALL TO MESSAGE FORMATTING/DEFINITION PROGRAM    * 00240000
.*  EXHMGxxx PREVIOUSLY LOADED AND STORED IN XMSGMGPM(1)              * 00250000
.*                                                                    * 00260000
.*   name XMSG  modname,LIST=(buffer,buflen),TYPE=INIT                * 00270000
.*      LOADS THE MESSAGE MODULE, AND SETS THE BUFFER INFORMATION     * 00280000
.*                                                                    * 00290000
.*   name XMSG  modname,TYPE=CLOSE                                    * 00300000
.*      FREES THE MESSAGE MODULE                                      * 00310000
.*                                                                    * 00320000
.*   name XMSG  mid,LIST=(addr,'text',(addr,len),(addr,len,type)...)  * 00330000
.*                                                                    * 00340000
.*  mid  SPECIFIES THE MESSAGE ID:                                    * 00350000
.*    A) AS A LITERAL                                                 * 00360000
.*    B) ADDRESS OF A TEXT STRING OF LENGTH 8                         * 00370000
.*                                                                    * 00380000
.*  TYPE=END (OR A TEXT SPECIFICATION OF *END) REQUESTS PROGRAM       * 00390000
.*    TO CLEAN UP AND RELEASE STORAGE                                 * 00400000
.*                                                                    * 00410000
.*  TYPE=TEXT (DEFAULT) BYPASSES THE WTO, BUT RETURNS THE MESSAGE     * 00420000
.*    ADDRESS: H'LEN,0',CL(LEN)'TEXT' USABLE IN WTO OR PRTV           * 00430000
.*  TYPE=MSG  SPECIFIES A MESSAGE TO BE WRITTEN TO THE OPERATOR       * 00440000
.*                                                                    * 00450000
.*    LIST OPERANDS SPECIFY TEXT TO BE INSERTED INTO THE MESSAGE      * 00460000
.*    AS DEFINED. AN OMITTED LENGTH FIELD (FOR NON-LITERAL) EXPANDS   * 00470000
.*    AS L'addr.                                                      * 00480000
.*    TYPE OPERANDS DEFAULT TO THOSE IN THE MESSAGE DEFINITION, OR    * 00490000
.*      CHARACTER STRING IF NOT DEFINED THERE, EITHER.                * 00500000
.*    VALID ARE: C or T FOR CHARACTER TEXT; A FOR ADDRESS (HEX);      * 00510000
.*      I or INT FOR INTEGERES; P, D, or PD FOR PACKED DECIMAL;       * 00520000
.*      H, X, or HEX FOR HEXADECIMAL; B or BIN FOR BINARY/BIT         * 00530000
.*                                                                    * 00540000
.*  PARM=mdefparm DEFINES A REMOTE PARAMETER LIST TO BE USED (SEE     * 00550000
.*    EXPANSION OF MDEFPARM FOR FORMAT.                               * 00560000
.*                                                                    * 00570000
.*                                                                    * 00580000
.*--------------------------------------------------------------------* 00590000
&N       SETA  N'&LIST                                                  00600000
&TYPA(01) SETC 'C'           CHARACTER STRING                           00610000
&TYPA(02) SETC 'CHAR'                                                   00620000
&TYPA(03) SETC 'T'           TEXT STRING                                00630000
&TYPA(04) SETC 'TEXT'                                                   00640000
&TYPA(05) SETC '@'           ADDRESS                                    00650000
&TYPA(06) SETC 'A'                                                      00660000
&TYPA(07) SETC 'ADDR'                                                   00670000
&TYPA(08) SETC 'P'           PACKED DECIMAL                             00680000
&TYPA(09) SETC 'D'                                                      00690000
&TYPA(10) SETC 'PD'                                                     00700000
&TYPA(11) SETC 'DEC'                                                    00710000
&TYPA(12) SETC 'UP'          UNSIGNED (ABSOLUTE) PD                     00720000
&TYPA(13) SETC 'UD'                                                     00730000
&TYPA(14) SETC 'UPD'                                                    00740000
&TYPA(15) SETC 'I'           INTEGER                                    00750000
&TYPA(16) SETC 'INT'                                                    00760000
&TYPA(17) SETC 'UI'          UNSIGNED / ABSOLUTE INT                    00770000
&TYPA(18) SETC 'AI'                                                     00780000
&TYPA(19) SETC 'H'           HEXADECIMAL                                00790000
&TYPA(20) SETC 'X'                                                      00800000
&TYPA(21) SETC 'HEX'                                                    00810000
&TYPA(22) SETC 'B'           BIT STRING                                 00820000
&TYPA(23) SETC 'BIN'                                                    00830000
&TYVL(01) SETC '1'                                                      00840000
&TYVL(02) SETC '1'                                                      00850000
&TYVL(03) SETC '1'                                                      00860000
&TYVL(04) SETC '1'                                                      00870000
&TYVL(05) SETC '2'                                                      00880000
&TYVL(06) SETC '2'                                                      00890000
&TYVL(07) SETC '2'                                                      00900000
&TYVL(08) SETC '3'                                                      00910000
&TYVL(09) SETC '3'                                                      00920000
&TYVL(10) SETC '3'                                                      00930000
&TYVL(11) SETC '3'                                                      00940000
&TYVL(12) SETC '4'                                                      00950000
&TYVL(13) SETC '4'                                                      00960000
&TYVL(14) SETC '4'                                                      00970000
&TYVL(15) SETC '5'                                                      00980000
&TYVL(16) SETC '5'                                                      00990000
&TYVL(17) SETC '6'                                                      01000000
&TYVL(18) SETC '6'                                                      01010000
&TYVL(19) SETC '8'                                                      01020000
&TYVL(20) SETC '8'                                                      01030000
&TYVL(21) SETC '8'                                                      01040000
&TYVL(22) SETC '9'                                                      01050000
&TYVL(23) SETC '9'                                                      01060000
         AIF   ('&MID' EQ '*END').CLOSE                                 01070000
         AIF   ('&TYPE' EQ 'CLOSE' OR '&TYPE' EQ 'END').CLOSE           01080000
         AIF   ('&TYPE' NE 'INIT' AND '&TYPE' NE 'NAME').DOMSG          01090000
         AIF   ('&MID' EQ '').NOMOD  LET IT FAIL                        01100000
&LIT     SETC  '&MID'                                                   01110000
         AIF   ('&MID'(1,1) NE '''').NOMOD                              01120000
&LIT     SETC  '=CL8'.'&LIT'                                            01130000
         MACPARM R0,&LIT,OP=LA  LOAD ADDRESS OF MODULE NAME             01140000
         AGO   .GOMOD                                                   01150000
.NOMOD   MACPARM R0,&LIT,OP=LA  LOAD ADDRESS OF MODULE NAME             01160000
.GOMOD   ANOP  ,                                                        01170000
&MACPLAB LOAD  EPLOC=(0),ERRET=&ERRET  LOAD; OPTIONAL RECOVERY          01180000
&MACPLAB SETC  ''                                                       01190000
         MACPARM R0,&ZZXMWRK,OP=ST   SAVE THE MODULE ADDRESS            01200000
         MACPARM R0,&LIST(1),NULL=XMSGMSG-XMSGADD+&ZZXMWRK              01210000
         MACPARM R1,&LIST(2),NULL=&L.XMSGMSG                            01220000
         MACPARM R0,R1,XMSGBUF-XMSGADD+&ZZXMWRK,MODE=THREE,OP=STM       01230000
.DONEIN  MEXIT ,                                                        01240000
.CLOSE   MACPARM &ZZXMWRK.(4),&ZZXMWRK,OP=XC  CLEAR THE ADDRESS         01250000
         AIF   ('&MID' EQ '').DONEND                                    01260000
&LIT     SETC  '&MID'                                                   01270000
         AIF   ('&MID'(1,1) NE '''').NODEL                              01280000
&LIT     SETC  '=CL8'.'&LIT'                                            01290000
         MACPARM R0,&LIT,OP=LA  LOAD MESSAGE ADDRESS                    01300000
         AGO   .GODEL                                                   01310000
.NODEL   MACPARM R0,&LIT,OP=LA  LOAD MESSAGE ADDRESS                    01320000
.GODEL   DELETE EPLOC=(0)    DELETE MESSAGE MODULE                      01330000
.DONEND  MEXIT ,                                                        01340000
.*--------------------------------------------------------------------* 01350000
.*  PROCESS A MESSAGE LIST (TEXT/LEN OPTIONAL DEPENDING ON MESSAGE)   * 01360000
.*--------------------------------------------------------------------* 01370000
.DOMSG   MACPARM R1,&ZZXMWRK LOAD CALLING AREA ADDRESS                  01380000
         AIF   ('&MID' EQ '').NOMID  LET IT FAIL                        01390000
&LIT     SETC  '&MID'                                                   01400000
         AIF   ('&MID'(1,1) NE '''').NOMID                              01410000
&LIT     SETC  '=CL8'.'&LIT'                                            01420000
         MACPARM R15,&LIT,OP=LA  LOAD MESSAGE ADDRESS                   01430000
         AGO   .GOMID                                                   01440000
.NOMID   MACPARM R15,&LIT,OP=L   LOAD MESSAGE ADDRESS                   01450000
.GOMID   MACPARM XMSGMID-XMSGMGPM(L'XMSGMID,R1),0(R15),OP=MVC MOVE TEXT 01460000
&TF      SETB   (NOT ('&TYPE' EQ 'MSG'))                                01470000
         MACPARM R0,&TF      SET FLAG (0-WTO; 1-NO WTO,RETURN MSG ADD)  01480000
         AIF   (&N EQ 0).GOMSG                                          01490000
&O       SETA    20          OFFSET IN GENERATED LIST                   01500000
&M       SETA    1           OFFSET IN LIST=                            01510000
.*--------------------------------------------------------------------* 01520000
.*  CASE 2  - LOOP THROUGH SUPPLIED ADDRESS/LEN PAIRS AND STASH       * 01530000
.*--------------------------------------------------------------------* 01540000
.LSTADD  AIF   (&M GT &N).LSTEND  DONE - SET VL BIT IN LIST             01550000
&K       SETA  0             TYPE NOT NEEDED                            01560000
         MACLIST &LIST(&M)   GET SUBLIST ITEMS                          01570000
&RA      SETC  '&MACP1'                                                 01580000
&RL      SETC  '&MACP2'                                                 01590000
         AIF   ('&RA' NE '').HAVERA                                     01600000
&RA      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION             01610000
.HAVERA  AIF   ('&RL' NE '').HAVERL                                     01620000
&RL      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION             01630000
.*--------------------------------------------------------------------* 01640000
.*  CASE 2A - EXPLICIT TEXT/LEN SUPPLIED                              * 01650000
.*--------------------------------------------------------------------* 01660000
.HAVERL  AIF   ('&RA'(1,1) EQ '''').ENTRNG                              01670000
         MACPARM R15,&RA,OP=LA LOAD ADDRESS OF NAME OR REGISTER         01680000
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST          01690000
         AIF   ('&MACP2' NE '').GOODRL                                  01700000
         AIF   ('&MACP1' EQ '').GOODRL                                  01710000
         MACPARM R15,&L&MACP1   USE DEFAULT LENGTH                      01720000
         AGO   .COMMRL                                                  01730000
.GOODRL  MACPARM R15,&RL,NULL=0   SET EXPLICIT LENGTH OR 0              01740000
.COMMRL  MACPARM R15,&O+4(,R1),OP=STH STORE LENGTH IN CALL LIST         01750000
         AIF   ('&MACP3' EQ '').COMMK0                                  01760000
&I       SETA  1                                                        01770000
.TYLOOP  AIF   ('&MACP3' EQ '&TYPA(&I)').SETK0                          01780000
&I       SETA  &I+1                                                     01790000
         AIF   (&I LE 23).TYLOOP                                        01800000
 MNOTE 8,'XMSG: TYPE &MACP3 NOT RECOGNIZED, IGNORED'                    01810000
         AGO   .COMMK0                                                  01820000
.SETK0   ANOP  ,                                                        01830000
&K       SETA  &TYVL(&I)                                                01840000
         AIF   (&K EQ 0).COMMK0                                         01850000
         MACPARM &O+4(R1),&K,OP=MVI   SET PARM TYPE                     01860000
.COMMK0  ANOP  ,                                                        01870000
&O       SETA   &O+6         NEXT AVAILABLE LIST OFFSET                 01880000
&M       SETA   &M+1                                                    01890000
         AGO   .LSTADD                                                  01900000
.*--------------------------------------------------------------------* 01910000
.*  CASE 2B - EXPLICIT QUOTED TEXT SUPPLIED                           * 01920000
.*--------------------------------------------------------------------* 01930000
.ENTRNG  ANOP  ,                                                        01940000
&K       SETA  K'&RA-2       LENGTH OF QUOTED STRING (EXC AMPSND/QOT)   01950000
&I       SETA  2             FIRST BYTE TO EXAMINE                      01960000
&J       SETA  &K            LAST BYTE (PAIR) TO EXAMINE                01970000
.ENTLOOP AIF   (&I GT &J).ENTEXP                                        01980000
         AIF   ('&RA'(&I,2) EQ '''''' OR '&RA'(&I,2) EQ '&&').ENDPR     01990000
&I       SETA  &I+1          TRY AGAIN                                  02000000
         AGO   .ENTLOOP                                                 02010000
.ENDPR   ANOP  ,                                                        02020000
&I       SETA  &I+2          SKIP THE PAIR                              02030000
&K       SETA  &K-1          AND CORRECT THE LENGTH                     02040000
         AGO   .ENTLOOP                                                 02050000
.ENTEXP  LA    R15,=C&RA     LOAD THE STRING ADDRESS                    02060000
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST          02070000
         MACPARM R15,&K+256,OP=LA LOAD THE LENGTH OF THE STRING / TYPE  02080000
         MACPARM R15,&O+4(,R1),OP=STH STORE LENGTH IN CALL LIST         02090000
&O       SETA   &O+6         NEXT AVAILABLE LIST OFFSET                 02100000
&M       SETA   &M+1                                                    02110000
         AGO   .LSTADD                                                  02120000
.LSTEND  ANOP  ,                                                        02130000
&O       SETA  &O-6          POSITION TO LAST WORD IN LIST              02140000
         MACPARM &O.(R1),X'80',OP=OI                                    02150000
         AGO   .COMBAS  DONE - INVOKE SUBWTO                            02160000
.GOMSG   MACPARM 20(16,R1),20(R1),OP=XC                                 02170000
         OI    20(R1),X'80'  EMPTY LIST                                 02180000
.*--------------------------------------------------------------------* 02190000
.*  LOAD R0 AND R1 APPROPRIATELY; CALL MESSAGE ROUTINE                * 02200000
.*--------------------------------------------------------------------* 02210000
.COMBAS  MACPARM R15,&ZZXMWRK,OP=L   MODE ADDRESS IN LIST               02220000
         BASR  R14,R15       INVOKE IT                                  02230000
         MEND  ,                                                        02240000
