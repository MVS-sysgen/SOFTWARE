//#001JCL JOB (TSO),
//             'Install ISPF',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1)
//* ----- CLEAN UP -----
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE SYSGEN.ISPF.DOC SCRATCH PURGE
  DELETE SYSGEN.ISPF.LLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.PLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.RFEPLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.MLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.SLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.TLIB SCRATCH PURGE
  DELETE SYSGEN.ISPF.CLIB SCRATCH PURGE
  SET MAXCC=0
  SET LASTCC=0
//*
//* RECV370 Proc 
//*
//RECV    PROC DSN=LLIB
//* ---- RECEIVE ----
//RECVJCL EXEC PGM=RECV370
//STEPLIB  DD  DISP=SHR,DSN=SYSC.LINKLIB
//XMITIN   DD  DSN=MVP.WORK(&DSN),DISP=SHR
//RECVLOG  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//* Work temp dataset
//SYSUT1   DD  DSN=&&SYSUT1,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(8,4),RLSE),
//             DISP=(,DELETE)
//* Output dataset
//SYSUT2   DD  DISP=(NEW,CATLG),
//             DSN=SYSGEN.ISPF.&DSN,
//             DCB=SYS1.MACLIB,
//             SPACE=(CYL,(2,0,20),RLSE),
//             UNIT=SYSDA,
//             VOL=SER=PUB001
//         PEND
//* ***************************
//DOC      EXEC RECV,DSN=DOC
//LLIB     EXEC RECV,DSN=LLIB
//MLIB     EXEC RECV,DSN=MLIB
//PLIB     EXEC RECV,DSN=PLIB
//RFEPLIB  EXEC RECV,DSN=RFEPLIB
//* ***************************
//* Create empty DSNs
//* I'm not sure we need these
//* But they're in the original Wally ISPF
//* And they get allocated in the CLIST provided by Wally
//*
//SYS2EXEC EXEC PGM=IEFBR14
//SLIB     DD DSN=SYSGEN.ISPF.SLIB,DISP=(,CATLG),
//         VOL=SER=PUB001,UNIT=SYSDA,SPACE=(CYL,(2,0,20),RLSE)
//SLIB     DD DSN=SYSGEN.ISPF.TLIB,DISP=(,CATLG),
//         VOL=SER=PUB001,UNIT=SYSDA,SPACE=(CYL,(2,0,20),RLSE)
//CLIB     DD DSN=SYSGEN.ISPF.CLIB,DISP=(,CATLG),
//         VOL=SER=PUB001,UNIT=SYSDA,SPACE=(CYL,(2,0,20),RLSE)
//*
//* Add ISPF CLIST to SYS1.CMDPROC
//*
//CLIST    EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT2   DD  DSN=SYS1.CMDPROC(ISPF),DISP=SHR
//SYSUT1   DD  DATA,DLM=@@
PROC  0
FREE  F(ISPCLIB,ISPLLIB,ISPMLIB,ISPPLIB,ISPSLIB,ISPTABL,ISPTLIB)
FREE  F(ISPPROF,REVPROF)
/*     ALLOCATE REQUIRED ISPF DD NAMES     */
ALLOC F(ISPCLIB) DA('SYSGEN.ISPF.CLIB','SYSGEN.REVIEW.CLIST') SHR
ALLOC F(ISPLLIB) DA('SYSGEN.ISPF.LLIB','SYSGEN.REVIEW.LOAD') SHR
ALLOC F(ISPMLIB) DA('SYSGEN.ISPF.MLIB') SHR
ALLOC F(ISPPLIB) DA('SYSGEN.ISPF.PLIB','SYSGEN.ISPF.RFEPLIB') SHR
ALLOC F(ISPSLIB) DA('SYSGEN.ISPF.SLIB') SHR
ALLOC F(ISPTABL) DA('SYSGEN.ISPF.TLIB') SHR
ALLOC F(ISPTLIB) DA('SYSGEN.ISPF.TLIB') SHR
/* CREATE USERID.ISP.PROF IF IT DOES NOT EXIST  */   
IF &SYSDSN('&SYSUID..ISP.PROF') NE &STR(OK) THEN DO
    /* Create the DCB info */
    ATTRIB PROFS BLKSIZE(3120) LRECL(80) DSORG(PO) RECFM(F,B)
    /* Allocate the dataset */
    ALLOC DSNAME('&SYSUID..ISP.PROF') CYLINDERS SPACE(1,0) DIR(10) +
    VOLUME(PUB001) UNIT(3390) USING(PROFS) NEW
    /* Free the dcb info */
    FREE ATTRLIST(PROFS)
END
/* Allocate user profiles */
ALLOC F(ISPPROF) DA('&SYSUID..ISP.PROF') SHR
ALLOC F(REVPROF) DA('&SYSUID..ISP.PROF') SHR
/* Launch ISPF */
CALL 'SYSGEN.ISPF.LLIB(ISPF)'
@@
//*
//* Apply ISPMAINT
//*
//IMASPZAP EXEC PGM=IMASPZAP,PARM=IGNIDRFULL
//SYSLIB   DD   DSN=SYSGEN.ISPF.LLIB,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
*
*--------------------*
* UPGRADE VERSION ID *
*--------------------*
*
 NAME ISPF     ISPVERSN
 REP 05  F0F0F0
//*
//* Install ACETEST
//*
//ACEINST    EXEC PGM=IEBCOPY
//SYSPRINT DD   SYSOUT=*
//ISPLLIB  DD   DSN=SYSGEN.ISPF.LLIB,DISP=SHR
//ACEAPF   DD   DSN=SYS2.LINKLIB,DISP=SHR
//SYSIN    DD   *
 C I=ISPLLIB,O=ACEAPF
 S M=ACEABEND
 S M=ACEBREAK
 S M=ACELMAN
 S M=ACETEST
//*
//* Add ACEAUTH to SYS2.PROCLIB
//*
//ACEAUTH  EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT2   DD  DSN=SYS1.CMDPROC(ACEAUTH),DISP=SHR
//SYSUT1   DD  DATA,DLM=@@
//*
//* This proc must be run once after every IPL to activate the APF-
//* Authorized features of ACETEST. If this job is not run, ACETEST
//* will still operate, but in a limited manner.
//*
//* Either use /S ACEAUTH from MVS console or submit a job
//* with //ACEAUTH EXEC ACEAUTH as the only step
//*
//ACEAUTH  PROC PARM='ACEIN'
//ACETEST  EXEC PGM=ACETEST,PARM=&PARM
//STEPLIB  DD   DSN=SYS2.LINKLIB,DISP=SHR
//SYSUDUMP DD   SYSOUT=*
//ACEIN    DD   *
END
@@