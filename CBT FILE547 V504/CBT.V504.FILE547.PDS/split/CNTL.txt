./ ADD NAME=$$$INDEX 8027-74014-74082-2157-00070-00004-00000-HERC01
$$$INDEX   you are looking at it now
$$README   do it
APFCK$     jcl to assemble/link BSPAPFCK - APF Checking Routines
APFCK#     jcl to run BSPAPFCK
APFCK@     short documentation of BSPAPFCK
APFLS$     jcl to assemble/link BSPAPFLS - List APF dataset routines
APFLS#     jcl to run BSPAPFLS
APFLS@     short documentation of BSPAPFLS
BRODSCN$   jcl to assemble/link BRODSCAN - SYS1.BRODCAST analysis pgm
BRODSCN#   jcl to run BRODSCAN
BRODSCN@   short documentation of BRODSCAN
CBT000     Delete the CBT usercatalogs
CBT010     Define one, single Usercatalog to be used for all CBT stuff
CBT020     Define aliases in the CBT usercatalog
CBT030     Define the files from CBT Overflow tape in CBT catalog
CBT040     Define the files from CBT Tape 429 in CBT catalog
CBT050     Define the files from CBT Tape 249 in CBT catalog
CBT060     Define these addon files to the CBT catalog
CBT070     Drop all files from CBT tape 072 to DASD and catalog them
CBT080     Assemble and link the CBT compression/Decompression pgm
CBT090     Drop down CBT tape 129 to DASD and catalog
CBT100     Load useful utilities from CBT Tape 249, File 35
CMDSB@     Installation docs for the # cmd subsystem
CMDSB1     CMDSBSYS Installation - Install required PTF
CMDSB2     CMDSBSYS Installation - add CMD1 to subsystem name table
CMDSB3     CMDSBSYS Installation - Allocate the CMDSBSYS files
CMDSB4     CMDSBSYS Installation - Assemble/link part 1
CMDSB5     CMDSBSYS Installation - Assemble/link part 2
CMDSB6     CMDSBSYS Installation - Print documentation
CMDSB7     CMDSBSYS Installation - Copy LMODs to target libs
CVXIT$     Installation JCL for IEECVXIT exit with R2D2 SRB routine
CVXIT@     Documentation for IEECVXIT exit with R2D2 SRB routine
DELAY$     JCL to assemble and link the DELAY program
DELAY#     JCL to run DELAY
DISKM$     JCL to assemble and link the DISKMAP modules
DISKM#     JCL to run DISKMAP
DISKM@     Short documentation of Diskmap
FCOOK$     JCL to assemble the (huge) fortune cookie jar
FCOOK#     Sample JCL for running Fortune Cookie in Batch
FCOOK@     short documentation of BSPFCOOK
MOVELOD$   JCL to assemble the MOVELOAD module - Preload IEHMOVE modules
MOVELOD#   Sample JCL to run MOVELOAD
MOVELOD@   Short doc of MOVELOAD
OSCMD$     Assemble and Link BSPOSCMD modules - Exec OS cmds from batch
OSCMD@     Documentation of BSPOSCMD
OSCMD#     BSPOSCMD sample JCL
PA2SI$     Assemble and Link BSPPA2SI modules - Parm to SYSIN converter
PA2SI@     Documentation of BSPPA2SI
PA2SI#     BSPPA2SI sample JCL
PILOT@     Documentation of Autopilot
PILOT#     Autopilot sample JCL
PILOT$     Assemble and Link Autopilot modules
REQUEUE$   Assemble the REQUEUE module - Re-queue a job fro re-execution
REQUEUE#   Sample JCL to run REQUEUE
REQUEUE@   Doc for REQUEUE
SETPF$     jcl to assemble/link BSPSETPF
SETPF#     jcl to run BSPSETPF
SETPF@     short documentation of BSPSETPF
SETPFK01   Sample member for SETPFK program, for console id 01
SETPFK02   Sample member for SETPFK program, for console id 02
SMPSL$     JCL to assemble and link the SMPSEL module
           The load module will be created in SYS2.LINKLIB
SMPSL#     JCL to run SMPSEL
SMPSL@     Short documentation of SMPSEL
TAPEHDR$   Assemble and Link TAPEHDR module - Print tape label info
TAPEHDR@   Documentation of TAPEHDR
TAPEHDR#   TAPEHDR sample JCL
VTMWT@     Documentation of BSPVTMWT
VTMWT#     BSPVTMWT sample JCL
VTMWT$     Assemble and Link BSPVTMWT module
./ ADD NAME=$$INSTAL 8006-74038-74076-1220-00040-00003-00000-HERC01
                       Installation Instructions
                       =========================

You have two options on how to install these add-ons. The easy way,
and the long (but not really hard) way

You should choose the easy way if you trust precompiled versions of
programs.  Then, the only thing you need to do is run the job
                            EZINST$
in this dataset.

Then you should read the documentation members (member names end with
a "@")

Now update SYS1.PARMLIB(COMMND00) with the data in COMMND01

Now update SYS1.PARMLIB(IEASYS00) and add a line

   FIX=00,

(don't forget the comma)

Add or update IEAFIX00 to contain the line

SYS1.LPALIB CMDDUMMY

Finally, pray for the best and do an IPL with the CLPA option

And what is the hard way?  Work yourself through the file
$$README, and through the JCL members in this file (they end in a "$").

Sample JCL can be found in members ending with a "#"

In any case, you should work through the members CBTxx, which
reorganize the catalog structure of the CBT files in the
turnkey system
If you have any problems, send me an email

         vbandke@bsp-gmbh.com

./ ADD NAME=$$README 8018-74014-74083-1027-00051-00015-00000-HERC01
This collection assumes that you have installed the MVS Turnkey
system.  It has been installed and tested in that environment.
If you haven't installed the MVS Turnkey System, these files will
most probably work as well, but, you will have to do some adjustments
to JCL procedures etc

For instalation instructions see member $$INSTALL in this file

When you use the supplied JCL to load the Addon Utility tape to disk,
the following files will be created

   CBT.MVS38J.CNTL        - JCL
   CBT.MVS38J.ASM         - Assembler Source
   CBT.MVS38J.MACLIB      - Assembler Macros
   CBT.MVS38J.LOAD        - Preassembled load modules


The following functions etc are included
    APFCK    -  Check IEAAPFxx members for plausibility
    APFLS    -  List all APF priviledged datasets
    BRODSCAN -  Analyze SYS1.BRODSCAN *)
    CMDSBSYS -  the "#" command subsystem.  adds a lot of additional
                operator and/or TSO commands to MVS
                The source code of this package is provided on CBT tape
                249 file 266.  This file is required if you want to
                compile the package yourself.
    DISKM    -  Disk Mapping Program
    FCOOK    -  The fortune cookie jar
    MOVELOAD -  Preload IEHMOVE modules for better performance *)
    OSCMD    -  Execute OS commands from batch
    REQUEUE  -  Reques running job for later execution *)
    TAPEHDR  -  Display info about tape label *)
    SETPF    -  Set console PFKs from SETPFKxx parmlib members
    PA2SI    -  Pass JCL parameter to SYSIN
    PILOT    -  An MVS auto-pilot.  The package is
                a) work in progress
                b) hopefully growing in the future
                c) nevertheless functional
                It provides the facility to automatically reply to
                console WTORs, and to start MVS procedures as
                response to console WTOs
                It also allows to run scripts of MVS operator commands
                It is made up from the following modules
                * BSPPILOT - The Auto pilot communications task
                * BSPRUNSC - The RUN SCRIPTS module
                * IEECVXIT - An exit for automatically reply to WTORs
                             and to react to certain WTOs
                The fortune cookie jar and the SETPF function are also
                integrated into the BSP autopilot
    SMPSL    -  SMP Selection/filtering program.  see SMPSL@ for docs
    VTMWT    -  Wait for VTAM ACB to become active.  See VTMWT@ docs
./ ADD NAME=$ASMALL  8001-74083-74083-0908-00035-00035-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Assemble everything',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name:CBT.MVS38J.ASM($ASMALL)
//*
//* Desc: Assemble Everything
//*
//********************************************************************
//COMP1   EXEC COMPRESS,LIB='SYS2.LINKLIB'
//COMP2   EXEC COMPRESS,LIB='SYS2.CMDLIB'
//TSO     EXEC PGM=IKJEFT01
//SYSPRINT DD  SYSOUT=*
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  *
 SUBMIT 'CBT.MVS38J.CNTL(APFCK$)'
 SUBMIT 'CBT.MVS38J.CNTL(APFLS$)'
 SUBMIT 'CBT.MVS38J.CNTL(BRODSCN$)'
 SUBMIT 'CBT.MVS38J.CNTL(CVXIT$)'
 SUBMIT 'CBT.MVS38J.CNTL(DELAY$)'
 SUBMIT 'CBT.MVS38J.CNTL(DISKM$)'
 SUBMIT 'CBT.MVS38J.CNTL(FCOOK$)'
 SUBMIT 'CBT.MVS38J.CNTL(MOVELOD$)'
 SUBMIT 'CBT.MVS38J.CNTL(OSCMD$)'
 SUBMIT 'CBT.MVS38J.CNTL(PA2SI$)'
 SUBMIT 'CBT.MVS38J.CNTL(REQUEUE$)'
 SUBMIT 'CBT.MVS38J.CNTL(RUNSC$)'
 SUBMIT 'CBT.MVS38J.CNTL(SETPF$)'
 SUBMIT 'CBT.MVS38J.CNTL(SMPSL$)'
 SUBMIT 'CBT.MVS38J.CNTL(TAPEHDR$)'
 SUBMIT 'CBT.MVS38J.CNTL(VTAMWT$)'
./ ADD NAME=$UNLOAD  8012-74031-74082-1819-00065-00029-00000-HERC01
//HERC01   JOB (CBT),
//             'Build Addon Tape',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL($UNLOAD)                                  *
//*                                                                  *
//*  Type: JCL                                                       *
//*                                                                  *
//*  Desc: Unload MVS 3.8J Addon files to tape                       *
//*                                                                  *
//********************************************************************
//UNLOAD  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//CNTLOUT  DD  DISP=(,KEEP),DSN=BSP.MVS38J.CNTL,
//             UNIT=(TAPE,,DEFER),
//             VOL=SER=BSP38J,
//             LABEL=(1,SL)
//MACOUT   DD  DISP=(,KEEP),DSN=BSP.MVS38J.MACLIB,
//             UNIT=AFF=CNTLOUT,
//             VOL=REF=*.CNTLOUT,
//             LABEL=(2,SL)
//ASMOUT   DD  DISP=(,KEEP),DSN=BSP.MVS38J.ASM,
//             UNIT=AFF=CNTLOUT,
//             VOL=REF=*.MACOUT,
//             LABEL=(3,SL)
//LOADOUT  DD  DISP=(,KEEP),DSN=BSP.MVS38J.LOAD,
//             UNIT=AFF=CNTLOUT,
//             VOL=REF=*.ASMOUT,
//             LABEL=(4,SL)
//CMDSBOUT DD  DISP=(,KEEP),DSN=BSP.MVS38J.CMDSBSYS,
//             UNIT=AFF=CNTLOUT,
//             VOL=REF=*.LOADOUT,
//             LABEL=(5,SL)
//CNTLIN   DD  DISP=SHR,DSN=CBT.MVS38J.CNTL
//MACIN    DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB
//ASMIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM
//LOADIN   DD  DISP=SHR,DSN=SYS2.LINKLIB
//CMDSBIN  DD  DISP=SHR,DSN=CBT.CMDSBSYS.LINKLIB
//SYSIN    DD  *
 C I=CNTLIN,O=CNTLOUT
 C I=MACIN,O=MACOUT
 C I=ASMIN,O=ASMOUT
 C I=LOADIN,O=LOADOUT
 SELECT MEMBER=BSPAPFCK
 SELECT MEMBER=BSPAPFLS
 SELECT MEMBER=BSPVTMWT
 SELECT MEMBER=(BSPFCOOK,COOKIE,FCOOKIE,FORTUNE,MURPHY)
 SELECT MEMBER=BSPSETPF
 SELECT MEMBER=BSPOSCMD
 SELECT MEMBER=BSPPA2SI
 SELECT MEMBER=BSPPILOT
 SELECT MEMBER=BSPRUNSC
 SELECT MEMBER=CBT973
 SELECT MEMBER=DELAY
 SELECT MEMBER=BRODSCAN
 SELECT MEMBER=REQUEUE
 SELECT MEMBER=TAPEHDR
 SELECT MEMBER=(DISKMAP,DISKMAPA)
 SELECT MEMBER=(MOVELOAD,MOVELOD)
 SELECT MEMBER=SMPTFSEL
 C I=CMDSBIN,O=CMDSBOUT
./ ADD NAME=APFCK$   8010-74008-74038-1044-00038-00537-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPAPFCK',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(APFCK$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPAPFCK Module                               *
//*                                                                  *
//*  Desc: Checks if entries in IEAAPFxx in SYS1.PARMLIB are okay    *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPAPFCK)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPAPFCK)   <<=== CHANGE
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=APFCK#   8007-74005-74082-1813-00014-00491-00000-HERC01
//HERC01   JOB (CBT),
//             'Run BSPAPFLS',
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01,
//             CLASS=A
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(APFCK#)                                   *
//*                                                                  *
//*  Type: Run BSPAPFCK module                                       *
//*                                                                  *
//********************************************************************
//LISTAPF EXEC PGM=BSPAPFLS
./ ADD NAME=APFCK@   8003-74014-74037-2023-00019-00545-00000-HERC01
 This program scans PARMLIB for members with the name IEAAPFxx.
 For each line in each member the following checks are made:

  a1) Is the dataset cataloged?
  a2) If yes, is the dataset cataloged on the named volume?
  b)  Is the named volume available?
  c)  Is the dataset physically located on the named volume?

  Required DD names:

  PARMLIB    points to PDS with IEAAPFxx members to be checked
  SYSPRINT   output queue for report

  Assembly and Link JCL can be found in CBT.MVS38J.CNTL(APFCK#)
  Execution JCL can be found in         CBT.MVS38J.CNTL(APFCK$)

  This program has been tested on the Turnkey MVS system Version 3
  It is _not_ guaranteed to be bug-free (which program is?)
  Use at your own risk
./ ADD NAME=APFLS$   8006-74082-74083-1014-00044-00038-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPAPFLS',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(APFLS$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPAPFLS Module                               *
//*                                                                  *
//*  Desc: List APF privilegded data sets                            *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPAPFLS)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPAPFLS)   <<=== CHANGE
//*YSLMOD  DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1,1)),
//*            DCB=SYS2.LINKLIB,DSN=&&GOSET(GO)
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//
//LISTAPF EXEC PGM=*.LINK.SYSLMOD,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
./ ADD NAME=APFLS#   8001-74082-74082-2308-00014-00017-00000-HERC01
//HERC01   JOB (CBT),
//             'Run BSPAPFLS',
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01,
//             CLASS=A
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(APFLS#)                                   *
//*                                                                  *
//*  Type: Run BSPAPFLS module                                       *
//*                                                                  *
//********************************************************************
//LISTAPF EXEC PGM=BSPAPFLS
./ ADD NAME=APFLS@   8000-74082-74082-1812-00019-00019-00000-HERC01
 This program scans PARMLIB for members with the name IEAAPFxx.
 For each line in each member the following checks are made:

  a1) Is the dataset cataloged?
  a2) If yes, is the dataset cataloged on the named volume?
  b)  Is the named volume available?
  c)  Is the dataset physically located on the named volume?

  Required DD names:

  PARMLIB    points to PDS with IEAAPFxx members to be checked
  SYSPRINT   output queue for report

  Assembly and Link JCL can be found in CBT.MVS38J.CNTL(APFCK#)
  Execution JCL can be found in         CBT.MVS38J.CNTL(APFCK$)

  This program has been tested on the Turnkey MVS system Version 3
  It is _not_ guaranteed to be bug-free (which program is?)
  Use at your own risk
./ ADD NAME=BRODSCN$ 8000-74082-74082-1652-00040-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BRODSCAN',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(BRODSCN$)                                 *
//*                                                                  *
//*  Type: Assembly of BSPAPFCK Module                               *
//*                                                                  *
//*  Desc: Checks if entries in IEAAPFxx in SYS1.PARMLIB are okay    *
//*                                                                  *
//*  Note: BRODSCAN source has been sent to me by somitcw@yahoo.com  *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BRODSCAN)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BRODSCAN)   <<=== CHANGE
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=BRODSCN# 8002-74082-74082-1618-00018-00056-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Run BRODSCAN',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(BRODSCN#)
//*
//* Desc: Run the BRODSCAN program
//*
//********************************************************************
//BRODSCN EXEC PGM=BRODSCAN
//BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR
//SYSOUT   DD  SYSOUT=*,DCB=BLKSIZE=133
//* SYSUDUMP DD  SYSOUT=*
//
./ ADD NAME=BRODSCN@ 8001-74082-74082-1707-00050-00056-00000-HERC01


BRODSCAN -

    This program analyzes the TSO broadcast dataset.  It
    displays the number of available blocks and how they
    are used.  It also displays the TSO users who have
    messages waiting.  In addition it also does a validity
    check on records which are in the message pool to assure
    they are chained off of a user record.  According to
    documentation, instances occur which can result in these
    garbage records existing.


SAMPLE EXECUTION JCL can be found in CBT.MVS38J.CNTL(BRODSCN#)

SAMPLE EXECUTION OUTPUT

 TOTAL AVAILABLE BLOCKS IN DATASET                              795
 BLOCKS NECESSARY FOR BROADCST MSGS (DIRECTORY/MESSAGES)        104

 < THE FOLLOWING KEY BREAKDOWN WAS FOUND >
          HEADER RECORDS                                          1
          BROADCAST MSG DIRECTORY RECORDS                         4
          BROADCAST MESSAGE RECORDS                             100
          USERID INDEX RECORDS                                   64
          NON-BROADCAST MESSAGE RECORDS                         133
          FREE RECORDS                                          493

 < THE FOLLOWING USERS HAVE MESSAGES WAITING >
     A7T           21          C1F            1          C1G         1
     C1Q            1          C23            1          C28         1
     C3I            2          C37            2          C4K        10
     C4X            1          C45            1          C47         1
     C5D            1          C5M            1          C52         1
     C77            1          C79            1          D40         5
     HAE            1          HAR            1          HA7         1
     HA9            3          HCE            2          HCH         3
     HCN            3          HC2            1          HC8         1
     HD3            9          HEB            1          HE9         1
     HZE            1          HZI            3          HZM         2
     HZN            1          HZP            1          HZV         1
     HZ0            1          HZ4            1          KP1         1
     K14            5          MS8            1          SCM         8
     SFF           22          SFO            5          SFW         1
     SWW           10          SW2            5          SW7         1

 NUMBER OF TSO USERS DEFINED IN DATASET                         571

 BLOCKS FOUND TO BE GARBAGED                                      0
./ ADD NAME=CBT000   8001-74013-74013-2227-00026-00026-00000-HERC01
//HERC01  JOB  (CBT),
//             'Remove CBT cat',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(CBT000)
//*
//* Desc: Cleanup/delete CBT Usercatalogs
//*
//********************************************************************
//DELETE  EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE SYS1.UCAT.CBT129 FORCE PURGE USERCATALOG
 DELETE SYS1.UCAT.CBT249 FORCE PURGE USERCATALOG
 DELETE SYS1.UCAT.CBT429 FORCE PURGE USERCATALOG
 EXPORT SYS1.UCAT.CBT129 DISCONNECT
 EXPORT SYS1.UCAT.CBT429 DISCONNECT
 EXPORT SYS1.UCAT.CBT249 DISCONNECT
 DELETE CBT429 ALIAS
 DELETE CBT249 ALIAS
 DELETE CBT129 ALIAS
 DELETE CBT072 ALIAS
./ ADD NAME=CBT010   8003-74013-74076-1614-00025-00026-00000-HERC01
//HERC01  JOB  (CBT),
//             'Create CBT cat',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(CBT010)
//*
//* Desc: Create Usercatalog
//*
//********************************************************************
//DEFUCAT EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//CBTCAT   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=CBTCAT
//SYSIN    DD  *
 DEFINE USERCATALOG( -
                     NAME(SYS1.UCAT.CBT) -
                     FILE(CBTCAT) -
                     VOLUME(CBTCAT) -
                     CYL(30) -
                     BUFSPC(32768) -
                     NRVBL -
                   )
./ ADD NAME=CBT020   8003-74013-74038-1743-00021-00025-00000-HERC01
//HERC01  JOB  (CBT),
//             'Define CBT Alias',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(CBT020)
//*
//* Desc: Define CBT alias entries
//*
//********************************************************************
//DEFUCAT EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DEFINE ALIAS(NAME(CBTCOV) RELATE(SYS1.UCAT.CBT))
 DEFINE ALIAS(NAME(CBT072) RELATE(SYS1.UCAT.CBT))
 DEFINE ALIAS(NAME(CBT129) RELATE(SYS1.UCAT.CBT))
 DEFINE ALIAS(NAME(CBT249) RELATE(SYS1.UCAT.CBT))
 DEFINE ALIAS(NAME(CBT429) RELATE(SYS1.UCAT.CBT))
./ ADD NAME=CBT030   8005-74013-74076-1640-00322-00909-00000-HERC01
//HERC01  JOB  (CBT),
//             'Catalog CBT Overflow',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             REGION=2048K
//*********************************************************************
//*
//*                       CBT Installation
//*                       ================
//*
//*Name: CBT.MVS38J.SETUP(CBT030)
//*
//* DESC: Define the datasets of the CBT overflow tape to
//*       our private CBT catalog
//*
//*********************************************************************
//*
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 SET LASTCC=0
 SET MAXCC=0
 DEFINE NONVSAM(NAME(CBTCOV.FILE000) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE001) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE002) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE003) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE004) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE005) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE006) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE007) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE008) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE009) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE010) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE011) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE012) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE013) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE014) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE015) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE016) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE017) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE018) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE019) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE020) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE021) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE022) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE023) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE024) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE025) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE026) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE027) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE028) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE029) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE030) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE031) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE032) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE033) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE034) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE035) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE036) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE037) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE038) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE039) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE040) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE041) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE042) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE043) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE044) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE045) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE046) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE047) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE048) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE049) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE050) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE051) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE052) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE053) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE054) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE055) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE056) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE057) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE058) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE059) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE060) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE061) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE062) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE063) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE064) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE065) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE066) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE067) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE068) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE069) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE070) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE071) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE072) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE073) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE074) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE075) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE076) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE077) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE078) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE079) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE080) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE081) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE082) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE083) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE084) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE085) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE086) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE087) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE088) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE089) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE090) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE091) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE092) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE093) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE094) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE095) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE096) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE097) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE098) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE099) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE100) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE101) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE102) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE103) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE104) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE105) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE106) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE107) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE108) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE109) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE110) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE111) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE112) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE113) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE114) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE115) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE116) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE117) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE118) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE119) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE120) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE121) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE122) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE123) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE124) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE125) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE126) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE127) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE128) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE129) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE130) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE131) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE132) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE133) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE134) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE135) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE136) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE137) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE138) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE139) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE140) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE141) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE142) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE143) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE144) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE145) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE146) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE147) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE148) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE149) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE150) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE151) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE152) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE153) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE154) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE155) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE156) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE157) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE158) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE159) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE160) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE161) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE162) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE163) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE164) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE165) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE166) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE167) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE168) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE169) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE170) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE171) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE172) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE173) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE174) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE175) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE176) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE177) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE178) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE179) DEVT(3350) VOL(CBT000))
 DEFINE NONVSAM(NAME(CBTCOV.FILE180) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE181) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE182) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE183) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE184) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE185) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE186) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE187) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE188) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE189) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE190) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE191) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE192) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE193) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE194) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE195) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE196) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE197) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE198) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE199) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE200) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE201) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE202) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE203) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE204) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE205) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE206) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE207) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE208) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE209) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE210) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE211) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE212) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE213) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE214) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE215) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE216) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE217) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE218) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE219) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE220) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE221) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE222) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE223) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE224) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE225) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE226) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE227) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE228) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE229) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE230) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE231) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE232) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE233) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE234) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE235) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE236) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE237) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE238) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE239) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE240) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE241) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE242) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE243) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE244) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE245) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE246) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE247) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE248) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE249) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE250) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE251) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE252) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE253) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE254) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE255) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE256) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE257) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE258) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE259) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE260) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE261) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE262) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE263) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE264) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE265) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE266) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE267) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE268) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE269) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE270) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE271) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE272) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE273) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE274) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE275) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE276) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE277) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE278) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE279) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE280) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE281) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE282) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE283) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE284) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE285) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE286) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE287) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE288) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE289) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE290) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE291) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE292) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE293) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE294) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBTCOV.FILE295) DEVT(3350) VOL(CBT001))
 SET LASTCC = 0
 SET MAXCC = 0
./ ADD NAME=CBT040   8003-74013-74076-1641-00991-01501-00000-HERC01
//HERC01  JOB  (CBT),
//             'Catalog CBT429',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             REGION=2048K
//*********************************************************************
//*
//*                       CBT Installation
//*                       ================
//*
//* Name: CBT.MVS38J.SETUP(CBT040)
//*
//* Desc: Define the CBT429 files into this user catalog
//*
//*********************************************************************
//*
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE CBT429.FILE000 NOSCRATCH NONVSAM
 DELETE CBT429.FILE001 NOSCRATCH NONVSAM
 DELETE CBT429.FILE002 NOSCRATCH NONVSAM
 DELETE CBT429.FILE003 NOSCRATCH NONVSAM
 DELETE CBT429.FILE004 NOSCRATCH NONVSAM
 DELETE CBT429.FILE005 NOSCRATCH NONVSAM
 DELETE CBT429.FILE006 NOSCRATCH NONVSAM
 DELETE CBT429.FILE007 NOSCRATCH NONVSAM
 DELETE CBT429.FILE008 NOSCRATCH NONVSAM
 DELETE CBT429.FILE009 NOSCRATCH NONVSAM
 DELETE CBT429.FILE010 NOSCRATCH NONVSAM
 DELETE CBT429.FILE011 NOSCRATCH NONVSAM
 DELETE CBT429.FILE012 NOSCRATCH NONVSAM
 DELETE CBT429.FILE013 NOSCRATCH NONVSAM
 DELETE CBT429.FILE014 NOSCRATCH NONVSAM
 DELETE CBT429.FILE015 NOSCRATCH NONVSAM
 DELETE CBT429.FILE016 NOSCRATCH NONVSAM
 DELETE CBT429.FILE017 NOSCRATCH NONVSAM
 DELETE CBT429.FILE018 NOSCRATCH NONVSAM
 DELETE CBT429.FILE019 NOSCRATCH NONVSAM
 DELETE CBT429.FILE020 NOSCRATCH NONVSAM
 DELETE CBT429.FILE021 NOSCRATCH NONVSAM
 DELETE CBT429.FILE022 NOSCRATCH NONVSAM
 DELETE CBT429.FILE023 NOSCRATCH NONVSAM
 DELETE CBT429.FILE024 NOSCRATCH NONVSAM
 DELETE CBT429.FILE025 NOSCRATCH NONVSAM
 DELETE CBT429.FILE026 NOSCRATCH NONVSAM
 DELETE CBT429.FILE027 NOSCRATCH NONVSAM
 DELETE CBT429.FILE028 NOSCRATCH NONVSAM
 DELETE CBT429.FILE029 NOSCRATCH NONVSAM
 DELETE CBT429.FILE030 NOSCRATCH NONVSAM
 DELETE CBT429.FILE031 NOSCRATCH NONVSAM
 DELETE CBT429.FILE032 NOSCRATCH NONVSAM
 DELETE CBT429.FILE033 NOSCRATCH NONVSAM
 DELETE CBT429.FILE034 NOSCRATCH NONVSAM
 DELETE CBT429.FILE035 NOSCRATCH NONVSAM
 DELETE CBT429.FILE036 NOSCRATCH NONVSAM
 DELETE CBT429.FILE037 NOSCRATCH NONVSAM
 DELETE CBT429.FILE038 NOSCRATCH NONVSAM
 DELETE CBT429.FILE039 NOSCRATCH NONVSAM
 DELETE CBT429.FILE040 NOSCRATCH NONVSAM
 DELETE CBT429.FILE041 NOSCRATCH NONVSAM
 DELETE CBT429.FILE042 NOSCRATCH NONVSAM
 DELETE CBT429.FILE043 NOSCRATCH NONVSAM
 DELETE CBT429.FILE044 NOSCRATCH NONVSAM
 DELETE CBT429.FILE045 NOSCRATCH NONVSAM
 DELETE CBT429.FILE046 NOSCRATCH NONVSAM
 DELETE CBT429.FILE047 NOSCRATCH NONVSAM
 DELETE CBT429.FILE048 NOSCRATCH NONVSAM
 DELETE CBT429.FILE049 NOSCRATCH NONVSAM
 DELETE CBT429.FILE050 NOSCRATCH NONVSAM
 DELETE CBT429.FILE051 NOSCRATCH NONVSAM
 DELETE CBT429.FILE052 NOSCRATCH NONVSAM
 DELETE CBT429.FILE053 NOSCRATCH NONVSAM
 DELETE CBT429.FILE054 NOSCRATCH NONVSAM
 DELETE CBT429.FILE055 NOSCRATCH NONVSAM
 DELETE CBT429.FILE056 NOSCRATCH NONVSAM
 DELETE CBT429.FILE057 NOSCRATCH NONVSAM
 DELETE CBT429.FILE058 NOSCRATCH NONVSAM
 DELETE CBT429.FILE059 NOSCRATCH NONVSAM
 DELETE CBT429.FILE060 NOSCRATCH NONVSAM
 DELETE CBT429.FILE061 NOSCRATCH NONVSAM
 DELETE CBT429.FILE062 NOSCRATCH NONVSAM
 DELETE CBT429.FILE063 NOSCRATCH NONVSAM
 DELETE CBT429.FILE064 NOSCRATCH NONVSAM
 DELETE CBT429.FILE065 NOSCRATCH NONVSAM
 DELETE CBT429.FILE066 NOSCRATCH NONVSAM
 DELETE CBT429.FILE067 NOSCRATCH NONVSAM
 DELETE CBT429.FILE068 NOSCRATCH NONVSAM
 DELETE CBT429.FILE069 NOSCRATCH NONVSAM
 DELETE CBT429.FILE070 NOSCRATCH NONVSAM
 DELETE CBT429.FILE071 NOSCRATCH NONVSAM
 DELETE CBT429.FILE072 NOSCRATCH NONVSAM
 DELETE CBT429.FILE073 NOSCRATCH NONVSAM
 DELETE CBT429.FILE074 NOSCRATCH NONVSAM
 DELETE CBT429.FILE075 NOSCRATCH NONVSAM
 DELETE CBT429.FILE076 NOSCRATCH NONVSAM
 DELETE CBT429.FILE077 NOSCRATCH NONVSAM
 DELETE CBT429.FILE078 NOSCRATCH NONVSAM
 DELETE CBT429.FILE079 NOSCRATCH NONVSAM
 DELETE CBT429.FILE080 NOSCRATCH NONVSAM
 DELETE CBT429.FILE081 NOSCRATCH NONVSAM
 DELETE CBT429.FILE082 NOSCRATCH NONVSAM
 DELETE CBT429.FILE083 NOSCRATCH NONVSAM
 DELETE CBT429.FILE084 NOSCRATCH NONVSAM
 DELETE CBT429.FILE085 NOSCRATCH NONVSAM
 DELETE CBT429.FILE086 NOSCRATCH NONVSAM
 DELETE CBT429.FILE087 NOSCRATCH NONVSAM
 DELETE CBT429.FILE088 NOSCRATCH NONVSAM
 DELETE CBT429.FILE089 NOSCRATCH NONVSAM
 DELETE CBT429.FILE090 NOSCRATCH NONVSAM
 DELETE CBT429.FILE091 NOSCRATCH NONVSAM
 DELETE CBT429.FILE092 NOSCRATCH NONVSAM
 DELETE CBT429.FILE093 NOSCRATCH NONVSAM
 DELETE CBT429.FILE094 NOSCRATCH NONVSAM
 DELETE CBT429.FILE095 NOSCRATCH NONVSAM
 DELETE CBT429.FILE096 NOSCRATCH NONVSAM
 DELETE CBT429.FILE097 NOSCRATCH NONVSAM
 DELETE CBT429.FILE098 NOSCRATCH NONVSAM
 DELETE CBT429.FILE099 NOSCRATCH NONVSAM
 DELETE CBT429.FILE100 NOSCRATCH NONVSAM
 DELETE CBT429.FILE101 NOSCRATCH NONVSAM
 DELETE CBT429.FILE102 NOSCRATCH NONVSAM
 DELETE CBT429.FILE103 NOSCRATCH NONVSAM
 DELETE CBT429.FILE104 NOSCRATCH NONVSAM
 DELETE CBT429.FILE105 NOSCRATCH NONVSAM
 DELETE CBT429.FILE106 NOSCRATCH NONVSAM
 DELETE CBT429.FILE107 NOSCRATCH NONVSAM
 DELETE CBT429.FILE108 NOSCRATCH NONVSAM
 DELETE CBT429.FILE109 NOSCRATCH NONVSAM
 DELETE CBT429.FILE110 NOSCRATCH NONVSAM
 DELETE CBT429.FILE111 NOSCRATCH NONVSAM
 DELETE CBT429.FILE112 NOSCRATCH NONVSAM
 DELETE CBT429.FILE113 NOSCRATCH NONVSAM
 DELETE CBT429.FILE114 NOSCRATCH NONVSAM
 DELETE CBT429.FILE115 NOSCRATCH NONVSAM
 DELETE CBT429.FILE116 NOSCRATCH NONVSAM
 DELETE CBT429.FILE117 NOSCRATCH NONVSAM
 DELETE CBT429.FILE118 NOSCRATCH NONVSAM
 DELETE CBT429.FILE119 NOSCRATCH NONVSAM
 DELETE CBT429.FILE120 NOSCRATCH NONVSAM
 DELETE CBT429.FILE121 NOSCRATCH NONVSAM
 DELETE CBT429.FILE122 NOSCRATCH NONVSAM
 DELETE CBT429.FILE123 NOSCRATCH NONVSAM
 DELETE CBT429.FILE124 NOSCRATCH NONVSAM
 DELETE CBT429.FILE125 NOSCRATCH NONVSAM
 DELETE CBT429.FILE126 NOSCRATCH NONVSAM
 DELETE CBT429.FILE127 NOSCRATCH NONVSAM
 DELETE CBT429.FILE128 NOSCRATCH NONVSAM
 DELETE CBT429.FILE129 NOSCRATCH NONVSAM
 DELETE CBT429.FILE130 NOSCRATCH NONVSAM
 DELETE CBT429.FILE131 NOSCRATCH NONVSAM
 DELETE CBT429.FILE132 NOSCRATCH NONVSAM
 DELETE CBT429.FILE133 NOSCRATCH NONVSAM
 DELETE CBT429.FILE134 NOSCRATCH NONVSAM
 DELETE CBT429.FILE135 NOSCRATCH NONVSAM
 DELETE CBT429.FILE136 NOSCRATCH NONVSAM
 DELETE CBT429.FILE137 NOSCRATCH NONVSAM
 DELETE CBT429.FILE138 NOSCRATCH NONVSAM
 DELETE CBT429.FILE139 NOSCRATCH NONVSAM
 DELETE CBT429.FILE140 NOSCRATCH NONVSAM
 DELETE CBT429.FILE141 NOSCRATCH NONVSAM
 DELETE CBT429.FILE142 NOSCRATCH NONVSAM
 DELETE CBT429.FILE143 NOSCRATCH NONVSAM
 DELETE CBT429.FILE144 NOSCRATCH NONVSAM
 DELETE CBT429.FILE145 NOSCRATCH NONVSAM
 DELETE CBT429.FILE146 NOSCRATCH NONVSAM
 DELETE CBT429.FILE147 NOSCRATCH NONVSAM
 DELETE CBT429.FILE148 NOSCRATCH NONVSAM
 DELETE CBT429.FILE149 NOSCRATCH NONVSAM
 DELETE CBT429.FILE150 NOSCRATCH NONVSAM
 DELETE CBT429.FILE151 NOSCRATCH NONVSAM
 DELETE CBT429.FILE152 NOSCRATCH NONVSAM
 DELETE CBT429.FILE153 NOSCRATCH NONVSAM
 DELETE CBT429.FILE154 NOSCRATCH NONVSAM
 DELETE CBT429.FILE155 NOSCRATCH NONVSAM
 DELETE CBT429.FILE156 NOSCRATCH NONVSAM
 DELETE CBT429.FILE157 NOSCRATCH NONVSAM
 DELETE CBT429.FILE158 NOSCRATCH NONVSAM
 DELETE CBT429.FILE159 NOSCRATCH NONVSAM
 DELETE CBT429.FILE160 NOSCRATCH NONVSAM
 DELETE CBT429.FILE161 NOSCRATCH NONVSAM
 DELETE CBT429.FILE162 NOSCRATCH NONVSAM
 DELETE CBT429.FILE163 NOSCRATCH NONVSAM
 DELETE CBT429.FILE164 NOSCRATCH NONVSAM
 DELETE CBT429.FILE165 NOSCRATCH NONVSAM
 DELETE CBT429.FILE166 NOSCRATCH NONVSAM
 DELETE CBT429.FILE167 NOSCRATCH NONVSAM
 DELETE CBT429.FILE168 NOSCRATCH NONVSAM
 DELETE CBT429.FILE169 NOSCRATCH NONVSAM
 DELETE CBT429.FILE170 NOSCRATCH NONVSAM
 DELETE CBT429.FILE171 NOSCRATCH NONVSAM
 DELETE CBT429.FILE172 NOSCRATCH NONVSAM
 DELETE CBT429.FILE173 NOSCRATCH NONVSAM
 DELETE CBT429.FILE174 NOSCRATCH NONVSAM
 DELETE CBT429.FILE175 NOSCRATCH NONVSAM
 DELETE CBT429.FILE176 NOSCRATCH NONVSAM
 DELETE CBT429.FILE177 NOSCRATCH NONVSAM
 DELETE CBT429.FILE178 NOSCRATCH NONVSAM
 DELETE CBT429.FILE179 NOSCRATCH NONVSAM
 DELETE CBT429.FILE180 NOSCRATCH NONVSAM
 DELETE CBT429.FILE181 NOSCRATCH NONVSAM
 DELETE CBT429.FILE182 NOSCRATCH NONVSAM
 DELETE CBT429.FILE183 NOSCRATCH NONVSAM
 DELETE CBT429.FILE184 NOSCRATCH NONVSAM
 DELETE CBT429.FILE185 NOSCRATCH NONVSAM
 DELETE CBT429.FILE186 NOSCRATCH NONVSAM
 DELETE CBT429.FILE187 NOSCRATCH NONVSAM
 DELETE CBT429.FILE188 NOSCRATCH NONVSAM
 DELETE CBT429.FILE189 NOSCRATCH NONVSAM
 DELETE CBT429.FILE190 NOSCRATCH NONVSAM
 DELETE CBT429.FILE191 NOSCRATCH NONVSAM
 DELETE CBT429.FILE192 NOSCRATCH NONVSAM
 DELETE CBT429.FILE193 NOSCRATCH NONVSAM
 DELETE CBT429.FILE194 NOSCRATCH NONVSAM
 DELETE CBT429.FILE195 NOSCRATCH NONVSAM
 DELETE CBT429.FILE196 NOSCRATCH NONVSAM
 DELETE CBT429.FILE197 NOSCRATCH NONVSAM
 DELETE CBT429.FILE198 NOSCRATCH NONVSAM
 DELETE CBT429.FILE199 NOSCRATCH NONVSAM
 DELETE CBT429.FILE200 NOSCRATCH NONVSAM
 DELETE CBT429.FILE201 NOSCRATCH NONVSAM
 DELETE CBT429.FILE202 NOSCRATCH NONVSAM
 DELETE CBT429.FILE203 NOSCRATCH NONVSAM
 DELETE CBT429.FILE204 NOSCRATCH NONVSAM
 DELETE CBT429.FILE205 NOSCRATCH NONVSAM
 DELETE CBT429.FILE206 NOSCRATCH NONVSAM
 DELETE CBT429.FILE207 NOSCRATCH NONVSAM
 DELETE CBT429.FILE208 NOSCRATCH NONVSAM
 DELETE CBT429.FILE209 NOSCRATCH NONVSAM
 DELETE CBT429.FILE210 NOSCRATCH NONVSAM
 DELETE CBT429.FILE211 NOSCRATCH NONVSAM
 DELETE CBT429.FILE212 NOSCRATCH NONVSAM
 DELETE CBT429.FILE213 NOSCRATCH NONVSAM
 DELETE CBT429.FILE214 NOSCRATCH NONVSAM
 DELETE CBT429.FILE215 NOSCRATCH NONVSAM
 DELETE CBT429.FILE216 NOSCRATCH NONVSAM
 DELETE CBT429.FILE217 NOSCRATCH NONVSAM
 DELETE CBT429.FILE218 NOSCRATCH NONVSAM
 DELETE CBT429.FILE219 NOSCRATCH NONVSAM
 DELETE CBT429.FILE220 NOSCRATCH NONVSAM
 DELETE CBT429.FILE221 NOSCRATCH NONVSAM
 DELETE CBT429.FILE222 NOSCRATCH NONVSAM
 DELETE CBT429.FILE223 NOSCRATCH NONVSAM
 DELETE CBT429.FILE224 NOSCRATCH NONVSAM
 DELETE CBT429.FILE225 NOSCRATCH NONVSAM
 DELETE CBT429.FILE226 NOSCRATCH NONVSAM
 DELETE CBT429.FILE227 NOSCRATCH NONVSAM
 DELETE CBT429.FILE228 NOSCRATCH NONVSAM
 DELETE CBT429.FILE229 NOSCRATCH NONVSAM
 DELETE CBT429.FILE230 NOSCRATCH NONVSAM
 DELETE CBT429.FILE231 NOSCRATCH NONVSAM
 DELETE CBT429.FILE232 NOSCRATCH NONVSAM
 DELETE CBT429.FILE233 NOSCRATCH NONVSAM
 DELETE CBT429.FILE234 NOSCRATCH NONVSAM
 DELETE CBT429.FILE235 NOSCRATCH NONVSAM
 DELETE CBT429.FILE236 NOSCRATCH NONVSAM
 DELETE CBT429.FILE237 NOSCRATCH NONVSAM
 DELETE CBT429.FILE238 NOSCRATCH NONVSAM
 DELETE CBT429.FILE239 NOSCRATCH NONVSAM
 DELETE CBT429.FILE240 NOSCRATCH NONVSAM
 DELETE CBT429.FILE241 NOSCRATCH NONVSAM
 DELETE CBT429.FILE242 NOSCRATCH NONVSAM
 DELETE CBT429.FILE243 NOSCRATCH NONVSAM
 DELETE CBT429.FILE244 NOSCRATCH NONVSAM
 DELETE CBT429.FILE245 NOSCRATCH NONVSAM
 DELETE CBT429.FILE246 NOSCRATCH NONVSAM
 DELETE CBT429.FILE247 NOSCRATCH NONVSAM
 DELETE CBT429.FILE248 NOSCRATCH NONVSAM
 DELETE CBT429.FILE249 NOSCRATCH NONVSAM
 DELETE CBT429.FILE250 NOSCRATCH NONVSAM
 DELETE CBT429.FILE251 NOSCRATCH NONVSAM
 DELETE CBT429.FILE252 NOSCRATCH NONVSAM
 DELETE CBT429.FILE253 NOSCRATCH NONVSAM
 DELETE CBT429.FILE254 NOSCRATCH NONVSAM
 DELETE CBT429.FILE255 NOSCRATCH NONVSAM
 DELETE CBT429.FILE256 NOSCRATCH NONVSAM
 DELETE CBT429.FILE257 NOSCRATCH NONVSAM
 DELETE CBT429.FILE258 NOSCRATCH NONVSAM
 DELETE CBT429.FILE259 NOSCRATCH NONVSAM
 DELETE CBT429.FILE260 NOSCRATCH NONVSAM
 DELETE CBT429.FILE261 NOSCRATCH NONVSAM
 DELETE CBT429.FILE262 NOSCRATCH NONVSAM
 DELETE CBT429.FILE263 NOSCRATCH NONVSAM
 DELETE CBT429.FILE264 NOSCRATCH NONVSAM
 DELETE CBT429.FILE265 NOSCRATCH NONVSAM
 DELETE CBT429.FILE266 NOSCRATCH NONVSAM
 DELETE CBT429.FILE267 NOSCRATCH NONVSAM
 DELETE CBT429.FILE268 NOSCRATCH NONVSAM
 DELETE CBT429.FILE269 NOSCRATCH NONVSAM
 DELETE CBT429.FILE270 NOSCRATCH NONVSAM
 DELETE CBT429.FILE271 NOSCRATCH NONVSAM
 DELETE CBT429.FILE272 NOSCRATCH NONVSAM
 DELETE CBT429.FILE273 NOSCRATCH NONVSAM
 DELETE CBT429.FILE274 NOSCRATCH NONVSAM
 DELETE CBT429.FILE275 NOSCRATCH NONVSAM
 DELETE CBT429.FILE276 NOSCRATCH NONVSAM
 DELETE CBT429.FILE277 NOSCRATCH NONVSAM
 DELETE CBT429.FILE278 NOSCRATCH NONVSAM
 DELETE CBT429.FILE279 NOSCRATCH NONVSAM
 DELETE CBT429.FILE280 NOSCRATCH NONVSAM
 DELETE CBT429.FILE281 NOSCRATCH NONVSAM
 DELETE CBT429.FILE282 NOSCRATCH NONVSAM
 DELETE CBT429.FILE283 NOSCRATCH NONVSAM
 DELETE CBT429.FILE284 NOSCRATCH NONVSAM
 DELETE CBT429.FILE285 NOSCRATCH NONVSAM
 DELETE CBT429.FILE286 NOSCRATCH NONVSAM
 DELETE CBT429.FILE287 NOSCRATCH NONVSAM
 DELETE CBT429.FILE288 NOSCRATCH NONVSAM
 DELETE CBT429.FILE289 NOSCRATCH NONVSAM
 DELETE CBT429.FILE290 NOSCRATCH NONVSAM
 DELETE CBT429.FILE291 NOSCRATCH NONVSAM
 DELETE CBT429.FILE292 NOSCRATCH NONVSAM
 DELETE CBT429.FILE293 NOSCRATCH NONVSAM
 DELETE CBT429.FILE294 NOSCRATCH NONVSAM
 DELETE CBT429.FILE295 NOSCRATCH NONVSAM
 DELETE CBT429.FILE296 NOSCRATCH NONVSAM
 DELETE CBT429.FILE297 NOSCRATCH NONVSAM
 DELETE CBT429.FILE298 NOSCRATCH NONVSAM
 DELETE CBT429.FILE299 NOSCRATCH NONVSAM
 DELETE CBT429.FILE300 NOSCRATCH NONVSAM
 DELETE CBT429.FILE301 NOSCRATCH NONVSAM
 DELETE CBT429.FILE302 NOSCRATCH NONVSAM
 DELETE CBT429.FILE303 NOSCRATCH NONVSAM
 DELETE CBT429.FILE304 NOSCRATCH NONVSAM
 DELETE CBT429.FILE305 NOSCRATCH NONVSAM
 DELETE CBT429.FILE306 NOSCRATCH NONVSAM
 DELETE CBT429.FILE307 NOSCRATCH NONVSAM
 DELETE CBT429.FILE308 NOSCRATCH NONVSAM
 DELETE CBT429.FILE309 NOSCRATCH NONVSAM
 DELETE CBT429.FILE310 NOSCRATCH NONVSAM
 DELETE CBT429.FILE311 NOSCRATCH NONVSAM
 DELETE CBT429.FILE312 NOSCRATCH NONVSAM
 DELETE CBT429.FILE313 NOSCRATCH NONVSAM
 DELETE CBT429.FILE314 NOSCRATCH NONVSAM
 DELETE CBT429.FILE315 NOSCRATCH NONVSAM
 DELETE CBT429.FILE316 NOSCRATCH NONVSAM
 DELETE CBT429.FILE317 NOSCRATCH NONVSAM
 DELETE CBT429.FILE318 NOSCRATCH NONVSAM
 DELETE CBT429.FILE319 NOSCRATCH NONVSAM
 DELETE CBT429.FILE320 NOSCRATCH NONVSAM
 DELETE CBT429.FILE321 NOSCRATCH NONVSAM
 DELETE CBT429.FILE322 NOSCRATCH NONVSAM
 DELETE CBT429.FILE323 NOSCRATCH NONVSAM
 DELETE CBT429.FILE324 NOSCRATCH NONVSAM
 DELETE CBT429.FILE325 NOSCRATCH NONVSAM
 DELETE CBT429.FILE326 NOSCRATCH NONVSAM
 DELETE CBT429.FILE327 NOSCRATCH NONVSAM
 DELETE CBT429.FILE328 NOSCRATCH NONVSAM
 DELETE CBT429.FILE329 NOSCRATCH NONVSAM
 DELETE CBT429.FILE330 NOSCRATCH NONVSAM
 DELETE CBT429.FILE331 NOSCRATCH NONVSAM
 DELETE CBT429.FILE332 NOSCRATCH NONVSAM
 DELETE CBT429.FILE333 NOSCRATCH NONVSAM
 DELETE CBT429.FILE334 NOSCRATCH NONVSAM
 DELETE CBT429.FILE335 NOSCRATCH NONVSAM
 DELETE CBT429.FILE336 NOSCRATCH NONVSAM
 DELETE CBT429.FILE337 NOSCRATCH NONVSAM
 DELETE CBT429.FILE338 NOSCRATCH NONVSAM
 DELETE CBT429.FILE339 NOSCRATCH NONVSAM
 DELETE CBT429.FILE340 NOSCRATCH NONVSAM
 DELETE CBT429.FILE341 NOSCRATCH NONVSAM
 DELETE CBT429.FILE342 NOSCRATCH NONVSAM
 DELETE CBT429.FILE343 NOSCRATCH NONVSAM
 DELETE CBT429.FILE344 NOSCRATCH NONVSAM
 DELETE CBT429.FILE345 NOSCRATCH NONVSAM
 DELETE CBT429.FILE346 NOSCRATCH NONVSAM
 DELETE CBT429.FILE347 NOSCRATCH NONVSAM
 DELETE CBT429.FILE348 NOSCRATCH NONVSAM
 DELETE CBT429.FILE349 NOSCRATCH NONVSAM
 DELETE CBT429.FILE350 NOSCRATCH NONVSAM
 DELETE CBT429.FILE351 NOSCRATCH NONVSAM
 DELETE CBT429.FILE352 NOSCRATCH NONVSAM
 DELETE CBT429.FILE353 NOSCRATCH NONVSAM
 DELETE CBT429.FILE354 NOSCRATCH NONVSAM
 DELETE CBT429.FILE355 NOSCRATCH NONVSAM
 DELETE CBT429.FILE356 NOSCRATCH NONVSAM
 DELETE CBT429.FILE357 NOSCRATCH NONVSAM
 DELETE CBT429.FILE358 NOSCRATCH NONVSAM
 DELETE CBT429.FILE359 NOSCRATCH NONVSAM
 DELETE CBT429.FILE360 NOSCRATCH NONVSAM
 DELETE CBT429.FILE361 NOSCRATCH NONVSAM
 DELETE CBT429.FILE362 NOSCRATCH NONVSAM
 DELETE CBT429.FILE363 NOSCRATCH NONVSAM
 DELETE CBT429.FILE364 NOSCRATCH NONVSAM
 DELETE CBT429.FILE365 NOSCRATCH NONVSAM
 DELETE CBT429.FILE366 NOSCRATCH NONVSAM
 DELETE CBT429.FILE367 NOSCRATCH NONVSAM
 DELETE CBT429.FILE368 NOSCRATCH NONVSAM
 DELETE CBT429.FILE369 NOSCRATCH NONVSAM
 DELETE CBT429.FILE370 NOSCRATCH NONVSAM
 DELETE CBT429.FILE371 NOSCRATCH NONVSAM
 DELETE CBT429.FILE372 NOSCRATCH NONVSAM
 DELETE CBT429.FILE373 NOSCRATCH NONVSAM
 DELETE CBT429.FILE374 NOSCRATCH NONVSAM
 DELETE CBT429.FILE375 NOSCRATCH NONVSAM
 DELETE CBT429.FILE376 NOSCRATCH NONVSAM
 DELETE CBT429.FILE377 NOSCRATCH NONVSAM
 DELETE CBT429.FILE378 NOSCRATCH NONVSAM
 DELETE CBT429.FILE379 NOSCRATCH NONVSAM
 DELETE CBT429.FILE380 NOSCRATCH NONVSAM
 DELETE CBT429.FILE381 NOSCRATCH NONVSAM
 DELETE CBT429.FILE382 NOSCRATCH NONVSAM
 DELETE CBT429.FILE383 NOSCRATCH NONVSAM
 DELETE CBT429.FILE384 NOSCRATCH NONVSAM
 DELETE CBT429.FILE385 NOSCRATCH NONVSAM
 DELETE CBT429.FILE386 NOSCRATCH NONVSAM
 DELETE CBT429.FILE387 NOSCRATCH NONVSAM
 DELETE CBT429.FILE388 NOSCRATCH NONVSAM
 DELETE CBT429.FILE389 NOSCRATCH NONVSAM
 DELETE CBT429.FILE390 NOSCRATCH NONVSAM
 DELETE CBT429.FILE391 NOSCRATCH NONVSAM
 DELETE CBT429.FILE392 NOSCRATCH NONVSAM
 DELETE CBT429.FILE393 NOSCRATCH NONVSAM
 DELETE CBT429.FILE394 NOSCRATCH NONVSAM
 DELETE CBT429.FILE395 NOSCRATCH NONVSAM
 DELETE CBT429.FILE396 NOSCRATCH NONVSAM
 DELETE CBT429.FILE397 NOSCRATCH NONVSAM
 DELETE CBT429.FILE398 NOSCRATCH NONVSAM
 DELETE CBT429.FILE399 NOSCRATCH NONVSAM
 DELETE CBT429.FILE400 NOSCRATCH NONVSAM
 DELETE CBT429.FILE401 NOSCRATCH NONVSAM
 DELETE CBT429.FILE402 NOSCRATCH NONVSAM
 DELETE CBT429.FILE403 NOSCRATCH NONVSAM
 DELETE CBT429.FILE404 NOSCRATCH NONVSAM
 DELETE CBT429.FILE405 NOSCRATCH NONVSAM
 DELETE CBT429.FILE406 NOSCRATCH NONVSAM
 DELETE CBT429.FILE407 NOSCRATCH NONVSAM
 DELETE CBT429.FILE408 NOSCRATCH NONVSAM
 DELETE CBT429.FILE409 NOSCRATCH NONVSAM
 DELETE CBT429.FILE410 NOSCRATCH NONVSAM
 DELETE CBT429.FILE411 NOSCRATCH NONVSAM
 DELETE CBT429.FILE412 NOSCRATCH NONVSAM
 DELETE CBT429.FILE413 NOSCRATCH NONVSAM
 DELETE CBT429.FILE414 NOSCRATCH NONVSAM
 DELETE CBT429.FILE415 NOSCRATCH NONVSAM
 DELETE CBT429.FILE416 NOSCRATCH NONVSAM
 DELETE CBT429.FILE417 NOSCRATCH NONVSAM
 DELETE CBT429.FILE418 NOSCRATCH NONVSAM
 DELETE CBT429.FILE419 NOSCRATCH NONVSAM
 DELETE CBT429.FILE420 NOSCRATCH NONVSAM
 DELETE CBT429.FILE421 NOSCRATCH NONVSAM
 DELETE CBT429.FILE422 NOSCRATCH NONVSAM
 DELETE CBT429.FILE423 NOSCRATCH NONVSAM
 DELETE CBT429.FILE424 NOSCRATCH NONVSAM
 DELETE CBT429.FILE425 NOSCRATCH NONVSAM
 DELETE CBT429.FILE426 NOSCRATCH NONVSAM
 DELETE CBT429.FILE427 NOSCRATCH NONVSAM
 DELETE CBT429.FILE428 NOSCRATCH NONVSAM
 DELETE CBT429.FILE429 NOSCRATCH NONVSAM
 DELETE CBT429.FILE430 NOSCRATCH NONVSAM
 DELETE CBT429.FILE431 NOSCRATCH NONVSAM
 DELETE CBT429.FILE432 NOSCRATCH NONVSAM
 DELETE CBT429.FILE433 NOSCRATCH NONVSAM
 DELETE CBT429.FILE434 NOSCRATCH NONVSAM
 DELETE CBT429.FILE435 NOSCRATCH NONVSAM
 DELETE CBT429.FILE436 NOSCRATCH NONVSAM
 DELETE CBT429.FILE437 NOSCRATCH NONVSAM
 DELETE CBT429.FILE438 NOSCRATCH NONVSAM
 DELETE CBT429.FILE439 NOSCRATCH NONVSAM
 DELETE CBT429.FILE440 NOSCRATCH NONVSAM
 DELETE CBT429.FILE441 NOSCRATCH NONVSAM
 DELETE CBT429.FILE442 NOSCRATCH NONVSAM
 DELETE CBT429.FILE443 NOSCRATCH NONVSAM
 DELETE CBT429.FILE444 NOSCRATCH NONVSAM
 DELETE CBT429.FILE445 NOSCRATCH NONVSAM
 DELETE CBT429.FILE446 NOSCRATCH NONVSAM
 DELETE CBT429.FILE447 NOSCRATCH NONVSAM
 DELETE CBT429.FILE448 NOSCRATCH NONVSAM
 DELETE CBT429.FILE449 NOSCRATCH NONVSAM
 DELETE CBT429.FILE450 NOSCRATCH NONVSAM
 DELETE CBT429.FILE451 NOSCRATCH NONVSAM
 DELETE CBT429.FILE452 NOSCRATCH NONVSAM
 DELETE CBT429.FILE453 NOSCRATCH NONVSAM
 DELETE CBT429.FILE454 NOSCRATCH NONVSAM
 DELETE CBT429.FILE455 NOSCRATCH NONVSAM
 DELETE CBT429.FILE456 NOSCRATCH NONVSAM
 DELETE CBT429.FILE457 NOSCRATCH NONVSAM
 DELETE CBT429.FILE458 NOSCRATCH NONVSAM
 DELETE CBT429.FILE459 NOSCRATCH NONVSAM
 DELETE CBT429.FILE460 NOSCRATCH NONVSAM
 DELETE CBT429.FILE461 NOSCRATCH NONVSAM
 DELETE CBT429.FILE462 NOSCRATCH NONVSAM
 DELETE CBT429.FILE463 NOSCRATCH NONVSAM
 DELETE CBT429.FILE464 NOSCRATCH NONVSAM
 DELETE CBT429.FILE465 NOSCRATCH NONVSAM
 DELETE CBT429.FILE466 NOSCRATCH NONVSAM
 DELETE CBT429.FILE467 NOSCRATCH NONVSAM
 DELETE CBT429.FILE468 NOSCRATCH NONVSAM
 DELETE CBT429.FILE469 NOSCRATCH NONVSAM
 DELETE CBT429.FILE470 NOSCRATCH NONVSAM
 DELETE CBT429.FILE471 NOSCRATCH NONVSAM
 DELETE CBT429.FILE472 NOSCRATCH NONVSAM
 DELETE CBT429.FILE473 NOSCRATCH NONVSAM
 DELETE CBT429.FILE474 NOSCRATCH NONVSAM
 DELETE CBT429.FILE475 NOSCRATCH NONVSAM
 DELETE CBT429.FILE476 NOSCRATCH NONVSAM
 DELETE CBT429.FILE477 NOSCRATCH NONVSAM
 DELETE CBT429.FILE478 NOSCRATCH NONVSAM
 DELETE CBT429.FILE479 NOSCRATCH NONVSAM
 DELETE CBT429.FILE480 NOSCRATCH NONVSAM
 DELETE CBT429.FILE481 NOSCRATCH NONVSAM
 DELETE CBT429.FILE482 NOSCRATCH NONVSAM
 SET LASTCC=0
 SET MAXCC=0
 DEFINE NONVSAM(NAME(CBT429.FILE000) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE001) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE002) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE003) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE004) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE005) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE006) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE007) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE008) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE009) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE010) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE011) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE012) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE013) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE014) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE015) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE016) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE017) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE018) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE019) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE020) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE021) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE022) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE023) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE024) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE025) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE026) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE027) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE028) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE029) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE030) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE031) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE032) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE033) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE034) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE035) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE036) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE037) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE038) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE039) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE040) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE041) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE042) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE043) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE044) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE045) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE046) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE047) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE048) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE049) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE050) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE051) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE052) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE053) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE054) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE055) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE056) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE057) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE058) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE059) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE060) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE061) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE062) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE063) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE064) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE065) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE066) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE067) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE068) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE069) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE070) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE071) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE072) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE073) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE074) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE075) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE076) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE077) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE078) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE079) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE080) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE081) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE082) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE083) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE084) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE085) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE086) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE087) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE088) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE089) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE090) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE091) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE092) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE093) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE094) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE095) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE096) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE097) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE098) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE099) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE100) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE101) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE102) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE103) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE104) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE105) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE106) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE107) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE108) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE109) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE110) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE111) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE112) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE113) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE114) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE115) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE116) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE117) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE118) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE119) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE120) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE121) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE122) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE123) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE124) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE125) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE126) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE127) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE128) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE129) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE130) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE131) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE132) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE133) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE134) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE135) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE136) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE137) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE138) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE139) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE140) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE141) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE142) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE143) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE144) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE145) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE146) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE147) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE148) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE149) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE150) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE151) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE152) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE153) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE154) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE155) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE156) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE157) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE158) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE159) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE160) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE161) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE162) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE163) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE164) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE165) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE166) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE167) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE168) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE169) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE170) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE171) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE172) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE173) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE174) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE175) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE176) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE177) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE178) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE179) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE180) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE181) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE182) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE183) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE184) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE185) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE186) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE187) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE188) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE189) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE190) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE191) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE192) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE193) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE194) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE195) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE196) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE197) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE198) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE199) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE200) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE201) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE202) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE203) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE204) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE205) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE206) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE207) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE208) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE209) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE210) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE211) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE212) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE213) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE214) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE215) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE216) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE217) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE218) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE219) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE220) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE221) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE222) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE223) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE224) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE225) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE226) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE227) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE228) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE229) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE230) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE231) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE232) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE233) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE234) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE235) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE236) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE237) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE238) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE239) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE240) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE241) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE242) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE243) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE244) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE245) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE246) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE247) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE248) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE249) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE250) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE251) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE252) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE253) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE254) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE255) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE256) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE257) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE258) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE259) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE260) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE261) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE262) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE263) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE264) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE265) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE266) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE267) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE268) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE269) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE270) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE271) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE272) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE273) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE274) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE275) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE276) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE277) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE278) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE279) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE280) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE281) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE282) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE283) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE284) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE285) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE286) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE287) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE288) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE289) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE290) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE291) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE292) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE293) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE294) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE295) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE296) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE297) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE298) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE299) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE300) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE301) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE302) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE303) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE304) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE305) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE306) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE307) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE308) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE309) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE310) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE311) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE312) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE313) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE314) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE315) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE316) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE317) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE318) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE319) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE320) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE321) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE322) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE323) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE324) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE325) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE326) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE327) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE328) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE329) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE330) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE331) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE332) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE333) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE334) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE335) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE336) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE337) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE338) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE339) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE340) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE341) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE342) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE343) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE344) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE345) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE346) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE347) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE348) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE349) DEVT(3350) VOL(CBT002))
 DEFINE NONVSAM(NAME(CBT429.FILE350) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE351) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE352) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE353) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE354) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE355) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE356) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE357) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE358) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE359) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE360) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE361) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE362) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE363) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE364) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE365) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE366) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE367) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE368) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE369) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE370) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE371) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE372) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE373) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE374) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE375) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE376) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE377) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE378) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE379) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE380) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE381) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE382) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE383) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE384) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE385) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE386) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE387) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE388) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE389) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE390) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE391) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE392) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE393) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE394) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE395) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE396) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE397) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE398) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE399) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE400) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE401) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE402) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE403) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE404) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE405) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE406) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE407) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE408) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE409) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE410) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE411) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE412) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE413) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE414) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE415) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE416) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE417) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE418) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE419) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE420) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE421) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE422) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE423) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE424) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE425) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE426) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE427) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE428) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE429) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE430) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE431) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE432) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE433) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE434) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE435) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE436) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE437) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE438) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE439) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE440) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE441) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE442) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE443) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE444) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE445) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE446) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE447) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE448) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE449) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE450) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE451) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE452) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE453) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE454) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE455) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE456) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE457) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE458) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE459) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE460) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE461) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE462) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE463) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE464) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE465) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE466) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE467) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE468) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE469) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE470) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE471) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE472) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE473) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE474) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE475) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE476) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE477) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE478) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE479) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE480) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE481) DEVT(3350) VOL(CBTCAT))
 DEFINE NONVSAM(NAME(CBT429.FILE482) DEVT(3350) VOL(CBTCAT))
 SET LASTCC = 0
 SET MAXCC = 0
./ ADD NAME=CBT050   8002-74013-74076-1641-00937-00937-00000-HERC01
//HERC01  JOB  (CBT),
//             'Catalog CBT249',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             REGION=2048K
//*********************************************************************
//*
//*                       CBT setup
//*                       =========
//*
//* Name: CBT.MVS38J.CNTL(CBT050)
//*
//* Desc: Define the CBT249 files into out private CBT catalog
//*
//*********************************************************************
//*
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE CBT249.FILE000 NOSCRATCH NONVSAM
 DELETE CBT249.FILE001 NOSCRATCH NONVSAM
 DELETE CBT249.FILE002 NOSCRATCH NONVSAM
 DELETE CBT249.FILE003 NOSCRATCH NONVSAM
 DELETE CBT249.FILE004 NOSCRATCH NONVSAM
 DELETE CBT249.FILE005 NOSCRATCH NONVSAM
 DELETE CBT249.FILE006 NOSCRATCH NONVSAM
 DELETE CBT249.FILE007 NOSCRATCH NONVSAM
 DELETE CBT249.FILE008 NOSCRATCH NONVSAM
 DELETE CBT249.FILE009 NOSCRATCH NONVSAM
 DELETE CBT249.FILE010 NOSCRATCH NONVSAM
 DELETE CBT249.FILE011 NOSCRATCH NONVSAM
 DELETE CBT249.FILE012 NOSCRATCH NONVSAM
 DELETE CBT249.FILE013 NOSCRATCH NONVSAM
 DELETE CBT249.FILE014 NOSCRATCH NONVSAM
 DELETE CBT249.FILE015 NOSCRATCH NONVSAM
 DELETE CBT249.FILE016 NOSCRATCH NONVSAM
 DELETE CBT249.FILE017 NOSCRATCH NONVSAM
 DELETE CBT249.FILE018 NOSCRATCH NONVSAM
 DELETE CBT249.FILE019 NOSCRATCH NONVSAM
 DELETE CBT249.FILE020 NOSCRATCH NONVSAM
 DELETE CBT249.FILE021 NOSCRATCH NONVSAM
 DELETE CBT249.FILE022 NOSCRATCH NONVSAM
 DELETE CBT249.FILE023 NOSCRATCH NONVSAM
 DELETE CBT249.FILE024 NOSCRATCH NONVSAM
 DELETE CBT249.FILE025 NOSCRATCH NONVSAM
 DELETE CBT249.FILE026 NOSCRATCH NONVSAM
 DELETE CBT249.FILE027 NOSCRATCH NONVSAM
 DELETE CBT249.FILE028 NOSCRATCH NONVSAM
 DELETE CBT249.FILE029 NOSCRATCH NONVSAM
 DELETE CBT249.FILE030 NOSCRATCH NONVSAM
 DELETE CBT249.FILE031 NOSCRATCH NONVSAM
 DELETE CBT249.FILE032 NOSCRATCH NONVSAM
 DELETE CBT249.FILE033 NOSCRATCH NONVSAM
 DELETE CBT249.FILE034 NOSCRATCH NONVSAM
 DELETE CBT249.FILE035 NOSCRATCH NONVSAM
 DELETE CBT249.FILE036 NOSCRATCH NONVSAM
 DELETE CBT249.FILE037 NOSCRATCH NONVSAM
 DELETE CBT249.FILE038 NOSCRATCH NONVSAM
 DELETE CBT249.FILE039 NOSCRATCH NONVSAM
 DELETE CBT249.FILE040 NOSCRATCH NONVSAM
 DELETE CBT249.FILE041 NOSCRATCH NONVSAM
 DELETE CBT249.FILE042 NOSCRATCH NONVSAM
 DELETE CBT249.FILE043 NOSCRATCH NONVSAM
 DELETE CBT249.FILE044 NOSCRATCH NONVSAM
 DELETE CBT249.FILE045 NOSCRATCH NONVSAM
 DELETE CBT249.FILE046 NOSCRATCH NONVSAM
 DELETE CBT249.FILE047 NOSCRATCH NONVSAM
 DELETE CBT249.FILE048 NOSCRATCH NONVSAM
 DELETE CBT249.FILE049 NOSCRATCH NONVSAM
 DELETE CBT249.FILE050 NOSCRATCH NONVSAM
 DELETE CBT249.FILE051 NOSCRATCH NONVSAM
 DELETE CBT249.FILE052 NOSCRATCH NONVSAM
 DELETE CBT249.FILE053 NOSCRATCH NONVSAM
 DELETE CBT249.FILE054 NOSCRATCH NONVSAM
 DELETE CBT249.FILE055 NOSCRATCH NONVSAM
 DELETE CBT249.FILE056 NOSCRATCH NONVSAM
 DELETE CBT249.FILE057 NOSCRATCH NONVSAM
 DELETE CBT249.FILE058 NOSCRATCH NONVSAM
 DELETE CBT249.FILE059 NOSCRATCH NONVSAM
 DELETE CBT249.FILE060 NOSCRATCH NONVSAM
 DELETE CBT249.FILE061 NOSCRATCH NONVSAM
 DELETE CBT249.FILE062 NOSCRATCH NONVSAM
 DELETE CBT249.FILE063 NOSCRATCH NONVSAM
 DELETE CBT249.FILE064 NOSCRATCH NONVSAM
 DELETE CBT249.FILE065 NOSCRATCH NONVSAM
 DELETE CBT249.FILE066 NOSCRATCH NONVSAM
 DELETE CBT249.FILE067 NOSCRATCH NONVSAM
 DELETE CBT249.FILE068 NOSCRATCH NONVSAM
 DELETE CBT249.FILE069 NOSCRATCH NONVSAM
 DELETE CBT249.FILE070 NOSCRATCH NONVSAM
 DELETE CBT249.FILE071 NOSCRATCH NONVSAM
 DELETE CBT249.FILE072 NOSCRATCH NONVSAM
 DELETE CBT249.FILE073 NOSCRATCH NONVSAM
 DELETE CBT249.FILE074 NOSCRATCH NONVSAM
 DELETE CBT249.FILE075 NOSCRATCH NONVSAM
 DELETE CBT249.FILE076 NOSCRATCH NONVSAM
 DELETE CBT249.FILE077 NOSCRATCH NONVSAM
 DELETE CBT249.FILE078 NOSCRATCH NONVSAM
 DELETE CBT249.FILE079 NOSCRATCH NONVSAM
 DELETE CBT249.FILE080 NOSCRATCH NONVSAM
 DELETE CBT249.FILE081 NOSCRATCH NONVSAM
 DELETE CBT249.FILE082 NOSCRATCH NONVSAM
 DELETE CBT249.FILE083 NOSCRATCH NONVSAM
 DELETE CBT249.FILE084 NOSCRATCH NONVSAM
 DELETE CBT249.FILE085 NOSCRATCH NONVSAM
 DELETE CBT249.FILE086 NOSCRATCH NONVSAM
 DELETE CBT249.FILE087 NOSCRATCH NONVSAM
 DELETE CBT249.FILE088 NOSCRATCH NONVSAM
 DELETE CBT249.FILE089 NOSCRATCH NONVSAM
 DELETE CBT249.FILE090 NOSCRATCH NONVSAM
 DELETE CBT249.FILE091 NOSCRATCH NONVSAM
 DELETE CBT249.FILE092 NOSCRATCH NONVSAM
 DELETE CBT249.FILE093 NOSCRATCH NONVSAM
 DELETE CBT249.FILE094 NOSCRATCH NONVSAM
 DELETE CBT249.FILE095 NOSCRATCH NONVSAM
 DELETE CBT249.FILE096 NOSCRATCH NONVSAM
 DELETE CBT249.FILE097 NOSCRATCH NONVSAM
 DELETE CBT249.FILE098 NOSCRATCH NONVSAM
 DELETE CBT249.FILE099 NOSCRATCH NONVSAM
 DELETE CBT249.FILE100 NOSCRATCH NONVSAM
 DELETE CBT249.FILE101 NOSCRATCH NONVSAM
 DELETE CBT249.FILE102 NOSCRATCH NONVSAM
 DELETE CBT249.FILE103 NOSCRATCH NONVSAM
 DELETE CBT249.FILE104 NOSCRATCH NONVSAM
 DELETE CBT249.FILE105 NOSCRATCH NONVSAM
 DELETE CBT249.FILE106 NOSCRATCH NONVSAM
 DELETE CBT249.FILE107 NOSCRATCH NONVSAM
 DELETE CBT249.FILE108 NOSCRATCH NONVSAM
 DELETE CBT249.FILE109 NOSCRATCH NONVSAM
 DELETE CBT249.FILE110 NOSCRATCH NONVSAM
 DELETE CBT249.FILE111 NOSCRATCH NONVSAM
 DELETE CBT249.FILE112 NOSCRATCH NONVSAM
 DELETE CBT249.FILE113 NOSCRATCH NONVSAM
 DELETE CBT249.FILE114 NOSCRATCH NONVSAM
 DELETE CBT249.FILE115 NOSCRATCH NONVSAM
 DELETE CBT249.FILE116 NOSCRATCH NONVSAM
 DELETE CBT249.FILE117 NOSCRATCH NONVSAM
 DELETE CBT249.FILE118 NOSCRATCH NONVSAM
 DELETE CBT249.FILE119 NOSCRATCH NONVSAM
 DELETE CBT249.FILE120 NOSCRATCH NONVSAM
 DELETE CBT249.FILE121 NOSCRATCH NONVSAM
 DELETE CBT249.FILE122 NOSCRATCH NONVSAM
 DELETE CBT249.FILE123 NOSCRATCH NONVSAM
 DELETE CBT249.FILE124 NOSCRATCH NONVSAM
 DELETE CBT249.FILE125 NOSCRATCH NONVSAM
 DELETE CBT249.FILE126 NOSCRATCH NONVSAM
 DELETE CBT249.FILE127 NOSCRATCH NONVSAM
 DELETE CBT249.FILE128 NOSCRATCH NONVSAM
 DELETE CBT249.FILE129 NOSCRATCH NONVSAM
 DELETE CBT249.FILE130 NOSCRATCH NONVSAM
 DELETE CBT249.FILE131 NOSCRATCH NONVSAM
 DELETE CBT249.FILE132 NOSCRATCH NONVSAM
 DELETE CBT249.FILE133 NOSCRATCH NONVSAM
 DELETE CBT249.FILE134 NOSCRATCH NONVSAM
 DELETE CBT249.FILE135 NOSCRATCH NONVSAM
 DELETE CBT249.FILE136 NOSCRATCH NONVSAM
 DELETE CBT249.FILE137 NOSCRATCH NONVSAM
 DELETE CBT249.FILE138 NOSCRATCH NONVSAM
 DELETE CBT249.FILE139 NOSCRATCH NONVSAM
 DELETE CBT249.FILE140 NOSCRATCH NONVSAM
 DELETE CBT249.FILE141 NOSCRATCH NONVSAM
 DELETE CBT249.FILE142 NOSCRATCH NONVSAM
 DELETE CBT249.FILE143 NOSCRATCH NONVSAM
 DELETE CBT249.FILE144 NOSCRATCH NONVSAM
 DELETE CBT249.FILE145 NOSCRATCH NONVSAM
 DELETE CBT249.FILE146 NOSCRATCH NONVSAM
 DELETE CBT249.FILE147 NOSCRATCH NONVSAM
 DELETE CBT249.FILE148 NOSCRATCH NONVSAM
 DELETE CBT249.FILE149 NOSCRATCH NONVSAM
 DELETE CBT249.FILE150 NOSCRATCH NONVSAM
 DELETE CBT249.FILE151 NOSCRATCH NONVSAM
 DELETE CBT249.FILE152 NOSCRATCH NONVSAM
 DELETE CBT249.FILE153 NOSCRATCH NONVSAM
 DELETE CBT249.FILE154 NOSCRATCH NONVSAM
 DELETE CBT249.FILE155 NOSCRATCH NONVSAM
 DELETE CBT249.FILE156 NOSCRATCH NONVSAM
 DELETE CBT249.FILE157 NOSCRATCH NONVSAM
 DELETE CBT249.FILE158 NOSCRATCH NONVSAM
 DELETE CBT249.FILE159 NOSCRATCH NONVSAM
 DELETE CBT249.FILE160 NOSCRATCH NONVSAM
 DELETE CBT249.FILE161 NOSCRATCH NONVSAM
 DELETE CBT249.FILE162 NOSCRATCH NONVSAM
 DELETE CBT249.FILE163 NOSCRATCH NONVSAM
 DELETE CBT249.FILE164 NOSCRATCH NONVSAM
 DELETE CBT249.FILE165 NOSCRATCH NONVSAM
 DELETE CBT249.FILE166 NOSCRATCH NONVSAM
 DELETE CBT249.FILE167 NOSCRATCH NONVSAM
 DELETE CBT249.FILE168 NOSCRATCH NONVSAM
 DELETE CBT249.FILE169 NOSCRATCH NONVSAM
 DELETE CBT249.FILE170 NOSCRATCH NONVSAM
 DELETE CBT249.FILE171 NOSCRATCH NONVSAM
 DELETE CBT249.FILE172 NOSCRATCH NONVSAM
 DELETE CBT249.FILE173 NOSCRATCH NONVSAM
 DELETE CBT249.FILE174 NOSCRATCH NONVSAM
 DELETE CBT249.FILE175 NOSCRATCH NONVSAM
 DELETE CBT249.FILE176 NOSCRATCH NONVSAM
 DELETE CBT249.FILE177 NOSCRATCH NONVSAM
 DELETE CBT249.FILE178 NOSCRATCH NONVSAM
 DELETE CBT249.FILE179 NOSCRATCH NONVSAM
 DELETE CBT249.FILE180 NOSCRATCH NONVSAM
 DELETE CBT249.FILE181 NOSCRATCH NONVSAM
 DELETE CBT249.FILE182 NOSCRATCH NONVSAM
 DELETE CBT249.FILE183 NOSCRATCH NONVSAM
 DELETE CBT249.FILE184 NOSCRATCH NONVSAM
 DELETE CBT249.FILE185 NOSCRATCH NONVSAM
 DELETE CBT249.FILE186 NOSCRATCH NONVSAM
 DELETE CBT249.FILE187 NOSCRATCH NONVSAM
 DELETE CBT249.FILE188 NOSCRATCH NONVSAM
 DELETE CBT249.FILE189 NOSCRATCH NONVSAM
 DELETE CBT249.FILE190 NOSCRATCH NONVSAM
 DELETE CBT249.FILE191 NOSCRATCH NONVSAM
 DELETE CBT249.FILE192 NOSCRATCH NONVSAM
 DELETE CBT249.FILE193 NOSCRATCH NONVSAM
 DELETE CBT249.FILE194 NOSCRATCH NONVSAM
 DELETE CBT249.FILE195 NOSCRATCH NONVSAM
 DELETE CBT249.FILE196 NOSCRATCH NONVSAM
 DELETE CBT249.FILE197 NOSCRATCH NONVSAM
 DELETE CBT249.FILE198 NOSCRATCH NONVSAM
 DELETE CBT249.FILE199 NOSCRATCH NONVSAM
 DELETE CBT249.FILE200 NOSCRATCH NONVSAM
 DELETE CBT249.FILE201 NOSCRATCH NONVSAM
 DELETE CBT249.FILE202 NOSCRATCH NONVSAM
 DELETE CBT249.FILE203 NOSCRATCH NONVSAM
 DELETE CBT249.FILE204 NOSCRATCH NONVSAM
 DELETE CBT249.FILE205 NOSCRATCH NONVSAM
 DELETE CBT249.FILE206 NOSCRATCH NONVSAM
 DELETE CBT249.FILE207 NOSCRATCH NONVSAM
 DELETE CBT249.FILE208 NOSCRATCH NONVSAM
 DELETE CBT249.FILE209 NOSCRATCH NONVSAM
 DELETE CBT249.FILE210 NOSCRATCH NONVSAM
 DELETE CBT249.FILE211 NOSCRATCH NONVSAM
 DELETE CBT249.FILE212 NOSCRATCH NONVSAM
 DELETE CBT249.FILE213 NOSCRATCH NONVSAM
 DELETE CBT249.FILE214 NOSCRATCH NONVSAM
 DELETE CBT249.FILE215 NOSCRATCH NONVSAM
 DELETE CBT249.FILE216 NOSCRATCH NONVSAM
 DELETE CBT249.FILE217 NOSCRATCH NONVSAM
 DELETE CBT249.FILE218 NOSCRATCH NONVSAM
 DELETE CBT249.FILE219 NOSCRATCH NONVSAM
 DELETE CBT249.FILE220 NOSCRATCH NONVSAM
 DELETE CBT249.FILE221 NOSCRATCH NONVSAM
 DELETE CBT249.FILE222 NOSCRATCH NONVSAM
 DELETE CBT249.FILE223 NOSCRATCH NONVSAM
 DELETE CBT249.FILE224 NOSCRATCH NONVSAM
 DELETE CBT249.FILE225 NOSCRATCH NONVSAM
 DELETE CBT249.FILE226 NOSCRATCH NONVSAM
 DELETE CBT249.FILE227 NOSCRATCH NONVSAM
 DELETE CBT249.FILE228 NOSCRATCH NONVSAM
 DELETE CBT249.FILE229 NOSCRATCH NONVSAM
 DELETE CBT249.FILE230 NOSCRATCH NONVSAM
 DELETE CBT249.FILE231 NOSCRATCH NONVSAM
 DELETE CBT249.FILE232 NOSCRATCH NONVSAM
 DELETE CBT249.FILE233 NOSCRATCH NONVSAM
 DELETE CBT249.FILE234 NOSCRATCH NONVSAM
 DELETE CBT249.FILE235 NOSCRATCH NONVSAM
 DELETE CBT249.FILE236 NOSCRATCH NONVSAM
 DELETE CBT249.FILE237 NOSCRATCH NONVSAM
 DELETE CBT249.FILE238 NOSCRATCH NONVSAM
 DELETE CBT249.FILE239 NOSCRATCH NONVSAM
 DELETE CBT249.FILE240 NOSCRATCH NONVSAM
 DELETE CBT249.FILE241 NOSCRATCH NONVSAM
 DELETE CBT249.FILE242 NOSCRATCH NONVSAM
 DELETE CBT249.FILE243 NOSCRATCH NONVSAM
 DELETE CBT249.FILE244 NOSCRATCH NONVSAM
 DELETE CBT249.FILE245 NOSCRATCH NONVSAM
 DELETE CBT249.FILE246 NOSCRATCH NONVSAM
 DELETE CBT249.FILE247 NOSCRATCH NONVSAM
 DELETE CBT249.FILE248 NOSCRATCH NONVSAM
 DELETE CBT249.FILE249 NOSCRATCH NONVSAM
 DELETE CBT249.FILE250 NOSCRATCH NONVSAM
 DELETE CBT249.FILE251 NOSCRATCH NONVSAM
 DELETE CBT249.FILE252 NOSCRATCH NONVSAM
 DELETE CBT249.FILE253 NOSCRATCH NONVSAM
 DELETE CBT249.FILE254 NOSCRATCH NONVSAM
 DELETE CBT249.FILE255 NOSCRATCH NONVSAM
 DELETE CBT249.FILE256 NOSCRATCH NONVSAM
 DELETE CBT249.FILE257 NOSCRATCH NONVSAM
 DELETE CBT249.FILE258 NOSCRATCH NONVSAM
 DELETE CBT249.FILE259 NOSCRATCH NONVSAM
 DELETE CBT249.FILE260 NOSCRATCH NONVSAM
 DELETE CBT249.FILE261 NOSCRATCH NONVSAM
 DELETE CBT249.FILE262 NOSCRATCH NONVSAM
 DELETE CBT249.FILE263 NOSCRATCH NONVSAM
 DELETE CBT249.FILE264 NOSCRATCH NONVSAM
 DELETE CBT249.FILE265 NOSCRATCH NONVSAM
 DELETE CBT249.FILE266 NOSCRATCH NONVSAM
 DELETE CBT249.FILE267 NOSCRATCH NONVSAM
 DELETE CBT249.FILE268 NOSCRATCH NONVSAM
 DELETE CBT249.FILE269 NOSCRATCH NONVSAM
 DELETE CBT249.FILE270 NOSCRATCH NONVSAM
 DELETE CBT249.FILE271 NOSCRATCH NONVSAM
 DELETE CBT249.FILE272 NOSCRATCH NONVSAM
 DELETE CBT249.FILE273 NOSCRATCH NONVSAM
 DELETE CBT249.FILE274 NOSCRATCH NONVSAM
 DELETE CBT249.FILE275 NOSCRATCH NONVSAM
 DELETE CBT249.FILE276 NOSCRATCH NONVSAM
 DELETE CBT249.FILE277 NOSCRATCH NONVSAM
 DELETE CBT249.FILE278 NOSCRATCH NONVSAM
 DELETE CBT249.FILE279 NOSCRATCH NONVSAM
 DELETE CBT249.FILE280 NOSCRATCH NONVSAM
 DELETE CBT249.FILE281 NOSCRATCH NONVSAM
 DELETE CBT249.FILE282 NOSCRATCH NONVSAM
 DELETE CBT249.FILE283 NOSCRATCH NONVSAM
 DELETE CBT249.FILE284 NOSCRATCH NONVSAM
 DELETE CBT249.FILE285 NOSCRATCH NONVSAM
 DELETE CBT249.FILE286 NOSCRATCH NONVSAM
 DELETE CBT249.FILE287 NOSCRATCH NONVSAM
 DELETE CBT249.FILE288 NOSCRATCH NONVSAM
 DELETE CBT249.FILE289 NOSCRATCH NONVSAM
 DELETE CBT249.FILE290 NOSCRATCH NONVSAM
 DELETE CBT249.FILE291 NOSCRATCH NONVSAM
 DELETE CBT249.FILE292 NOSCRATCH NONVSAM
 DELETE CBT249.FILE293 NOSCRATCH NONVSAM
 DELETE CBT249.FILE294 NOSCRATCH NONVSAM
 DELETE CBT249.FILE295 NOSCRATCH NONVSAM
 DELETE CBT249.FILE296 NOSCRATCH NONVSAM
 DELETE CBT249.FILE297 NOSCRATCH NONVSAM
 DELETE CBT249.FILE298 NOSCRATCH NONVSAM
 DELETE CBT249.FILE299 NOSCRATCH NONVSAM
 DELETE CBT249.FILE300 NOSCRATCH NONVSAM
 DELETE CBT249.FILE301 NOSCRATCH NONVSAM
 DELETE CBT249.FILE302 NOSCRATCH NONVSAM
 DELETE CBT249.FILE303 NOSCRATCH NONVSAM
 DELETE CBT249.FILE304 NOSCRATCH NONVSAM
 DELETE CBT249.FILE305 NOSCRATCH NONVSAM
 DELETE CBT249.FILE306 NOSCRATCH NONVSAM
 DELETE CBT249.FILE307 NOSCRATCH NONVSAM
 DELETE CBT249.FILE308 NOSCRATCH NONVSAM
 DELETE CBT249.FILE309 NOSCRATCH NONVSAM
 DELETE CBT249.FILE310 NOSCRATCH NONVSAM
 DELETE CBT249.FILE311 NOSCRATCH NONVSAM
 DELETE CBT249.FILE312 NOSCRATCH NONVSAM
 DELETE CBT249.FILE313 NOSCRATCH NONVSAM
 DELETE CBT249.FILE314 NOSCRATCH NONVSAM
 DELETE CBT249.FILE315 NOSCRATCH NONVSAM
 DELETE CBT249.FILE316 NOSCRATCH NONVSAM
 DELETE CBT249.FILE317 NOSCRATCH NONVSAM
 DELETE CBT249.FILE318 NOSCRATCH NONVSAM
 DELETE CBT249.FILE319 NOSCRATCH NONVSAM
 DELETE CBT249.FILE320 NOSCRATCH NONVSAM
 DELETE CBT249.FILE321 NOSCRATCH NONVSAM
 DELETE CBT249.FILE322 NOSCRATCH NONVSAM
 DELETE CBT249.FILE323 NOSCRATCH NONVSAM
 DELETE CBT249.FILE324 NOSCRATCH NONVSAM
 DELETE CBT249.FILE325 NOSCRATCH NONVSAM
 DELETE CBT249.FILE326 NOSCRATCH NONVSAM
 DELETE CBT249.FILE327 NOSCRATCH NONVSAM
 DELETE CBT249.FILE328 NOSCRATCH NONVSAM
 DELETE CBT249.FILE329 NOSCRATCH NONVSAM
 DELETE CBT249.FILE330 NOSCRATCH NONVSAM
 DELETE CBT249.FILE331 NOSCRATCH NONVSAM
 DELETE CBT249.FILE332 NOSCRATCH NONVSAM
 DELETE CBT249.FILE333 NOSCRATCH NONVSAM
 DELETE CBT249.FILE334 NOSCRATCH NONVSAM
 DELETE CBT249.FILE335 NOSCRATCH NONVSAM
 DELETE CBT249.FILE336 NOSCRATCH NONVSAM
 DELETE CBT249.FILE337 NOSCRATCH NONVSAM
 DELETE CBT249.FILE338 NOSCRATCH NONVSAM
 DELETE CBT249.FILE339 NOSCRATCH NONVSAM
 DELETE CBT249.FILE340 NOSCRATCH NONVSAM
 DELETE CBT249.FILE341 NOSCRATCH NONVSAM
 DELETE CBT249.FILE342 NOSCRATCH NONVSAM
 DELETE CBT249.FILE343 NOSCRATCH NONVSAM
 DELETE CBT249.FILE344 NOSCRATCH NONVSAM
 DELETE CBT249.FILE345 NOSCRATCH NONVSAM
 DELETE CBT249.FILE346 NOSCRATCH NONVSAM
 DELETE CBT249.FILE347 NOSCRATCH NONVSAM
 DELETE CBT249.FILE348 NOSCRATCH NONVSAM
 DELETE CBT249.FILE349 NOSCRATCH NONVSAM
 DELETE CBT249.FILE350 NOSCRATCH NONVSAM
 DELETE CBT249.FILE351 NOSCRATCH NONVSAM
 DELETE CBT249.FILE352 NOSCRATCH NONVSAM
 DELETE CBT249.FILE353 NOSCRATCH NONVSAM
 DELETE CBT249.FILE354 NOSCRATCH NONVSAM
 DELETE CBT249.FILE355 NOSCRATCH NONVSAM
 DELETE CBT249.FILE356 NOSCRATCH NONVSAM
 DELETE CBT249.FILE357 NOSCRATCH NONVSAM
 DELETE CBT249.FILE358 NOSCRATCH NONVSAM
 DELETE CBT249.FILE359 NOSCRATCH NONVSAM
 DELETE CBT249.FILE360 NOSCRATCH NONVSAM
 DELETE CBT249.FILE361 NOSCRATCH NONVSAM
 DELETE CBT249.FILE362 NOSCRATCH NONVSAM
 DELETE CBT249.FILE363 NOSCRATCH NONVSAM
 DELETE CBT249.FILE364 NOSCRATCH NONVSAM
 DELETE CBT249.FILE365 NOSCRATCH NONVSAM
 DELETE CBT249.FILE366 NOSCRATCH NONVSAM
 DELETE CBT249.FILE367 NOSCRATCH NONVSAM
 DELETE CBT249.FILE368 NOSCRATCH NONVSAM
 DELETE CBT249.FILE369 NOSCRATCH NONVSAM
 DELETE CBT249.FILE370 NOSCRATCH NONVSAM
 DELETE CBT249.FILE371 NOSCRATCH NONVSAM
 DELETE CBT249.FILE372 NOSCRATCH NONVSAM
 DELETE CBT249.FILE373 NOSCRATCH NONVSAM
 DELETE CBT249.FILE374 NOSCRATCH NONVSAM
 DELETE CBT249.FILE375 NOSCRATCH NONVSAM
 DELETE CBT249.FILE376 NOSCRATCH NONVSAM
 DELETE CBT249.FILE377 NOSCRATCH NONVSAM
 DELETE CBT249.FILE378 NOSCRATCH NONVSAM
 DELETE CBT249.FILE379 NOSCRATCH NONVSAM
 DELETE CBT249.FILE380 NOSCRATCH NONVSAM
 DELETE CBT249.FILE381 NOSCRATCH NONVSAM
 DELETE CBT249.FILE382 NOSCRATCH NONVSAM
 DELETE CBT249.FILE383 NOSCRATCH NONVSAM
 DELETE CBT249.FILE384 NOSCRATCH NONVSAM
 DELETE CBT249.FILE385 NOSCRATCH NONVSAM
 DELETE CBT249.FILE386 NOSCRATCH NONVSAM
 DELETE CBT249.FILE387 NOSCRATCH NONVSAM
 DELETE CBT249.FILE388 NOSCRATCH NONVSAM
 DELETE CBT249.FILE389 NOSCRATCH NONVSAM
 DELETE CBT249.FILE390 NOSCRATCH NONVSAM
 DELETE CBT249.FILE391 NOSCRATCH NONVSAM
 DELETE CBT249.FILE392 NOSCRATCH NONVSAM
 DELETE CBT249.FILE393 NOSCRATCH NONVSAM
 DELETE CBT249.FILE394 NOSCRATCH NONVSAM
 DELETE CBT249.FILE395 NOSCRATCH NONVSAM
 DELETE CBT249.FILE396 NOSCRATCH NONVSAM
 DELETE CBT249.FILE397 NOSCRATCH NONVSAM
 DELETE CBT249.FILE398 NOSCRATCH NONVSAM
 DELETE CBT249.FILE399 NOSCRATCH NONVSAM
 DELETE CBT249.FILE400 NOSCRATCH NONVSAM
 DELETE CBT249.FILE401 NOSCRATCH NONVSAM
 DELETE CBT249.FILE402 NOSCRATCH NONVSAM
 DELETE CBT249.FILE403 NOSCRATCH NONVSAM
 DELETE CBT249.FILE404 NOSCRATCH NONVSAM
 DELETE CBT249.FILE405 NOSCRATCH NONVSAM
 DELETE CBT249.FILE406 NOSCRATCH NONVSAM
 DELETE CBT249.FILE407 NOSCRATCH NONVSAM
 DELETE CBT249.FILE408 NOSCRATCH NONVSAM
 DELETE CBT249.FILE409 NOSCRATCH NONVSAM
 DELETE CBT249.FILE410 NOSCRATCH NONVSAM
 DELETE CBT249.FILE411 NOSCRATCH NONVSAM
 DELETE CBT249.FILE412 NOSCRATCH NONVSAM
 DELETE CBT249.FILE413 NOSCRATCH NONVSAM
 DELETE CBT249.FILE414 NOSCRATCH NONVSAM
 DELETE CBT249.FILE415 NOSCRATCH NONVSAM
 DELETE CBT249.FILE416 NOSCRATCH NONVSAM
 DELETE CBT249.FILE417 NOSCRATCH NONVSAM
 DELETE CBT249.FILE418 NOSCRATCH NONVSAM
 DELETE CBT249.FILE419 NOSCRATCH NONVSAM
 DELETE CBT249.FILE420 NOSCRATCH NONVSAM
 DELETE CBT249.FILE421 NOSCRATCH NONVSAM
 DELETE CBT249.FILE422 NOSCRATCH NONVSAM
 DELETE CBT249.FILE423 NOSCRATCH NONVSAM
 DELETE CBT249.FILE424 NOSCRATCH NONVSAM
 DELETE CBT249.FILE425 NOSCRATCH NONVSAM
 DELETE CBT249.FILE426 NOSCRATCH NONVSAM
 DELETE CBT249.FILE427 NOSCRATCH NONVSAM
 DELETE CBT249.FILE428 NOSCRATCH NONVSAM
 DELETE CBT249.FILE429 NOSCRATCH NONVSAM
 DELETE CBT249.FILE430 NOSCRATCH NONVSAM
 DELETE CBT249.FILE431 NOSCRATCH NONVSAM
 DELETE CBT249.FILE432 NOSCRATCH NONVSAM
 DELETE CBT249.FILE433 NOSCRATCH NONVSAM
 DELETE CBT249.FILE434 NOSCRATCH NONVSAM
 DELETE CBT249.FILE435 NOSCRATCH NONVSAM
 DELETE CBT249.FILE436 NOSCRATCH NONVSAM
 DELETE CBT249.FILE437 NOSCRATCH NONVSAM
 DELETE CBT249.FILE438 NOSCRATCH NONVSAM
 DELETE CBT249.FILE439 NOSCRATCH NONVSAM
 DELETE CBT249.FILE440 NOSCRATCH NONVSAM
 DELETE CBT249.FILE441 NOSCRATCH NONVSAM
 DELETE CBT249.FILE442 NOSCRATCH NONVSAM
 DELETE CBT249.FILE443 NOSCRATCH NONVSAM
 DELETE CBT249.FILE444 NOSCRATCH NONVSAM
 DELETE CBT249.FILE445 NOSCRATCH NONVSAM
 DELETE CBT249.FILE446 NOSCRATCH NONVSAM
 DELETE CBT249.FILE447 NOSCRATCH NONVSAM
 DELETE CBT249.FILE448 NOSCRATCH NONVSAM
 DELETE CBT249.FILE449 NOSCRATCH NONVSAM
 DELETE CBT249.FILE450 NOSCRATCH NONVSAM
 DELETE CBT249.FILE451 NOSCRATCH NONVSAM
 DELETE CBT249.FILE452 NOSCRATCH NONVSAM
 DELETE CBT249.FILE453 NOSCRATCH NONVSAM
 DELETE CBT249.FILE454 NOSCRATCH NONVSAM
 DELETE CBT249.FILE455 NOSCRATCH NONVSAM
 SET LASTCC=0
 SET MAXCC=0
 DEFINE NONVSAM(NAME(CBT249.FILE000) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE001) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE002) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE003) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE004) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE005) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE006) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE007) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE008) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE009) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE010) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE011) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE012) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE013) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE014) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE015) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE016) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE017) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE018) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE019) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE020) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE021) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE022) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE023) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE024) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE025) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE026) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE027) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE028) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE029) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE030) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE031) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE032) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE033) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE034) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE035) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE036) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE037) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE038) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE039) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE040) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE041) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE042) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE043) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE044) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE045) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE046) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE047) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE048) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE049) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE050) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE051) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE052) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE053) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE054) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE055) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE056) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE057) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE058) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE059) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE060) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE061) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE062) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE063) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE064) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE065) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE066) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE067) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE068) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE069) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE070) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE071) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE072) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE073) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE074) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE075) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE076) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE077) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE078) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE079) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE080) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE081) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE082) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE083) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE084) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE085) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE086) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE087) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE088) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE089) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE090) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE091) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE092) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE093) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE094) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE095) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE096) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE097) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE098) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE099) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE100) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE101) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE102) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE103) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE104) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE105) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE106) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE107) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE108) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE109) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE110) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE111) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE112) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE113) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE114) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE115) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE116) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE117) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE118) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE119) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE120) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE121) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE122) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE123) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE124) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE125) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE126) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE127) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE128) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE129) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE130) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE131) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE132) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE133) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE134) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE135) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE136) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE137) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE138) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE139) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE140) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE141) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE142) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE143) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE144) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE145) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE146) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE147) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE148) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE149) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE150) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE151) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE152) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE153) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE154) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE155) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE156) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE157) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE158) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE159) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE160) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE161) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE162) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE163) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE164) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE165) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE166) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE167) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE168) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE169) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE170) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE171) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE172) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE173) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE174) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE175) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE176) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE177) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE178) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE179) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE180) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE181) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE182) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE183) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE184) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE185) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE186) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE187) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE188) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE189) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE190) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE191) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE192) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE193) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE194) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE195) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE196) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE197) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE198) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE199) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE200) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE201) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE202) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE203) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE204) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE205) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE206) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE207) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE208) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE209) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE210) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE211) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE212) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE213) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE214) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE215) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE216) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE217) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE218) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE219) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE220) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE221) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE222) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE223) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE224) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE225) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE226) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE227) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE228) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE229) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE230) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE231) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE232) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE233) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE234) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE235) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE236) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE237) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE238) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE239) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE240) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE241) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE242) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE243) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE244) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE245) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE246) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE247) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE248) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE249) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE250) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE251) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE252) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE253) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE254) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE255) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE256) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE257) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE258) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE259) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE260) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE261) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE262) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE263) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE264) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE265) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE266) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE267) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE268) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE269) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE270) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE271) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE272) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE273) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE274) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE275) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE276) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE277) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE278) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE279) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE280) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE281) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE282) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE283) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE284) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE285) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE286) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE287) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE288) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE289) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE290) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE291) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE292) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE293) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE294) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE295) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE296) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE297) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE298) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE299) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE300) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE301) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE302) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE303) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE304) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE305) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE306) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE307) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE308) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE309) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE310) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE311) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE312) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE313) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE314) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE315) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE316) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE317) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE318) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE319) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE320) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE321) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE322) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE323) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE324) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE325) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE326) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE327) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE328) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE329) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE330) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE331) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE332) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE333) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE334) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE335) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE336) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE337) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE338) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE339) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE340) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE341) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE342) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE343) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE344) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE345) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE346) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE347) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE348) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE349) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE350) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE351) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE352) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE353) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE354) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE355) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE356) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE357) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE358) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE359) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE360) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE361) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE362) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE363) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE364) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE365) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE366) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE367) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE368) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE369) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE370) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE371) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE372) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE373) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE374) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE375) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE376) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE377) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE378) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE379) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE380) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE381) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE382) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE383) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE384) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE385) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE386) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE387) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE388) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE389) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE390) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE391) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE392) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE393) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE394) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE395) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE396) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE397) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE398) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE399) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE400) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE401) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE402) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE403) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE404) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE405) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE406) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE407) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE408) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE409) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE410) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE411) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE412) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE413) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE414) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE415) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE416) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE417) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE418) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE419) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE420) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE421) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE422) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE423) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE424) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE425) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE426) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE427) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE428) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE429) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE430) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE431) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE432) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE433) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE434) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE435) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE436) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE437) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE438) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE439) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE440) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE441) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE442) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE443) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE444) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE445) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE446) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE447) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE448) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE449) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE450) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE451) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE452) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE453) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE454) DEVT(3350) VOL(CBT001))
 DEFINE NONVSAM(NAME(CBT249.FILE455) DEVT(3350) VOL(CBT001))
 SET LASTCC = 0
 SET MAXCC = 0
./ ADD NAME=CBT060   8007-74013-74076-1645-00038-00935-00000-HERC01
//HERC01  JOB  (CBT),
//             'Catalog CBT',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             REGION=2048K
//*********************************************************************
//*
//*                       CBT setup
//*                       =========
//*
//* Name: CBT.MVS38J.SETUP(CBT060)
//*
//* Desc: Define the CBT files into out private CBT catalog
//*
//*********************************************************************
//*
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE CBT.MVS38J.LOAD      NOSCRATCH NONVSAM
 DELETE CBT.MVS38J.ASM       NOSCRATCH NONVSAM
 DELETE CBT.MVS38J.MACLIB    NOSCRATCH NONVSAM
 DELETE CBT.MVS38J.CNTL      NOSCRATCH NONVSAM
 DELETE CBT.MVS38J.OBJ       NOSCRATCH NONVSAM
 DELETE CBT.MVS38J.PROCLIB   NOSCRATCH NONVSAM
 DELETE CBT.CMDSBSYS.LINKLIB NOSCRATCH NONVSAM
 SET LASTCC=0
 SET MAXCC=0
 DEFINE ALIAS(NAME(CBT) RELATE(SYS1.UCAT.CBT))
 DEFINE NONVSAM(NAME(CBT.MVS38J.LOAD)      DEVT(3350) VOL(MVSCAT))
 DEFINE NONVSAM(NAME(CBT.MVS38J.ASM)       DEVT(3350) VOL(MVSCAT))
 DEFINE NONVSAM(NAME(CBT.MVS38J.CNTL)      DEVT(3350) VOL(MVSCAT))
 DEFINE NONVSAM(NAME(CBT.MVS38J.MACLIB)    DEVT(3350) VOL(MVSCAT))
 DEFINE NONVSAM(NAME(CBT.CMDSBSYS.LINKLIB) DEVT(3350) VOL(MVSCAT))
 SET LASTCC = 0
 SET MAXCC = 0
./ ADD NAME=CBT070   8004-74013-74076-1655-00392-00388-00000-HERC01
//HERC01  JOB  (CBT),
//             'LOAD CBT072',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(2,1),
//             REGION=4096K
//********************************************************************
//*                                                                  *
//* Name: CBT.MVS38J.CNTL(CBT070)                                    *
//*                                                                  *
//* Desc: Drop CBT tape to DASD                                      *
//*                                                                  *
//* This job takes the aws tape file of CBT tape 72 and drops it     *
//* onto DASD volume CBTCAT                                          *
//*                                                                  *
//* There will be a general purpose file (CBT072.FILES.PDS) with     *
//* members FILExxx (x a number).  Some of the files on tape 72      *
//* are in IEBCOPY unload format and wil be reloaded as separate     *
//* PDS datasets                                                     *
//*                                                                  *
//********************************************************************
//IEBCOPY PROC SO=A
//COPY    EXEC PGM=IEBCOPY
//SYSPRINT DD  DUMMY,SYSOUT=&SO
//SYSIN    DD  DUMMY
//        PEND
//IEBGENER PROC SO=A
//GENER   EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=&SO
//SYSIN    DD  DUMMY
//        PEND
//PAN     PROC SO=A,MEMBER=
//GENER   EXEC PGM=IEBGENER
//SYSIN    DD  DUMMY
//SYSPRINT DD  DUMMY,SYSOUT=&SO
//SYSUT2   DD  DISP=SHR,DSN=CBT072.FILES.PDS(FILE&MEMBER)
//SYSUT1   DD  UNIT=(TAPE,,DEFER),
//             VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=80,BLKSIZE=32720),
//             DSN=QAQ,
//             LABEL=(&MEMBER,NL)
//        PEND
//DFALIAS EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE ALIAS(NAME(CBT072) RELATE(SYS1.UCAT.CBT))
//CLEANUP EXEC PGM=IEFBR14
//CBT072   DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.FILES.PDS,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//DCMSDOC  DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.DCMS.DOC,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//DCMSOBJ  DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.DCMS.OBJ,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//DCMSASM  DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.DCMS.ASM,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//DCMSLOAD DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.DCMS.LOAD,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//SMPLINK  DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.SMP.LINKLIB,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//MLINKLIB DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.SYS2.MLINKLIB,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//CMDSUBS  DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.CMDSUBS.LINKLIB,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//APEMAN   DD  DISP=(MOD,DELETE,DELETE),
//             DSN=CBT072.MVS.APEMAN,
//             SPACE=(CYL,(0)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//ALLOC   EXEC PGM=IEFBR14
//DCMSASM  DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.DCMSASM,
//             SPACE=(CYL,(10,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//DCMSOBJ  DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.DCMSOBJ,
//             SPACE=(CYL,(10,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)
//DCMSLOAD DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.DCMSLOAD,
//             SPACE=(CYL,(10,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//DCMSDOC  DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.DCMSDOC,
//             SPACE=(CYL,(1,1)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=(RECFM=VBA,LRECL=255,BLKSIZE=3156)
//CBT072   DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.CBT072,
//             SPACE=(CYL,(20,10,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.MACLIB
//SMPLINK  DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.SMPLINK,
//             SPACE=(CYL,(1,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//MLINKLIB DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.MLINKLIB,
//             SPACE=(CYL,(1,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//CMDSUBS  DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.CMDSUBS,
//             SPACE=(CYL,(1,1,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//APEMAN   DD  DISP=(NEW,CATLG,DELETE),
//             DSN=*.CLEANUP.APEMAN,
//             SPACE=(CYL,(10,10,50)),
//             UNIT=3350,VOL=SER=CBTCAT,
//             DCB=SYS1.LINKLIB
//STEP001 EXEC PAN,SO=A,MEMBER=001
//STEP002 EXEC PAN,SO=A,MEMBER=002
//STEP003 EXEC PAN,SO=A,MEMBER=003
//STEP006 EXEC PAN,SO=A,MEMBER=006
//STEP007 EXEC PAN,SO=A,MEMBER=007
//STEP008 EXEC PAN,SO=A,MEMBER=008
//STEP009 EXEC PAN,SO=A,MEMBER=009
//STEP010 EXEC PAN,SO=A,MEMBER=010
//SYSUT1   DD  *
 NAME IGC0003D IEE0403D
*
*   SUPERZAP COMMAND TABLE TO CHANGE  RELEASE 3.0 SYSTEM
*   MSGRT COMMAND TO (#)
*
 VER 0390 C59400
 VER 0393 D4E2,C7D9,E3D4,D9         MSGRTMR
 REP 0390 869400
 REP 0393 C3D4,C4D9,D6E4,7B         CMDROU#
//STEP011 EXEC PAN,SO=A,MEMBER=011
//STEP012 EXEC PAN,SO=A,MEMBER=012
//STEP013 EXEC PAN,SO=A,MEMBER=013
//STEP014 EXEC PAN,SO=A,MEMBER=014
//STEP015 EXEC PAN,SO=A,MEMBER=015
//STEP016 EXEC PAN,SO=A,MEMBER=016
//SYSUT1   DD
//         DD  DATA,DLM='=='
//*
//* BEFORE YOU START PUTTING THIS IN MAKE A COPY
//* OF IGC0003D FROM LPALIB TO A LIBRARY THAT WILL
//* BE POINTED TO BY SYSLIB. DO THIS ONLY ONCE.
//*
//STEP01    EXEC  PGM=IEWL,REGION=384K,
// PARM='REUS,RENT,REFR,NCAL,LET,XREF,LIST'
//SYSPRINT DD SYSOUT=C
//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR
//SYSLIB   DD DSN=SYS2.USERLIB,DISP=SHR
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSLIN   DD *
++WRITE WORK,CBT211J
==
//STEP17A  EXEC  PAN,SO=Y,MEMBER=017A
//SYSUT1    DD   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                         *
*          THIS ZAP WILL CHANGE THE HEADER FROM           *
*                                                         *
*       CBT X-REFERENCE LISTING OF SMP CDS DATASET        *
*                                                         *
*                       TO                                *
*                                                         *
*       CROSS-REFERENCE LISTING OF SMP CDS DATASET        *
*                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  NAME SMP004 SMPXREF2
  VER 0316 C2E340E7        CBT X (CROSS REFERENCE HDR NAME)
  REP 0316 D9D6E2E2        CROSS REFERENCE HDR NAME
//STEP017 EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=X
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//SMPLINK  DD  DISP=SHR,DSN=*.CLEANUP.SMPLINK
//TAPE     DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(17,NL),
//             DCB=DEN=3
//SYSIN    DD  *
 COPY INDD=TAPE,OUTDD=SMPLINK
//STEP018 EXEC PAN,SO=A,MEMBER=018
//STEP019 EXEC PAN,SO=A,MEMBER=019
//STEP020 EXEC PAN,SO=A,MEMBER=020
//STEP021 EXEC PAN,SO=A,MEMBER=021
//STEP022 EXEC PAN,SO=A,MEMBER=022
//STEP023 EXEC PAN,SO=A,MEMBER=023
//STEP027 EXEC PAN,SO=A,MEMBER=027
//STEP028 EXEC PAN,SO=A,MEMBER=028
//STEP029 EXEC PAN,SO=A,MEMBER=029
//STEP030 EXEC PAN,SO=A,MEMBER=030
//STEP031 EXEC PAN,SO=A,MEMBER=031
//STEP032 EXEC PAN,SO=A,MEMBER=032
//STEP033 EXEC PAN,SO=A,MEMBER=033
//STEP034 EXEC PAN,SO=A,MEMBER=034
//STEP035 EXEC PAN,SO=A,MEMBER=035
//STEP40  EXEC IEBCOPY,REGION=384K
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(40,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.APEMAN
//STEP041 EXEC PAN,SO=A,MEMBER=041
//STEP042 EXEC PAN,SO=A,MEMBER=042
//STEP043 EXEC PAN,SO=A,MEMBER=043
//STEP044 EXEC PAN,SO=A,MEMBER=044
//STEP045 EXEC PAN,SO=A,MEMBER=045
//STEP046 EXEC PAN,SO=A,MEMBER=046
//STEP047 EXEC PAN,SO=A,MEMBER=047
//STEP048 EXEC PAN,SO=A,MEMBER=048
//STEP049 EXEC PAN,SO=A,MEMBER=049
//STEP050 EXEC PAN,SO=A,MEMBER=050
//STEP051 EXEC PAN,SO=A,MEMBER=051
//STEP052 EXEC PAN,SO=A,MEMBER=052
//STEP053 EXEC PAN,SO=A,MEMBER=053
//STEP054 EXEC PAN,SO=A,MEMBER=054
//STEP055 EXEC PAN,SO=A,MEMBER=055
//STEP056 EXEC PAN,SO=A,MEMBER=056
//STEP057 EXEC PAN,SO=A,MEMBER=057
//STEP058 EXEC IEBCOPY
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(58,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.MLINKLIB
//STEP070 EXEC PAN,SO=A,MEMBER=070
//STEP071 EXEC PAN,SO=A,MEMBER=071
//STEP072 EXEC PAN,SO=A,MEMBER=072
//STEP074 EXEC PAN,SO=A,MEMBER=074
//STEP075 EXEC PAN,SO=A,MEMBER=075
//STEP076 EXEC PAN,SO=A,MEMBER=076
//STEP077 EXEC PAN,SO=A,MEMBER=077
//STEP078 EXEC PAN,SO=A,MEMBER=078
//STEP079 EXEC PAN,SO=A,MEMBER=079
//STEP080 EXEC PAN,SO=A,MEMBER=080
//STEP081 EXEC PAN,SO=A,MEMBER=081
//STEP082 EXEC PAN,SO=A,MEMBER=082
//STEP083 EXEC PAN,SO=A,MEMBER=083
//STEP084 EXEC PAN,SO=A,MEMBER=084
//STEP085 EXEC PAN,SO=A,MEMBER=085
//STEP086 EXEC PAN,SO=A,MEMBER=086
//STEP091 EXEC PAN,SO=A,MEMBER=091
//STEP092 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=133,BLKSIZE=32718),
//             DSN=QAQ,LABEL=(92,NL)
//SYSUT2   DD  SYSOUT=A
//STEP093 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=133,BLKSIZE=32718),
//             DSN=QAQ,LABEL=(93,NL)
//SYSUT2   DD  SYSOUT=A
//STEP094 EXEC PAN,SO=A,MEMBER=094
//STEP095 EXEC PAN,SO=A,MEMBER=095
//STEP096 EXEC PAN,SO=A,MEMBER=096
//STEP097 EXEC PAN,SO=A,MEMBER=097
//STEP098 EXEC PAN,SO=A,MEMBER=098
//STEP099 EXEC PAN,SO=A,MEMBER=099
//STEP100 EXEC PAN,SO=A,MEMBER=100
//STEP101 EXEC PAN,SO=A,MEMBER=101
//STEP102 EXEC PAN,SO=A,MEMBER=102
//STEP103 EXEC PAN,SO=A,MEMBER=103
//STEP104 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=133,BLKSIZE=32718),
//             DSN=QAQ,LABEL=(104,NL)
//SYSUT2   DD  SYSOUT=A
//STEP105 EXEC PAN,SO=A,MEMBER=105
//STEP106 EXEC PAN,SO=A,MEMBER=106
//STEP107 EXEC PAN,SO=A,MEMBER=107
//STEP108 EXEC PAN,SO=A,MEMBER=108
//STEP109 EXEC PAN,SO=A,MEMBER=109
//STEP110 EXEC PAN,SO=A,MEMBER=110
//STEP111 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=133,BLKSIZE=32718),
//             DSN=QAQ,LABEL=(111,NL)
//SYSUT2   DD  SYSOUT=A
//STEP112 EXEC PAN,SO=A,MEMBER=112
//STEP113 EXEC PAN,SO=A,MEMBER=113
//STEP116 EXEC PAN,SO=A,MEMBER=116
//STEP117 EXEC PAN,SO=A,MEMBER=117
//STEP118 EXEC PAN,SO=A,MEMBER=118
//STEP119 EXEC PAN,SO=A,MEMBER=119
//STEP120 EXEC PAN,SO=A,MEMBER=120
//STEP121 EXEC PAN,SO=A,MEMBER=121
//STEP122 EXEC PAN,SO=A,MEMBER=122
//STEP123 EXEC PAN,SO=A,MEMBER=123
//STEP124 EXEC PAN,SO=A,MEMBER=124
//STEP125 EXEC PAN,SO=A,MEMBER=125
//STEP126 EXEC IEBCOPY
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(126,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.CMDSUBS
//STEP127 EXEC PAN,SO=A,MEMBER=127
//STEP130 EXEC PAN,SO=A,MEMBER=130
//STEP131 EXEC PAN,SO=A,MEMBER=131
//STEP132 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=VBA,LRECL=255,BLKSIZE=3156),
//             DSN=QAQ,LABEL=(132,NL)
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.DCMSDOC
//STEP133 EXEC IEBCOPY
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(133,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.DCMSASM
//STEP134 EXEC IEBCOPY
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(134,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.DCMSOBJ
//STEP135 EXEC IEBCOPY
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             LABEL=(135,NL),
//             DCB=DEN=3
//SYSUT2   DD  DISP=SHR,DSN=*.CLEANUP.DCMSLOAD
//STEP136 EXEC IEBGENER
//SYSUT1   DD  UNIT=TAPE,VOL=(,RETAIN,SER=MVSTAP),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=VB,LRECL=255,BLKSIZE=3156),
//             DSN=QAQ,
//             LABEL=(136,NL)
//SYSUT2   DD  SYSOUT=A
//STEP137 EXEC PAN,SO=A,MEMBER=137
//STEP138 EXEC PAN,SO=A,MEMBER=138
//STEP139 EXEC PAN,SO=A,MEMBER=139
//STEP140 EXEC PAN,SO=A,MEMBER=140
//STEP141 EXEC PAN,SO=A,MEMBER=141
//STEP142 EXEC PAN,SO=A,MEMBER=142
//STEP143 EXEC PAN,SO=A,MEMBER=143
//STEP144 EXEC PAN,SO=A,MEMBER=144
//STEP145 EXEC PAN,SO=A,MEMBER=145
//STEP146 EXEC PAN,SO=A,MEMBER=146
//STEP147 EXEC PAN,SO=A,MEMBER=147
//STEP148 EXEC PAN,SO=A,MEMBER=148
//STEP149 EXEC PAN,SO=A,MEMBER=149
//STEP150 EXEC PAN,SO=A,MEMBER=150
//STEP151 EXEC PAN,SO=A,MEMBER=151
//STEP152 EXEC PAN,SO=A,MEMBER=152
//STEP153 EXEC PAN,SO=A,MEMBER=153
//STEP154 EXEC PAN,SO=A,MEMBER=154
//STEP155 EXEC PAN,SO=A,MEMBER=155
//STEP156 EXEC PAN,SO=A,MEMBER=156
//STEP157 EXEC PAN,SO=A,MEMBER=157
//STEP158 EXEC PAN,SO=A,MEMBER=158
//STEP159 EXEC PAN,SO=A,MEMBER=159
//STEP160 EXEC PAN,SO=A,MEMBER=160
//STEP161 EXEC PAN,SO=A,MEMBER=161
//STEP162 EXEC PAN,SO=A,MEMBER=162
//STEP163 EXEC PAN,SO=A,MEMBER=163
//STEP164 EXEC PAN,SO=A,MEMBER=164
//STEP165 EXEC PAN,SO=A,MEMBER=165
//STEP166 EXEC PAN,SO=A,MEMBER=166
//STEP172 EXEC PAN,SO=A,MEMBER=172
//STEP173 EXEC PAN,SO=A,MEMBER=173
//STEP174 EXEC PAN,SO=A,MEMBER=174
./ ADD NAME=CBT080   8005-74001-74038-1050-00046-00373-00000-HERC01
//HERC01  JOB  (CBT),
//             'Install compression',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(2,1),
//             REGION=4096K
//********************************************************************
//*                                                                  *
//* Name: CBT.MVS38J.CNTL(CBT080)                                    *
//*                                                                  *
//* Desc: Assemble and link the CBT compression/decompression program*
//*                                                                  *
//********************************************************************
/*MESSAGE  *****************************
/*MESSAGE  *                           *
/*MESSAGE  *          Note:            *
/*MESSAGE  *          =====            *
/*MESSAGE  *                           *
/*MESSAGE  * This job needs the CBTtape*
/*MESSAGE  * 129 in AWS format.  This  *
/*MESSAGE  * can be downloaded from    *
/*MESSAGE  *                           *
/*MESSAGE  * http://www.cbttape.org    *
/*MESSAGE  *                           *
/*MESSAGE  *****************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOLIST'
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSIN    DD  UNIT=(TAPE,,DEFER),
//             VOL=(,RETAIN,SER=CBT129),
//             DISP=(OLD,PASS),
//             DCB=(DEN=3,RECFM=FB,LRECL=80,BLKSIZE=32720),
//             DSN=CBT129.FILE002,
//             LABEL=(2,NL)
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,PARM='MAP,LIST,XREF'
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(CBT973) <<==== change
./ ADD NAME=CBT090   8007-74013-74076-1700-00369-00358-00000-HERC01
//HERC01  JOB  (CBT),
//             'LOAD CBT129',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(0,0),
//             NOTIFY=HERC01,
//             REGION=4096K
//********************************************************************
//*                                                                  *
//* Name: CBT.MVS38J.CNTL(CBT090)                                    *
//*                                                                  *
//* Desc: Drop down files from cbt tape 129                          *
//*                                                                  *
//* Note: The actual jobsteps begin after the line containing        *
//*       the string >>>>>>>>>>>>>>>>>>>>                            *
//*                                                                  *
//********************************************************************
//COPY   PROC  V1=CBT129,          INPUT TAPE VOLUME
//             VO=CBTCAT,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS='*',          SYSOUT CLASS
//             WORK1=3350,         DASD OUTPUT TYPE
//             WORK2=3350,         DASD WORK TYPE
//             INDEX=CBT129,       FIRST LEVEL INDEX FOR DSNAME
//             DSP='CATLG,DELETE', OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=56,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY    EXEC PGM=IEBCOPY,REGION=256K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=SER=&V1,DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY.)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB,DISP=(NEW,&DSP.),
//             UNIT=&WORK1.,FREE=CLOSE,
//             SPACE=(&ALLOC.,(&PRI.,&SEC.,&DIR.),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT129,          INPUT TAPE VOLUME
//             VO=CBTCAT,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS='*',          SYSOUT CLASS
//             WORK1=3350,         DASD OUTPUT TYPE
//             INDEX=CBT129,       FIRST LEVEL INDEX FOR DSNAME
//             DSP='CATLG,DELETE', OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=256K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=SER=&V1,DISP=(OLD,PASS),
//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKI.),
//             LABEL=(&LAB,&TY.)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB,DISP=(NEW,&DSP.),
//             UNIT=&WORK1.,FREE=CLOSE,
//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKO.),
//             SPACE=(&ALLOC.,(&PRI.,&SEC.),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT129,          INPUT TAPE VOLUME
//             VO=CBTCAT,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS='*',          SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX=CBT129,       FIRST LEVEL INDEX FOR DSNAME
//             DSP='CATLG,DELETE', OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=56,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE   EXEC  PGM=IEBUPDTE,PARM=NEW,REGION=256K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSIN    DD  UNIT=&UNT,VOL=SER=&V1,DISP=(OLD,PASS),
//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKI.),
//             LABEL=(&LAB,&TY.)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB,DISP=(NEW,&DSP.),
//             UNIT=&WORK1.,FREE=CLOSE,
//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKO.),
//             SPACE=(&ALLOC.,(&PRI.,&SEC.,&DIR.),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT129,          INPUT TAPE VOLUME
//             VO=CBTCAT,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=3350,         DASD OUTPUT TYPE
//             INDEX=CBT129,       FIRST LEVEL INDEX FOR DSNAME
//             DSP='CATLG,DELETE', OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//INPUT    DD  UNIT=&UNT,VOL=SER=&V1,DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI.),
//             LABEL=(&LAB,&TY.)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB,DISP=(NEW,&DSP.),
//             UNIT=&WORK1.,FREE=CLOSE,
//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKO.),
//             SPACE=(&ALLOC.,(&PRI.,&SEC.),RLSE),VOL=SER=&VO
//       PEND
//*>>>>>>>>>>>>>>>>>>>>>>>>> beginning of jobsteps <<<<<<<<<<<<<<<<<<<
//STEP001     EXEC GENERO,LAB=001
//STEP002     EXEC GENERO,LAB=002
//STEP003     EXEC GENERO,LAB=003
//STEP004     EXEC GENER,LAB=004
//STEP005     EXEC GENER,LAB=005
//STEP006     EXEC GENER,LAB=006
//STEP007     EXEC GENER,LAB=007
//STEP008     EXEC GENER,LAB=008
//STEP009     EXEC GENER,LAB=009
//STEP027     EXEC GENER,LAB=027
//STEP028     EXEC GENER,LAB=028
//STEP029     EXEC GENER,LAB=029
//STEP030     EXEC GENER,LAB=030
//STEP031     EXEC GENER,LAB=031
//STEP032     EXEC GENER,LAB=032,FM=FBA
//STEP033     EXEC GENER,LAB=033
//STEP034     EXEC GENER,LAB=034
//STEP035     EXEC COPY,LAB=035
//STEP040     EXEC COPY,LAB=040
//STEP041     EXEC GENER,LAB=041
//STEP042     EXEC GENER,LAB=042
//STEP043     EXEC GENERO,LAB=043,FM=FB,LR=133,BKI=32718,BKO=6118
//STEP044     EXEC COPY,LAB=044
//STEP045     EXEC GENER,LAB=045,FM=FBA
//STEP046     EXEC GENER,LAB=046
//STEP047     EXEC GENER,LAB=047
//STEP048     EXEC GENER,LAB=048
//STEP049     EXEC GENER,LAB=049
//STEP050     EXEC GENER,LAB=050
//STEP051     EXEC GENER,LAB=051
//STEP052     EXEC GENER,LAB=052
//STEP053     EXEC GENER,LAB=053
//STEP054     EXEC GENER,LAB=054
//STEP055     EXEC GENER,LAB=055
//STEP056     EXEC GENER,LAB=056
//STEP057     EXEC GENER,LAB=057,FM=FBA
//STEP058     EXEC COPY,LAB=058
//STEP059     EXEC GENERO,LAB=059,FM=VBA,LR=137,BKI=32747,BKO=6136
//STEP060     EXEC GENER,LAB=060
//STEP061     EXEC GENER,LAB=061
//STEP062     EXEC GENER,LAB=062
//STEP063     EXEC GENER,LAB=063
//STEP064     EXEC COPY,LAB=064
//STEP065     EXEC COPY,LAB=065
//STEP066     EXEC COPY,LAB=066
//STEP067     EXEC COPY,LAB=067
//STEP068     EXEC COPY,LAB=068
//STEP069     EXEC COPY,LAB=069
//STEP070     EXEC GENER,LAB=070
//STEP071     EXEC GENER,LAB=071
//STEP072     EXEC GENER,LAB=072
//STEP073     EXEC GENER,LAB=073
//STEP074     EXEC GENERO,LAB=074,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP075     EXEC GENER,LAB=075
//STEP076     EXEC GENER,LAB=076
//STEP077     EXEC GENER,LAB=077,FM=FBA
//STEP078     EXEC GENER,LAB=078
//STEP079     EXEC GENER,LAB=079
//STEP080     EXEC GENER,LAB=080
//STEP081     EXEC GENER,LAB=081
//STEP082     EXEC GENER,LAB=082,FM=FBA
//STEP083     EXEC GENER,LAB=083
//STEP084     EXEC GENER,LAB=084
//STEP085     EXEC GENER,LAB=085
//STEP086     EXEC GENER,LAB=086
//STEP087     EXEC GENER,LAB=087
//STEP088     EXEC COPY,LAB=088
//STEP089     EXEC GENER,LAB=089
//STEP090     EXEC GENER,LAB=090
//STEP091     EXEC GENER,LAB=091
//STEP092     EXEC GENERO,LAB=092,FM=FBM,LR=133,BKI=32718,BKO=6118
//STEP093     EXEC GENERO,LAB=093,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP094     EXEC GENER,LAB=094
//STEP095     EXEC GENER,LAB=095
//STEP096     EXEC GENER,LAB=096
//STEP097     EXEC GENER,LAB=097
//STEP098     EXEC GENER,LAB=098
//STEP099     EXEC GENER,LAB=099
//STEP100     EXEC GENER,LAB=100
//STEP101     EXEC GENER,LAB=101
//STEP102     EXEC GENER,LAB=102
//STEP103     EXEC GENER,LAB=103
//STEP104     EXEC GENERO,LAB=104,FM=FBM,LR=133,BKI=32718,BKO=6118
//STEP105     EXEC GENER,LAB=105
//STEP106     EXEC GENER,LAB=106
//STEP107     EXEC GENER,LAB=107
//STEP108     EXEC GENER,LAB=108
//STEP109     EXEC GENER,LAB=109
//STEP110     EXEC GENER,LAB=110
//STEP111     EXEC GENERO,LAB=111,FM=FBM,LR=133,BKI=32718,BKO=6118
//STEP112     EXEC GENER,LAB=112
//STEP113     EXEC GENER,LAB=113
//STEP114     EXEC GENERO,LAB=114,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP115     EXEC GENER,LAB=115
//STEP117     EXEC GENER,LAB=117
//STEP118     EXEC GENER,LAB=118
//STEP119     EXEC GENER,LAB=119
//STEP127     EXEC GENER,LAB=127
//STEP128     EXEC GENER,LAB=128
//STEP129     EXEC COPY,LAB=129
//STEP130     EXEC GENER,LAB=130,FM=FBA
//STEP131     EXEC GENER,LAB=131
//STEP132     EXEC GENER,LAB=132
//STEP133     EXEC GENER,LAB=133
//STEP134     EXEC GENER,LAB=134
//STEP135     EXEC GENER,LAB=135
//STEP136     EXEC GENERO,LAB=136,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP137     EXEC GENER,LAB=137
//STEP138     EXEC GENER,LAB=138
//STEP139     EXEC GENER,LAB=139
//STEP140     EXEC GENER,LAB=140
//STEP141     EXEC GENER,LAB=141
//STEP142     EXEC GENER,LAB=142
//STEP143     EXEC GENER,LAB=143 TYPE=CLIST
//STEP144     EXEC GENER,LAB=144
//STEP145     EXEC GENER,LAB=145
//STEP146     EXEC GENER,LAB=146
//STEP147     EXEC GENER,LAB=147
//STEP148     EXEC GENER,LAB=148
//STEP149     EXEC GENER,LAB=149
//STEP150     EXEC GENER,LAB=150
//STEP151     EXEC GENER,LAB=151
//STEP152     EXEC GENER,LAB=152
//STEP153     EXEC GENER,LAB=153
//STEP154     EXEC GENER,LAB=154
//STEP155     EXEC GENER,LAB=155,FM=FBM
//STEP156     EXEC GENER,LAB=156
//STEP157     EXEC GENER,LAB=157
//STEP158     EXEC GENER,LAB=158
//STEP159     EXEC GENER,LAB=159
//STEP160     EXEC GENER,LAB=160
//STEP161     EXEC GENER,LAB=161
//STEP162     EXEC GENER,LAB=162
//STEP163     EXEC GENER,LAB=163
//STEP164     EXEC GENER,LAB=164
//STEP165     EXEC GENER,LAB=165
//STEP166     EXEC GENER,LAB=166
//STEP167     EXEC GENER,LAB=167
//STEP168     EXEC GENER,LAB=168
//STEP169     EXEC GENER,LAB=169
//STEP170     EXEC GENER,LAB=170
//STEP171     EXEC COPY,LAB=171
//STEP172     EXEC GENER,LAB=172,FM=FBA
//STEP173     EXEC GENER,LAB=173
//STEP174     EXEC GENER,LAB=174
//STEP175     EXEC GENER,LAB=175
//STEP176     EXEC GENER,LAB=176
//STEP177     EXEC GENER,LAB=177
//STEP178     EXEC GENER,LAB=178
//STEP179     EXEC GENER,LAB=179
//STEP180     EXEC GENER,LAB=180
//STEP181     EXEC GENER,LAB=181
//STEP182     EXEC GENER,LAB=182
//STEP183     EXEC GENER,LAB=183
//STEP184     EXEC GENER,LAB=184
//STEP185     EXEC GENER,LAB=185
//STEP186     EXEC GENER,LAB=186
//STEP188     EXEC GENER,LAB=188
//STEP189     EXEC GENER,LAB=189
//STEP190     EXEC GENER,LAB=190
//STEP191     EXEC GENER,LAB=191
//STEP192     EXEC GENER,LAB=192
//STEP193     EXEC GENER,LAB=193
//STEP194     EXEC GENER,LAB=194
//STEP195     EXEC GENER,LAB=195
//STEP196     EXEC GENER,LAB=196
//STEP197     EXEC GENER,LAB=197
//STEP198     EXEC GENER,LAB=198
//STEP199     EXEC GENER,LAB=199
//STEP200     EXEC COPY,LAB=200
//STEP201     EXEC GENER,LAB=201
//STEP202     EXEC GENER,LAB=202
//STEP203     EXEC GENER,LAB=203
//STEP204     EXEC GENER,LAB=204
//STEP205     EXEC GENER,LAB=205
//STEP206     EXEC GENER,LAB=206
//STEP207     EXEC GENER,LAB=207
//STEP208     EXEC GENER,LAB=208
//STEP209     EXEC GENER,LAB=209
//STEP210     EXEC GENER,LAB=210
//STEP211     EXEC GENER,LAB=211
//STEP212     EXEC GENER,LAB=212
//STEP213     EXEC GENER,LAB=213
//STEP214     EXEC GENER,LAB=214,FM=FBA
//STEP215     EXEC GENER,LAB=215
//STEP216     EXEC GENER,LAB=216
//STEP217     EXEC GENER,LAB=217
//STEP218     EXEC GENER,LAB=218
//STEP219     EXEC GENER,LAB=219
//STEP220     EXEC GENER,LAB=220
//STEP221     EXEC GENER,LAB=221
//STEP222     EXEC GENER,LAB=222
//STEP223     EXEC GENER,LAB=223
//STEP224     EXEC GENER,LAB=224
//STEP225     EXEC GENER,LAB=225
//STEP226     EXEC GENER,LAB=226
//STEP227     EXEC GENER,LAB=227
//STEP228     EXEC GENER,LAB=228
//STEP229     EXEC GENER,LAB=229
//STEP230     EXEC GENER,LAB=230
//STEP231     EXEC GENER,LAB=231
//STEP232     EXEC GENER,LAB=232
//STEP233     EXEC GENER,LAB=233
//STEP234     EXEC GENER,LAB=234
//STEP235     EXEC GENER,LAB=235
//STEP236     EXEC GENER,LAB=236
//STEP237     EXEC GENER,LAB=237
//STEP238     EXEC GENER,LAB=238
//STEP239     EXEC GENER,LAB=239
//STEP240     EXEC GENERO,LAB=240,FM=VBA,LR=137,BKI=32747,BKO=6136
//STEP241     EXEC GENER,LAB=241
//STEP242     EXEC GENER,LAB=242
//STEP243     EXEC GENER,LAB=243
//STEP244     EXEC GENER,LAB=244
//STEP245     EXEC COPY,LAB=245
//STEP246     EXEC GENER,LAB=246
//STEP247     EXEC GENER,LAB=247
//STEP248     EXEC GENER,LAB=248
//STEP249     EXEC GENER,LAB=249
//STEP250     EXEC GENER,LAB=250
//STEP251     EXEC GENER,LAB=251
//STEP252     EXEC GENER,LAB=252
//STEP253     EXEC GENER,LAB=253
//STEP254     EXEC GENER,LAB=254
//STEP255     EXEC GENER,LAB=255
//STEP256     EXEC COPY,LAB=256
//STEP257     EXEC GENER,LAB=257
//STEP258     EXEC GENER,LAB=258
//STEP259     EXEC GENER,LAB=259
//STEP260     EXEC GENER,LAB=260
//STEP261     EXEC GENER,LAB=261
//STEP262     EXEC GENER,LAB=262
//STEP263     EXEC GENER,LAB=263
//STEP264     EXEC GENER,LAB=264
//STEP265     EXEC GENER,LAB=265
//STEP266     EXEC GENER,LAB=266
//STEP267     EXEC COPY,LAB=267
//STEP268     EXEC GENER,LAB=268
//STEP269     EXEC GENER,LAB=269
//STEP270     EXEC GENER,LAB=270
//STEP271     EXEC GENER,LAB=271
//STEP272     EXEC GENER,LAB=272
//STEP273     EXEC GENER,LAB=273
//STEP274     EXEC GENER,LAB=274
//STEP275     EXEC GENER,LAB=275
//STEP276     EXEC GENER,LAB=276
//STEP277     EXEC GENER,LAB=277
./ ADD NAME=CBT100   8002-74013-74038-1052-00035-00034-00000-HERC01
//HERC01  JOB  (CBT),
//             'Copy FILE35',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             REGION=2048K
//*********************************************************************
//*
//*                       CBT Installation
//*                       ================
//*
//* DESC: CBT249.FILE35 contains many useful utility programs
//*       We copy them to SYS2.LINKLIB (for BATCH utilities)
//*       and SYS2.CMDLIB (for TSO command processors)
//*CBT249.FILE35 is part of the MVS Turnkey system
//*
//*********************************************************************
//*
//COPY    EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//FILE035  DD  DISP=SHR,DSN=CBT249.FILE035
//LINKLIB  DD  DISP=SHR,DSN=SYS2.LINKLIB
//CMDLIB   DD  DISP=SHR,DSN=SYS2.CMDLIB
//SYSIN    DD  *
 COPY INDD=FILE035,OUTDD=LINKLIB
 SELECT MEMBER=TSUPDATE
 SELECT MEMBER=RMFPRT
 SELECT MEMBER=TAPEMAP
 COPY INDD=FILE035,OUTDD=CMDLIB
 S M=(BPAGE,CPAGE,QTIME,QDATE,DEDUCT,RANKING,ST79INIT,SUPRTREK)
 S M=$VTOC
 S M=ADVENT
 S M=CPU
 S M=(VSAMADTL,VSAMAGET,VSAMAHLP,VSAMANAL,VSAMANDX,VSAMSIZE)
./ ADD NAME=CLIPDASD 8003-74076-74082-1452-00022-00017-00000-HERC01
//HERC01  JOB  (SETUP),
//             'CLIP DASD',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CLIPDASD
//*
//* DESC: Change volume serial of an offline DASD volume
//*
//********************************************************************
//ICKDSF  EXEC PGM=ICKDSF,PARM=NOREPLYU
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 REFORMAT UNITADDRESS(348) NOVERIFY VOLID(SRC000)
 REFORMAT UNITADDRESS(349) NOVERIFY VOLID(SRC001)
 REFORMAT UNITADDRESS(34A) NOVERIFY VOLID(SRC002)
 REFORMAT UNITADDRESS(34B) NOVERIFY VOLID(SRC003)
//
 REFORMAT UNITADDRESS(342) NOVERIFY VOLID(CBTCAT)
./ ADD NAME=CMDSB@   8008-74014-74038-1658-00061-00044-00000-HERC01
                   THE # COMMAND SUBSYSTEM

You need to have file 266 from the CBT tape 249 available to be able
to run the installation jobs.  The jobs assume this file to be in
a PDS of the name CBT249.FILE266

Before using the # system you should read the documentation included
in CBT249.FILE266

CMDSB1   -  This Job will install the PTF UZ61025.  Without this PTF
            the needed assembly jobs will not assemble CMDSBSYS
            correctly.  The PTF has already been included during
            the RECEIVE for the Turnkey system (Version 2).

            This job is required unless you plan to install the
            pre-assembled and linked modules

            On the Turnkey system (Version 3) the PTF is already
            APPLYed and ACCEPTed, and you can omit this job

CMDSB2    - This job will install a USERMOD ZUM0004.  This usermod
            will add CMD1 to the subsystem name table.  This job
            is required, unless you are using the MVS Turnkey
            system Version 3, where the USERMOD is already APPLYed

CMDSB3    - Allocate the files for building CMDSBSYS.  Required if
            you want to reassemble CMDSBSYS, otherwise proceed to
            CMDSB6

CMDSB4    - Assemble and link of CMDSBSYS files. (Part1)  Required if
            you want to reassemble CMDSBSYS, otherwise proceed to
            CMDSB6

CMDSB5    - Assemble and link of CNDSBSYS files. (Part2)  Required if
            you want to reassemble CMDSBSYS, otherwise proceed to
            CMDSB6

CMDSB6    - Print the CMDSBSYS documentation.  Create CMDSBSYS
            procedures.  This job is required

CMDSB7    - Copy the (pre)linked modules to the correct target libs
            This job is required

CMDSB8    - You need to update the TSO authorized commands table.
            In the Turnkey system this is usermod ZUM001.  The
            source is in SYS1.UMODSRC(IKJEFTE2),
            and the JCL to install it is in this member

Remember to start CMD1 automatically by either placing

COM='S CMD1'

into SYS1.PARMLIB(COMMND00)
or by adding

$VS,'S CMD1'

to the OS command section of SYS1.PARMLIB(JES2PARM)
You need to IPL the system with the CLPA option, then you can use
the # command subsystem

./ ADD NAME=CMDSB1   8008-74002-74038-1655-00048-00260-00000-HERC01
//HERC01  JOB  (MVS),
//             'INSTALL # SUBSYS',
//             CLASS=A,
//             RESTART=APPCHCK.HMASMP,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* Name: CBT.MVS38J.CNTL(CMDSB1)                                    *
//*                                                                  *
//* Type: JCL to install a PTF                                       *
//*                                                                  *
//* Desc: This PTF updates the RESETPL macro.  Without this PTF      *
//*       the assembly of CSCSBMON will fail                         *
//*                                                                  *
//* Note: The PTF UZ61025 was installed as part of SYSGEN job        *
//*       sg0050 of the MVS Turnkey system generation.  If you are   *
//*       not using the MVS Turnkey system, or did not run SG0050,   *
//*       you need to remove the RESTART line from the jobcard       *
//*                                                                  *
//********************************************************************
//RECEIVE EXEC SMPREC
//SMPPTFIN DD  DISP=SHR,DSN=CBT.MVS38J.CNTL(UZ61025)
//SMPCNTL  DD  *
 RECEIVE.
//APPCHCK EXEC SMPAPP
//SMPCNTL  DD  *
 APPLY GROUP(UZ61025)
       DIS(WRITE)
       CHECK
 .
//APPLY  EXEC SMPAPP,COND=(0,NE)
//SMPCNTL DD  *
 APPLY GROUP(UZ61025)
       DIS(WRITE)
       .
//ACCCHCK EXEC SMPACC,COND=(0,NE)
//SMPCNTL  DD  *
 ACCEPT GROUP(UZ61025)
       DIS(WRITE)
       CHECK
 .
//ACCEPT EXEC SMPACC,COND=(0,NE)
//SMPCNTL DD  *
 ACCEPT GROUP(UZ61025)
        DIS(WRITE)
 .
./ ADD NAME=CMDSB2   8002-74014-74014-1623-00047-00047-00000-HERC01
//HERC01   JOB (SMP),
//             'Install ZUM0004',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(0,0),
//             REGION=8192K,
//             NOTIFY=HERC01
//* +----------------------------------------------------------------+
//* |                                                                |
//* | Name: CBT.MVS38J.CNTL(CMDSB2)                                  |
//* |                                                                |
//* | Type: JCL to install usermod ZUM0004                           |
//* |                                                                |
//* | Desc: Add CMD1 to Subsystem Name Table                         |
//* |                                                                |
//* +----------------------------------------------------------------+
/*MESSAGE *****************************
/*MESSAGE *                           *
/*MESSAGE * To activate this usermod  *
/*MESSAGE * an IPL with the CLPA      *
/*MESSAGE * option is required        *
/*MESSAGE *                           *
/*MESSAGE *****************************
//REJECT  EXEC SMPACC
//SMPCNTL DD *
 RESTORE G(ZUM0004).
 RESETRC.
 REJECT  S(ZUM0004).
//RECEIVE EXEC SMPREC
//SMPPTFIN DD    *
++USERMOD (ZUM0004) .
++VER (Z038) FMID(EBB1102)
  /*
   Add entry to subsystem name table
  */ .
++ ZAP (IEFJESNM) .
 NAME IEFJESNM
 VER 0008 00000000   from X'00000000' empty slot
 REP 0008 C3D4C4F1     to C'CMD1'     added subsystem name
 IDRDATA ZUM0004
//SMPCNTL DD *
 RECEIVE SELECT(ZUM0004).
//APPLY EXEC SMPAPP,COND=(0,NE,RECEIVE.HMASMP)
//SMPCNTL DD *
 APPLY S(ZUM0004)
       DIS(WRITE)
       .
./ ADD NAME=CMDSB3   8004-74014-74014-1736-00030-00047-00000-HERC01
//HERC01  JOB  (MVS),
//             'Install # subsys',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* NAME: SYS1.SETUP.CNTL(CMDSB3)                                    *
//*                                                                  *
//* TYPE: JCL to allocate the CMDSBSYS load lib                      *
//*                                                                  *
//* DESC: This job is not needed if you just want to install the     *
//*       pre-assembled/compiled version                             *
//*                                                                  *
//********************************************************************
//CLEANUP EXEC PGM=IEFBR14
//LINKLIB  DD  DSN=CBT.CMDSBSYS.LINKLIB,
//             UNIT=SYSDA,
//             VOL=SER=CBT003,
//             DISP=(MOD,DELETE,DELETE),
//             SPACE=(CYL,(0)),
//             DCB=(RECFM=U,BLKSIZE=6144)
//ALLOC   EXEC PGM=IEFBR14
//LINKLIB  DD  DSN=*.CLEANUP.LINKLIB,
//             UNIT=SYSDA,
//             VOL=REF=*.CLEANUP.LINKLIB,
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(5,1,28)),
//             DCB=(RECFM=U,BLKSIZE=6144)
./ ADD NAME=CMDSB4   8015-74002-74014-1847-00087-00533-00000-HERC01
//HERC01  JOB  (MVS),
//             'INSTALL # SUBSYS',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* NAME: SYS1.SETUP.CNTL(CMDSB4)                                    *
//*                                                                  *
//* TYPE: JCL to assemble modules for the CMDSBSYS                   *
//*                                                                  *
//********************************************************************
//DMASM   PROC MEMBER=,
//             ASMLIB='CBT249.FILE266',
//             LINKLIB='CBT.CMDSBSYS.LINKLIB',
//             LNCT=55
//ASM     EXEC PGM=IEUASM,PARM=(LOAD,NODECK,'LINECNT=&LNCT.')
//SYSLIB   DD  DISP=SHR,DSN=&ASMLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSPRINT DD  SYSOUT=*
//SYSGO    DD  UNIT=VIO,SPACE=(TRK,(90,50)),
//             DISP=(,PASS)
//SYSIN    DD  DSN=&ASMLIB.(&MEMBER.),DISP=SHR
//DMLINK  EXEC PGM=IEWL,
//             PARM='XREF,LET,LIST,AC=1,SIZE=(140K,6400)'
//SYSLIN   DD  DSN=*.ASM.SYSGO,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DISP=SHR,DSN=&LINKLIB.
//SYSLMOD  DD  DISP=SHR,DSN=&LINKLIB.(&MEMBER.)
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSPRINT DD  SYSOUT=*
//        PEND
//ASMPR   EXEC DMASM,MEMBER=CMDPRINT
//ASM00   EXEC DMASM,MEMBER=CMDDUMMY,
//             PARM.DMLINK='RENT,REUS,LET,LIST,SIZE=(140K,6400)'
//ASM01   EXEC DMASM,MEMBER=CMDSBCSC
//ASM02   EXEC DMASM,MEMBER=CMDSBINT
//ASM03   EXEC DMASM,MEMBER=CMDSBSYS,
//             PARM.DMLINK='RENT,REUS,LET,AC=1,LIST,SIZE=(140K,6400)'
//ASM04   EXEC DMASM,MEMBER=CMDTSO
//ASM05   EXEC DMASM,MEMBER=CMDSBTSO
//ASM05A  EXEC DMASM,MEMBER=CMDSBMON
//ASM06   EXEC DMASM,MEMBER=CSCSB03D
//ASM07   EXEC DMASM,MEMBER=CSCSA03D
//DMLINK.SYSIN DD *
 INCLUDE SYSLIB(CSCSB03D)
 ENTRY IEESA03D
/*
//ASM08   EXEC DMASM,MEMBER=CSCSC03D
//ASM09   EXEC DMASM,MEMBER=CSCSD03D
//ASM10   EXEC DMASM,MEMBER=CSCSE03D
//ASM11   EXEC DMASM,MEMBER=CSCSF03D
//ASM12   EXEC DMASM,MEMBER=CSCSG03D
//ASM13   EXEC DMASM,MEMBER=CSCSH03D
//ASM14   EXEC DMASM,MEMBER=CSCSI03D
//ASM15   EXEC DMASM,MEMBER=CSCSJ03D
//ASM16   EXEC DMASM,MEMBER=CSCSK03D
//ASM17   EXEC DMASM,MEMBER=CSCSL03D
//ASM17A  EXEC DMASM,MEMBER=CSCSZ03D
//ASM18   EXEC DMASM,MEMBER=CSCSM03D
//ASM19   EXEC DMASM,MEMBER=CSCSN03D
//ASM20   EXEC DMASM,MEMBER=CSCSO03D
//ASM21   EXEC DMASM,MEMBER=CSCSP03D
//ASM22   EXEC DMASM,MEMBER=CSCSQ03D
//ASM23   EXEC DMASM,MEMBER=CSCSR03D
//ASM24   EXEC DMASM,MEMBER=CSCSS03D
//ASM25   EXEC DMASM,MEMBER=CSCZB03D
//ASM26   EXEC DMASM,MEMBER=CSCZC03D
//ASM27   EXEC DMASM,MEMBER=CSCZJ03D
//ASM28   EXEC DMASM,MEMBER=CSCZP03D
//ASM29   EXEC DMASM,MEMBER=CSCZS03D
//ASM30   EXEC DMASM,MEMBER=CSCGA03D
//ASM31   EXEC DMASM,MEMBER=CSCGE03D
//ASM32   EXEC DMASM,MEMBER=CSCGF03D
//ASM33   EXEC DMASM,MEMBER=CSCGH03D
//ASM34   EXEC DMASM,MEMBER=CSCGJ03D
//ASM35   EXEC DMASM,MEMBER=CSCGO03D
//ASM36   EXEC DMASM,MEMBER=CSCGS03D
//ASM61   EXEC DMASM,MEMBER=CSCZA03D
//ASM62   EXEC DMASM,MEMBER=CSCGI03D
//ASM63   EXEC DMASM,MEMBER=CSCGU03D
./ ADD NAME=CMDSB5   8010-74002-74014-1642-00061-00533-00000-HERC01
//HERC01  JOB  (MVS),
//             'INSTALL # SUBSYS',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* NAME: SYS1.SETUP.CNTL(CMDSB5)                                    *
//*                                                                  *
//* TYPE: JCL to assemble some CMDSBSYS modules for use in non-SE    *
//*       systems only                                               *
//*                                                                  *
//********************************************************************
//DMASM   PROC MEMBER=,
//             LNCT=55,
//             LINKMEM=,
//             ASMLIB='CBT249.FILE266',
//             LINKLIB='CBT.CMDSBSYS.LINKLIB'
//ASM     EXEC PGM=IEUASM,PARM=(LOAD,NODECK,'LINECNT=&LNCT.')
//SYSLIB   DD  DISP=SHR,DSN=&ASMLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSPRINT DD  SYSOUT=*
//SYSGO    DD  UNIT=VIO,SPACE=(TRK,(90,50)),
//             DISP=(,PASS)
//SYSIN    DD  DSN=&ASMLIB.(&MEMBER.),DISP=SHR
//LKED    EXEC PGM=IEWL,
//             PARM='XREF,LET,LIST,AC=1,SIZE=(140K,6400)'
//SYSLIN   DD  DSN=*.ASM.SYSGO,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DISP=SHR,DSN=&LINKLIB.
//SYSLMOD  DD  DISP=SHR,DSN=&LINKLIB.(&LINKMEM)
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSPRINT DD  SYSOUT=*
//        PEND
//DMLINK  PROC LINKLIB='CBT.CMDSBSYS.LINKLIB'
//DMLINK  EXEC PGM=IEWL,
//             PARM='XREF,LET,LIST,RENT,REUS'
//SYSLIN   DD  DDNAME=SYSIN
//SYSLIB   DD  DISP=SHR,DSN=SYS1.LINKLIB
//SYSLMOD  DD  DISP=SHR,DSN=&LINKLIB
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSPRINT DD  SYSOUT=*
//        PEND
//LNK00   EXEC DMLINK
//DMLINK.SYSIN DD *
 INCLUDE SYSLIB(IEFBR14)
 NAME CSCGQ03D(R)
//ASM01   EXEC DMASM,MEMBER=NSESE03D,LINKMEM=CSCSE03D
//ASM02   EXEC DMASM,MEMBER=NSESJ03D,LINKMEM=CSCSJ03D
//ASM03   EXEC DMASM,MEMBER=NSESL03D,LINKMEM=CSCSL03D
//ASM04   EXEC DMASM,MEMBER=NSEZJ03D,LINKMEM=CSCZJ03D
//ASM05   EXEC DMASM,MEMBER=NSEZS03D,LINKMEM=CSCZS03D
//ASM06   EXEC DMASM,MEMBER=NSEGF03D,LINKMEM=CSCGF03D
//ASM07   EXEC DMASM,MEMBER=NSEGJ03D,LINKMEM=CSCGJ03D
//ASM08   EXEC DMASM,MEMBER=NSEGS03D,LINKMEM=CSCGS03D
./ ADD NAME=CMDSB6   8016-74002-74038-2154-00278-00533-00000-HERC01
//HERC01  JOB  (MVS),
//             'INSTALL # SUBSYS',
//             CLASS=A,
//*            RESTART=UPD1,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* NAME: SYS1.SETUP.CNTL(CMDSB6)                                    *
//*                                                                  *
//* DESC: This job prints the CMDSBSYS documentation and creates     *
//*       the needed procedures in SYS1.PROCLIB                      *
//*                                                                  *
//*       Finally, it adds one line to SYS1.PARMLIB(COMMND00)        *
//*         COM='S CMD1'                                             *
//*                                                                  *
//********************************************************************
//DMASM   PROC MEMBER=,
//             LNCT=55,
//             ASMLIB='CBT249.FILE266',
//             LINKLIB='CBT.CMDSBSYS.LINKLIB'
//ASM     EXEC PGM=IEUASM,PARM=(LOAD,NODECK,'LINECNT=&LNCT.')
//SYSLIB   DD  DISP=SHR,DSN=&ASMLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(TRK,(90,50))
//SYSPRINT DD  SYSOUT=*
//SYSGO    DD  UNIT=VIO,SPACE=(TRK,(90,50)),
//             DISP=(,PASS)
//SYSIN    DD  DSN=&ASMLIB.(&MEMBER.),DISP=SHR
//LKED    EXEC PGM=IEWL,
//             PARM='XREF,LET,LIST,AC=1,SIZE=(140K,6400)'
//SYSLIN   DD  DSN=*.ASM.SYSGO,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DISP=SHR,DSN=&LINKLIB.
//SYSLMOD  DD  DISP=SHR,DSN=&LINKLIB.(&MEMBER.)
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSPRINT DD  SYSOUT=*
//        PEND
//ASMPR   EXEC DMASM,MEMBER=CMDPRINT
//DOCCMD1 EXEC PGM=CMDPRINT,PARM='01072'
//STEPLIB  DD  DISP=SHR,DSN=CBT.CMDSBSYS.LINKLIB
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=A
#$#
                    VERSION
             $DOC         .COMMAND SUB-SYSTEM -   (ADDIT DOCUMENTATION)
             $HELP        .COMMAND SUB-SYSTEM -   (TSO HELP MEMBER)
             $HINTS       .COMMAND SUB-SYSTEM -   (ADDIT INSTALL HINTS)
             $JCL         .COMMAND SUB-SYSTEM -   (JCL TO RUN CMD1)
             $MODS        .COMMAND SUB-SYSTEM -   (MVSMODS IEBCOPY)
             CMDDOCTN     .COMMAND SUB-SYSTEM -   (DOCUMENTATION)
             CMDDUMMY     .COMMAND SUB-SYSTEM -   (CMDDUMMY MODULE)
             CMDINSTL     .COMMAND SUB-SYSTEM -   (INSTALLATION JCL)
             CMDPRINT     .COMMAND SUB-SYSTEM -   (DOCUMENTATION PRINT)
             CMDSBCSC     .COMMAND SUB-SYSTEM -   (CROSS-SYSTEM CNTRL)
             CMDSBINT     .COMMAND SUB-SYSTEM -   (INIT AND MONITOR)
             CMDSBMON     .COMMAND SUB-SYSTEM -   (STANDALONE MONITOR)
             CMDSBSYS     .COMMAND SUB-SYSTEM -   (PROCESSOR)
             CMDSBTSO     .COMMAND SUB-SYSTEM -   (TSO FULL SCREEN MON)
             CMDTSO       .COMMAND SUB-SYSTEM -   (TSO DIRECTOR)
             CSCGA03D     .COMMAND SUB-SYSTEM -   (A - ACTIVITY MON.)
             CSCGE03D     .COMMAND SUB-SYSTEM -   (E - EXCEPTION MON.)
             CSCGF03D     .COMMAND SUB-SYSTEM -   (F - FRAME USE GRAPH)
             CSCGH03D     .COMMAND SUB-SYSTEM -   (H - HELP FOR GRAPH)
             CSCGI03D     .COMMAND SUB-SYSTEM -   (I - JES2 INIT DISP)
             CSCGJ03D     .COMMAND SUB-SYSTEM -   (J - JOB CPU GRAPH)
             CSCGO03D     .COMMAND SUB-SYSTEM -   (O - I/O ACTIVITY)
             CSCGQ03D     .COMMAND SUB-SYSTEM -   (Q - QUE)
             CSCGS03D     .COMMAND SUB-SYSTEM -   (S - SYS. IND. GRAPH)
             CSCGU03D     .COMMAND SUB-SYSTEM -   (U -DASD SPACE DISPL)
CSCSA03D     IEESA03D     .COMMAND SUB-SYSTEM -   (#N -  D ENQ P1)
CSCSB03D     IEESB03D     .COMMAND SUB-SYSTEM -   (#N -  D ENQ P2)
CSCSC03D     IEESC03D     .COMMAND SUB-SYSTEM -   (#L -  D LINES)
CSCSD03D     IEESD03D     .COMMAND SUB-SYSTEM -   (#D -  COREZAP)
CSCSE03D     IEESE03D     .COMMAND SUB-SYSTEM -   (#A -  ASCB INFO)
CSCSF03D     IEESF03D     .COMMAND SUB-SYSTEM -   (#F -  D FRAMES)
CSCSG03D     IEESG03D     .COMMAND SUB-SYSTEM -   (#R -  D ALLOC)
CSCSH03D     IEESH03D     .COMMAND SUB-SYSTEM -   (#S -  D LPA)
CSCSI03D     IEESI03D     .COMMAND SUB-SYSTEM -   (#V -  D DEVICE)
CSCSJ03D     IEESJ03D     .COMMAND SUB-SYSTEM -   (#I -  D PAGES)
CSCSK03D     IEESK03D     .COMMAND SUB-SYSTEM -   (#C -  CALCULATOR)
CSCSL03D     IEESL03D     .COMMAND SUB-SYSTEM -   (#J -  D A)
CSCSZ03D     IEESZ03D     .COMMAND SUB-SYSTEM -   (#Z -  D A)
CSCSM03D     IEESM03D     .COMMAND SUB-SYSTEM -   (#H -  HELP)
CSCSN03D     IEESN03D     .COMMAND SUB-SYSTEM -   (#T -  D TIOT)
CSCSO03D     IEESO03D     .COMMAND SUB-SYSTEM -   (#M -  TSO SEND)
CSCSP0ED     IEESP03D     .COMMAND SUB-SYSTEM -   (#P -  D SU)
CSCSQ03D     IEESQ03D     .COMMAND SUB-SYSTEM -   (#Q -  ANALYZE ENQ)
CSCSR03D     IEESR03D     .COMMAND SUB-SYSTEM -   (#O -  I/O PENDING)
CSCSS03D     IEESS03D     .COMMAND SUB-SYSTEM -   (#E -  EXECUTE)
CSCZA03D     IEEZA03D     .COMMAND SUB-SYSTEM -   (##A -  ACTIVITY MON.)
CSCZB03D     IEEZB03D     .COMMAND SUB-SYSTEM -   (##B -  DEVICE MON.)
CSCZC03D     IEEZC03D     .COMMAND SUB-SYSTEM -   (##C -  CHANNEL MON.)
CSCZJ03D     IEEZJ03D     .COMMAND SUB-SYSTEM -   (##J -  JOB MON.)
CSCZP03D     IEEZP03D     .COMMAND SUB-SYSTEM -   (##P -  PAGING MON.)
CSCZS03D     IEEZS03D     .COMMAND SUB-SYSTEM -   (##S -  SYSIND MON.)
             NSEGF03D     .CMD SUB-SYS (NONSE) -  (F - FRAME USE GRAPH)
             NSEGJ03D     .CMD SUB-SYS (NONSE) -  (J - JOB CPU GRAPH)
             NSEGS03D     .CMD SUB-SYS (NONSE) -  (S - SYS. IND. GRAPH)
             NSESE03D     .CMD SUB-SYS (NONSE) -  (#A -  ASCB INFO)
             NSESJ03D     .CMD SUB-SYS (NONSE) -  (#I -  D PAGES)
             NSESL03D     .CMD SUB-SYS (NONSE) -  (#J -  D A)
             NSEZJ03D     .CMD SUB-SYS (NONSE) -  (##J -  JOB MON.)
             NSEZS03D     .CMD SUB-SYS (NONSE) -  (##S -  SYSIND MON.)
#$#
             MACROS VERSION  FOR CMDSBMON
             ALLOC    1.0 .MACRO NEEDED FOR CMDSBMON
             DYNSPACE 1.0 .MACRO NEEDED FOR CMDSBMON
             FREE     1.0 .MACRO NEEDED FOR CMDSBMON
             RCPBFRGS 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPBTU   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPBTU2  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPCKID  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDDN   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDDNRT 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDEBUG 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDFPL  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDINC  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDISP  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDS    1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDSECT 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDSN   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDSNPD 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDSNRT 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDSRGR 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPDUMMY 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPENDD  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFDDN  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFDISP 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFDSN  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFHOLD 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFORUS 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPFREE  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPIOPL  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPLINK  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPLOAD  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPLOCSW 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPLOCS1 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPLOCS2 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPMCA   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPNTU   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPPERM  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPPPL   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPPROC  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPPSWD  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPQNAME 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPRNGE  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSPACE 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSPEC  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSR2   1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSSREQ 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSUBL  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPSYSOU 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPTU    1.0 .MACRO NEEDED FOR CMDSBMON
             RCPTUBFR 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPTXTL  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPTYPE  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPUNALC 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPUNIT  1.0 .MACRO NEEDED FOR CMDSBMON
             RCPVCHAR 1.0 .MACRO NEEDED FOR CMDSBMON
             RCPVOLRT 1.0 .MACRO NEEDED FOR CMDSBMON
             S99FAIL  1.0 .MACRO NEEDED FOR CMDSBMON
#$#
                   VERSION
             CSCGQQ00 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - QUEUECMN)
             CSCGQQ01 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - QUEUE)
             CSCGQQ02 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - ALLOCATE)
             CSCGQQ03 1.1 .CMD SUB-SYSTEM -       (Q - QCMD - CKPT)
             CSCGQQ04 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - DDNAME)
             CSCGQQ05 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - DISPLAY)
             CSCGQQ05 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - DISPLAY)
             CSCGQQ06 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - FINDJOB)
             CSCGQQ07 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - FORMAT)
             CSCGQQ08 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - HELP)
             CSCGQQ09 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - HEXBLK)
             CSCGQQ10 1.1 .CMD SUB-SYSTEM -       (Q - QCMD - INIT)
             CSCGQQ11 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - JCL)
             CSCGQQ12 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - JLOG)
             CSCGQQ13 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - JMSG)
             CSCGQQ14 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - LIST)
             CSCGQQ15 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - LISTDS)
             CSCGQQ16 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - PARSE)
             CSCGQQ17 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - READSPC)
             CSCGQQ18 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - REPOS)
             CSCGQQ19 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - SAVE)
             CSCGQQ20 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - SEARCH)
             CSCGQQ21 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - SYSLOG)
             CSCGQQ22 1.0 .CMD SUB-SYSTEM -       (Q - QCMD - XDS)
#$#
                   VERSION
             MACROS VERSION  FOR THE QUE COMMAND
             $JQT     1.0 .MACRO NEEDED FOR QUEUE
             QCLNK    1.0 .MACRO NEEDED FOR QUEUE
             QCOMMON  1.1 .MACRO NEEDED FOR QUEUE
             QSTART   1.1 .MACRO NEEDED FOR QUEUE
             QSTOP    1.0 .MACRO NEEDED FOR QUEUE
             QTILT    1.0 .MACRO NEEDED FOR QUEUE
/*
//DOCCMD2 EXEC PGM=CMDPRINT,PARM='01072'
//STEPLIB  DD  DISP=SHR,DSN=CBT.CMDSBSYS.LINKLIB
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=CBT249.FILE266(CMDDOCTN)
//UPD1    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SYS2.PROCLIB,DISP=SHR
//SYSIN  DD  DATA
>< ADD NAME=CMD1
//CMD1   PROC  A=ASE0,
//             B='$',
//             C=CSK0,
//             D=DSD0,
//             E=ESS0,
//             F=FSF0,
//             G='$',
//             H=HSM0,
//             I=ISJ0,
//             J=JSL0,
//             K='$',
//             L=LSC0,
//             M=MSO0,
//             N=NSA0,
//             O=OSR0,
//             P=PSP0,
//             Q=QSQ0,
//             R=RSG0,
//             S=SSH0,
//             T=TSN0,
//             U='$',
//             V=VSI0,
//             W='$',
//             X='$',
//             Y='$',
//             Z=ZSZ0
//CMD1  EXEC PGM=CMDSBINT,TIME=1440,DPRTY=(15,10),
// PARM='&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z'
//SYSUDUMP  DD  SYSOUT=A
//*CSC#ASYS  DD  DUMMY
//*CSC#BSYS  DD  DUMMY
//*CSC#CSYS  DD  DUMMY
//*CSCDATA   DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR
//*
//*      WHERE  -    FOR CSC#.... REPLACE .... WITH SMF SYSID OF ONE
//*                  OF THE SYSTEMS USING CROSS-SYSTEM COMMANDS.
//*                  AS MANY CSC#.... DD CARDS AS NECESSARY MAY EXIST.
//*
>< ADD NAME=CMDSBMON                          CHANGE THIS CARD TO ./
//CMDSBMON  PROC  U=0C3
//CMDSBMON  EXEC  PGM=CMDSBMON,PARM='&U.',REGION=8000K
//SYSUDUMP  DD    SYSOUT=Z
//CMDLOG    DD    SYSOUT=Z
//CSCDATA  DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR
//*   WHERE  XXX  IS THE 3270 UNIT ADDRESS
/*
//GENER1  EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=SYS1.PARMLIB(COMMND00)
//SYSUT2   DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1)),
//             DCB=(SYS1.PARMLIB,DSORG=PS)
//GENER2  EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
COM='S CMD1'
//SYSUT2   DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1)),
//             DCB=(SYS1.PARMLIB,DSORG=PS)
//GENER3  EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=(OLD,DELETE,DELETE),DSN=*.GENER1.SYSUT2
//         DD  DISP=(OLD,DELETE,DELETE),DSN=*.GENER2.SYSUT2
//SYSUT2   DD  DISP=SHR,DSN=SYS1.PARMLIB(JES2PARM)
./ ADD NAME=CMDSB7   8008-74002-74014-1642-00111-00150-00000-HERC01
//HERC01  JOB  (MVS),
//             'INSTALL # SUBSYS',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//* NAME: SYS1.SETUP.CNTL(CMDSB6)                                    *
//*                                                                  *
//* TYPE: JCL TO INSTALL THE # COMMAND SUBSYSTEM                     *
//*                                                                  *
//* DESC: THIS JOB COPIES THE REQUIRED MODULES INTO THE TARGET LIBS  *
//*                                                                  *
//********************************************************************
//DMCOPY  PROC LINKLIB='CBT.CMDSBSYS.LINKLIB',
//             TARGLIB=
//DMCOPY  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&LINKLIB.
//SYSUT2   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSUT4   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//DMCOMP  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT2   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSUT4   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSIN    DD  DUMMY
//        PEND
//COPY1   EXEC DMCOPY,TARGLIB='SYS2.LINKLIB'
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDPRINT,,R))
 S M=((CMDSBCSC,,R))
 S M=((CMDSBINT,,R))
 S M=((CMDSBSYS,,R))
 S M=((CMDSBMON,,R))
 S M=((CSCSA03D,,R))
 S M=((CSCSC03D,,R))
 S M=((CSCSD03D,,R))
 S M=((CSCSE03D,,R))
 S M=((CSCSF03D,,R))
 S M=((CSCSG03D,,R))
 S M=((CSCSH03D,,R))
 S M=((CSCSI03D,,R))
 S M=((CSCSJ03D,,R))
 S M=((CSCSK03D,,R))
 S M=((CSCSL03D,,R))
 S M=((CSCSM03D,,R))
 S M=((CSCSN03D,,R))
 S M=((CSCSO03D,,R))
 S M=((CSCSP03D,,R))
 S M=((CSCSQ03D,,R))
 S M=((CSCSR03D,,R))
 S M=((CSCSS03D,,R))
 S M=((CSCSZ03D,,R))
 S M=((CSCZA03D,,R))
 S M=((CSCZB03D,,R))
 S M=((CSCZC03D,,R))
 S M=((CSCZJ03D,,R))
 S M=((CSCZP03D,,R))
 S M=((CSCZS03D,,R))
/*
//COPY2 EXEC DMCOPY,TARGLIB='SYS1.LPALIB'
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDDUMMY,,R))
 S M=((CSCSA03D,IEESA03D,R))
 S M=((CSCSC03D,IEESC03D,R))
 S M=((CSCSD03D,IEESD03D,R))
 S M=((CSCSE03D,IEESE03D,R))
 S M=((CSCSF03D,IEESF03D,R))
 S M=((CSCSG03D,IEESG03D,R))
 S M=((CSCSH03D,IEESH03D,R))
 S M=((CSCSI03D,IEESI03D,R))
 S M=((CSCSJ03D,IEESJ03D,R))
 S M=((CSCSK03D,IEESK03D,R))
 S M=((CSCSL03D,IEESL03D,R))
 S M=((CSCSM03D,IEESM03D,R))
 S M=((CSCSN03D,IEESN03D,R))
 S M=((CSCSO03D,IEESO03D,R))
 S M=((CSCSP03D,IEESP03D,R))
 S M=((CSCSQ03D,IEESQ03D,R))
 S M=((CSCSR03D,IEESR03D,R))
 S M=((CSCSS03D,IEESS03D,R))
 S M=((CSCSZ03D,IEESZ03D,R))
 S M=((CSCZA03D,IEEZA03D,R))
 S M=((CSCZB03D,IEEZB03D,R))
 S M=((CSCZC03D,IEEZC03D,R))
 S M=((CSCZJ03D,IEEZJ03D,R))
 S M=((CSCZP03D,IEEZP03D,R))
 S M=((CSCZS03D,IEEZS03D,R))
/*
//COPY3 EXEC DMCOPY,TARGLIB='SYS2.CMDLIB' FULL SCREEN FOR TSO AND OPER
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDTSO,,R))
 S M=((CMDSBTSO,,R))
 S M=((CSCGA03D,,R))        ACTIVITY MONITOR
 S M=((CSCGE03D,,R))        EXCEPTION MONITOR
 S M=((CSCGF03D,,R))        JOB FRAME MONITOR
 S M=((CSCGH03D,,R))        HELP FOR GRAPH MONITORS
 S M=((CSCGI03D,,R))        JES2 INIT DISPLAY
 S M=((CSCGJ03D,,R))        JOB CPU MONITOR
 S M=((CSCGO03D,,R))        I/O ACTIVITY MONITOR
 S M=((CSCGQ03D,,R))        QUE COMMAND
 S M=((CSCGS03D,,R))        SYSTEM IND. GRAPH
 S M=((CSCGU03D,,R))        DASD FREE SPACE
/*
./ ADD NAME=CMDSB8   8001-74014-74014-2136-00039-00039-00000-HERC01
//HERC01   JOB (CBT),
//             'Install ZUM0001',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(0,0),
//             REGION=8192K,
//             NOTIFY=HERC01
//* +----------------------------------------------------------------+
//* |                                                                |
//* | Name: CBT.MVS38J.CNTL(CMDSB8)                                  |
//* |                                                                |
//* | Type: JCL to install usermod ZUM0001                           |
//* |                                                                |
//* | Desc: Build the table of authorized commands in TSO            |
//* |       The usermod/table source is in SYS1.UMODSRC(IKJEFTE2)    |
//* |                                                                |
//* +----------------------------------------------------------------+
/*MESSAGE *****************************
/*MESSAGE *                           *
/*MESSAGE * To activate this usermod  *
/*MESSAGE * an IPL with the CLPA      *
/*MESSAGE * option is required        *
/*MESSAGE *                           *
/*MESSAGE *****************************
//ASM     EXEC SMPASML,M=IKJEFTE2
//REJECT  EXEC SMPREC
//SMPCNTL  DD  *
 REJECT SELECT(ZUM0001).
//RECEIVE EXEC SMPREC
//SMPPTFIN DD  *
++ USERMOD(ZUM0001).
++ VER(Z038) FMID(EBB1102).
++ MOD(IKJEFTE2) DISTLIB(AOST4) LKLIB(UMODLIB).
//SMPCNTL  DD  *
 RECEIVE SELECT(ZUM0001).
//APPLY   EXEC SMPAPP,COND=(0,NE,RECEIVE.HMASMP)
//SMPCNTL  DD  *
 APPLY SELECT(ZUM0001) DIS(WRITE).
/*
./ ADD NAME=CVXIT$   8003-74038-74038-1033-00076-00220-00000-HERC01
//HERC01   JOB (CBT),
//             'Install WTO Exit',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(0,0),
//             REGION=8192K,
//             NOTIFY=HERC01
//* +----------------------------------------------------------------+
//* |                                                                |
//* | Name: CBT.MVS38J.CNTL(CVXIT$)                                  |
//* |                                                                |
//* | Type: JCL to install usermod ZUM0003                           |
//* |                                                                |
//* | Desc: Build the automatic operator made from the WTO           |
//* |       exit IEECVXIT and the R2D2 routine                       |
//* |                                                                |
//* |       The code in IEECVXIT will only be active when and if     |
//* |       the module BSPPILOT is running in a started task or a job|
//* |       with the name BSPPILOT.                                  |
//* |                                                                |
//* |       A Procedure called BSPPILOT will be automatically placed |
//* |       into SYS1.PROCLIB.  This usermod will also create a      |
//* |       member COMMND01 in SYS1.PARMLIB.  You should copy        |
//* |       this member to the beginning of your existing COMMND00   |
//* |       member. If you do not already have a COMMND00 member     |
//* |       then just rename COMMND01 to COMMND00                    |
//* |                                                                |
//* |                                                                |
//* +----------------------------------------------------------------+
/*MESSAGE *****************************
/*MESSAGE *                           *
/*MESSAGE * To activate this usermod  *
/*MESSAGE * an IPL with the CLPA      *
/*MESSAGE * option is required        *
/*MESSAGE *                           *
/*MESSAGE *****************************
//*
//*
//ASM     EXEC PGM=IFOX00,
//             PARM='DECK,NOOBJECT,NOXREF,TERM,SYSPARM(BSPPILOT)'
//*********************************************************************
//* You might need to change the following two DD statements to reflect
//* The correct dataset names for MACLIB and SYSIN
//*********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(IEECVXIT)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=SHR,DSN=SYS1.UMODOBJ(IEECVXIT)
//SMPREJ  EXEC SMPREC,COND=(0,NE)
//SMPCNTL  DD  *
 REJECT S(ZUM0003).
//SMPREC  EXEC SMPREC,COND=(0,NE,ASM)
//SMPPTFIN DD DATA,DLM=$$
++USERMOD(ZUM0003).
++VER(Z038) FMID(EBB1102).
++MOD(IEECVXIT) TXLIB(UMODOBJ).
++MAC(COMMND01) DISTLIB(APARMLIB) SYSLIB(PARMLIB).
COM='S BSPPILOT,PARM=NOWTO'
++MAC(BSPPILOT) DISTLIB(APROCLIB) SYSLIB(PROCLIB).
//IEFPROC EXEC PGM=BSPPILOT            <<<< added by ZUM0003/Autopilot
//SYSUDUMP DD  SYSOUT=A
$$
//SMPCNTL DD *
 RECEIVE SELECT(ZUM0003).
//SMPAPP  EXEC SMPAPP,
//       COND=((0,NE,ASM),
//             (0,NE,SMPREC.HMASMP))
//SMPCNTL DD  *
 APPLY G(ZUM0003) DIS(WRITE).
./ ADD NAME=CVXIT@   8001-74038-74038-0951-00047-00096-00000-HERC01
---------------- BSPPILOT - The MVS Auto Pilot ------------------------
*
The idea to the MVS auto pilot was taken from CBT tape 249, file 33.
Unfortunately, I couldn't get it to assemble correctly for MVS 3.8.
*
After a little bit of poking around in the source and doing a few
changes here and there I could get it to compile, but it didn't
work reliably.  That's when I decided to rewrite the whole thing
and, while being at it, add a few functions as well
*
Rewrite might be too strong a word, though.  Large portions of the
R2D2 part in IEECVXIT were taken unchanged from the CBT tape
*
What do we have now:
   * IEECVXIT - The WTO exit to automatically react to WTOs.  This
                function is table driven, and currently the following
                messages are recognized (and are being processed on)
                  IST020I        S TSO          s TSO
                  IEE362A        S DUMPSMF      dump full SYS1.MANx
                  IEEXXXA        S DUMPEREP     dump full SYS1.LOGREC
                  IEA994A        S DUMPDUMP     dump full dump datasets
                  $HASP190       $SPRTx         setup printer
                  BSPSD999       S BSPSHUTD     Initiate shutdown
                The routing and descriptor codes of the following
                messages are altered such that they are now
                roll-deletetable
                   IEA911E        full dump on XXXX for asid N
                   IEA994E        partial dump.....
                   IEA994A        all dump datasets are full
                   IGF995I        I/O Restart scheduled
                   IGF991E        IGF msg for mount, swap etc
                The following messages are suppressed altogether
                   BSPTEST1       used for playtesting Autopilot
                   $HASP000       JEs OK msg
   * R2D2     - An SRB routine that runs in the BSPPILOT address
                space and replies to the following WTORs
                 IEF238D  - Device name, Wait, or Cancel      WAIT
                 IEF433D  - Hold or Nohold                    NOHOLD
                 IEF434D  - invalid reply, Hold or Nohold     NOHOLD
                 IKT010D  - SIC or FSTOP                      SIC
                 IKT012D  - Reply U                           U
                 IEC301A  - Master catalog password           U
                 IEC804A  -                                   POST
                 IFA006A  - Dump request for active MANx      CANCEL
                 BSPTEST0 - Autopilot test message            U
   * BSPPILOT - (Or should this be called C3PO).  For info see PILOT@
   * BSPRUNSC - For info see RUNSC@
./ ADD NAME=DELAY$   8001-74082-74082-1711-00040-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build DELAY',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(DELAY$)                                   *
//*                                                                  *
//*  Type: Assembly of DELAY Module                                  *
//*                                                                  *
//*  Desc: Delays for specified amount of time                       *
//*                                                                  *
//*  Note:  BRODSCAN source has been sent to me by somitcw@yahoo.com *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(DELAY)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(DELAY)   <<=== CHANGE
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=DELAY#   8001-74082-74082-1709-00014-00005-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Install DELAY',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(DELAY#)
//*
//* Desc:Run the DELAY program
//*
//********************************************************************
//DELAY11 EXEC PGM=DELAY,PARM=11   Delay 11 seconds
./ ADD NAME=DISKM$   8018-74004-74038-1147-00074-00016-00000-HERC01
//HERC01   JOB (CBT),
//             'Build DISKMAPx',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(DISKM$)                                   *
//*                                                                  *
//*  Type: Assembly of DISKMAPx modules                              *
//*                                                                  *
//*  Note: This job requires that the following files are available: *
//*                                                                  *
//*        CBT129.FILE260 - File 260 from CBT tape 129               *
//*        CBT249.FILE017 - File  17 from CBT tape 249               *
//*                                                                  *
//*  See CBT.MVS38J.CNTL(CBT090) on how to drop a file from          *
//*  CBT tape to DASD                                                *
//*                                                                  *
//********************************************************************
//CBTASM  PROC CBT='CBT249.FILE017',MEMBER=DISKMAP
//ASM     EXEC PGM=IFOX00,REGION=1024K,
//             PARM='NOXREF,NOLIST,TERM,DECK,NOOBJECT'
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSLIB   DD  DISP=SHR,DSN=&CBT,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=&CBT(&MEMBER)
//        PEND
//CBTASML PROC CBT='CBT249.FILE017',MEMBER=DISKMAP,
//             SYSLMOD='SYS2.LINKLIB'
//ASM     EXEC PGM=IFOX00,REGION=1024K,
//             PARM='NOXREF,NOLIST,TERM,DECK,NOOBJECT'
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSLIB   DD  DISP=SHR,DSN=&CBT,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB
//         DD  DISP=SHR,DSN=CBT.MVS38J.ASM
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=&CBT(&MEMBER)
//LINK    EXEC PGM=IEWL,PARM='XREF,LIST,MAP',COND=(0,NE,ASM)
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DISP=SHR,DSN=&SYSLMOD(&MEMBER)
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//         DD  DDNAME=SYSIN
//        PEND
//DISKMAP EXEC CBTASML,MEMBER=DISKMAP,
//             PARM.LINK='MAP,XREF,LIST,AC=1',
//             SYSLMOD='SYS2.LINKLIB'        <<==== CHANGE?|
//ASM.SYSIN DD DISP=SHR,DSN=CBT129.FILE260
//DYNAM   EXEC CBTASM,MEMBER=DYNAM
//DISKMPA EXEC CBTASML,MEMBER=DISKMAPA,
//             SYSLMOD='SYS2.LINKLIB'        <<==== CHANGE?|
//LINK.SYSLIN  DD DISP=(OLD,DELETE,DELETE),
//             DSN=*.DISKMPA.ASM.SYSPUNCH
//         DD  DISP=(OLD,DELETE,DELETE),DSN=*.DYNAM.ASM.SYSPUNCH
//         DD  *
 SETCODE AC(1)
 NAME DISKMAPA(R)
//SYSPRINT DD  SYSOUT=*
./ ADD NAME=DISKM#   8004-74004-74037-2050-00020-00015-00000-HERC01
//HERC01  JOB  (MVS),
//             'RUN DISKMAP',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(DISKM#)
//*
//* Desc: Run the DISKMAP programs
//*
//********************************************************************
//*   This step will only map the volume MVSRES
//DISKMAP EXEC PGM=DISKMAP,PARM=(MAP,EXT)
//SYSPRINT DD SYSOUT=*
//MVSRES   DD DISP=OLD,UNIT=3350,VOL=SER=MVSRES
//*   This step will map all online volumes
//DISKMPA EXEC PGM=DISKMAPA,PARM=(MAP)
//SYSPRINT DD SYSOUT=*
./ ADD NAME=DISKM@   8002-74014-74014-1921-00026-00026-00000-HERC01
                   DISKMAP & DISKMAPA
                   ==================

DISKMAP comes from CBT Tape 129 file 260 and maps the layout of a
single disk pack.  This pack needs to be allocated to the job step

The function to be performed is specified via a JCL parameter.
The supported parameters are

    MAP.....produce a track map of volume
    PDS.....list all PDS directories on volume
    ISAM....list ISAM reorg info for datasets
    EXT.....list the extents of the datasets
    DUMP....list (hex) all DSCB's on volume
    EMPTY...list only datasets that are empty
    MODEL...will only list "model dscb's"
    SDUMP...list (hex) format 4 and 5 dscb's
    VOLS....only use ddnames of "volume--",
            format--"vols=x", where "x" is max #
    JDATE...list create/expire date in julian

DISKMAPA is a wrapper program that allocates all online
DASD units to the jobstep and then invokes the DISKMAP
utility to map ALL online DASD units

For a sample job see CBT.MVS3J.CNTL(DISKM#)
./ ADD NAME=EZINST$  8016-74038-74082-2124-00385-00068-00000-HERC01
//HERC01   JOB (SMP),
//             'EZINST Install',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(2,0),
//             REGION=8192K,
//             NOTIFY=HERC01
//* +----------------------------------------------------------------+
//* |                                                                |
//* | Name: CBT.MVS38J.CNTL(EZINST$)                                 |
//* |                                                                |
//* | Type: JCL to install MVS3.8J addons                            |
//* |                                                                |
//* +----------------------------------------------------------------+
//DMCOPY  PROC LINKLIB='CBT.CMDSBSYS.LINKLIB',
//             TARGLIB=
//DMCOPY  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&LINKLIB.
//SYSUT2   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSUT4   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//DMCOMP  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT2   DD  DISP=SHR,DSN=&TARGLIB.
//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSUT4   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSIN    DD  DUMMY
//        PEND
//COPY1   EXEC DMCOPY,LINKLIB='CBT.MVS38J.LOAD',TARGLIB='SYS2.LINKLIB'
 C I=SYSUT1,O=SYSUT2
//COPY2   EXEC DMCOPY,TARGLIB='SYS2.LINKLIB'
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDPRINT,,R))
 S M=((CMDSBCSC,,R))
 S M=((CMDSBINT,,R))
 S M=((CMDSBSYS,,R))
 S M=((CMDSBMON,,R))
 S M=((CSCSA03D,,R))
 S M=((CSCSC03D,,R))
 S M=((CSCSD03D,,R))
 S M=((CSCSE03D,,R))
 S M=((CSCSF03D,,R))
 S M=((CSCSG03D,,R))
 S M=((CSCSH03D,,R))
 S M=((CSCSI03D,,R))
 S M=((CSCSJ03D,,R))
 S M=((CSCSK03D,,R))
 S M=((CSCSL03D,,R))
 S M=((CSCSM03D,,R))
 S M=((CSCSN03D,,R))
 S M=((CSCSO03D,,R))
 S M=((CSCSP03D,,R))
 S M=((CSCSQ03D,,R))
 S M=((CSCSR03D,,R))
 S M=((CSCSS03D,,R))
 S M=((CSCSZ03D,,R))
 S M=((CSCZA03D,,R))
 S M=((CSCZB03D,,R))
 S M=((CSCZC03D,,R))
 S M=((CSCZJ03D,,R))
 S M=((CSCZP03D,,R))
 S M=((CSCZS03D,,R))
/*
//COPY3   EXEC DMCOPY,TARGLIB='SYS1.LPALIB'
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDDUMMY,,R))
 S M=((CSCSA03D,IEESA03D,R))
 S M=((CSCSC03D,IEESC03D,R))
 S M=((CSCSD03D,IEESD03D,R))
 S M=((CSCSE03D,IEESE03D,R))
 S M=((CSCSF03D,IEESF03D,R))
 S M=((CSCSG03D,IEESG03D,R))
 S M=((CSCSH03D,IEESH03D,R))
 S M=((CSCSI03D,IEESI03D,R))
 S M=((CSCSJ03D,IEESJ03D,R))
 S M=((CSCSK03D,IEESK03D,R))
 S M=((CSCSL03D,IEESL03D,R))
 S M=((CSCSM03D,IEESM03D,R))
 S M=((CSCSN03D,IEESN03D,R))
 S M=((CSCSO03D,IEESO03D,R))
 S M=((CSCSP03D,IEESP03D,R))
 S M=((CSCSQ03D,IEESQ03D,R))
 S M=((CSCSR03D,IEESR03D,R))
 S M=((CSCSS03D,IEESS03D,R))
 S M=((CSCSZ03D,IEESZ03D,R))
 S M=((CSCZA03D,IEEZA03D,R))
 S M=((CSCZB03D,IEEZB03D,R))
 S M=((CSCZC03D,IEEZC03D,R))
 S M=((CSCZJ03D,IEEZJ03D,R))
 S M=((CSCZP03D,IEEZP03D,R))
 S M=((CSCZS03D,IEEZS03D,R))
/*
//COPY4 EXEC DMCOPY,TARGLIB='SYS2.CMDLIB' FULL SCREEN FOR TSO AND OPER
//SYSIN  DD  *
 C I=SYSUT1,O=SYSUT2
 S M=((CMDTSO,,R))
 S M=((CMDSBTSO,,R))
 S M=((CSCGA03D,,R))        ACTIVITY MONITOR
 S M=((CSCGE03D,,R))        EXCEPTION MONITOR
 S M=((CSCGF03D,,R))        JOB FRAME MONITOR
 S M=((CSCGH03D,,R))        HELP FOR GRAPH MONITORS
 S M=((CSCGI03D,,R))        JES2 INIT DISPLAY
 S M=((CSCGJ03D,,R))        JOB CPU MONITOR
 S M=((CSCGO03D,,R))        I/O ACTIVITY MONITOR
 S M=((CSCGQ03D,,R))        QUE COMMAND
 S M=((CSCGS03D,,R))        SYSTEM IND. GRAPH
 S M=((CSCGU03D,,R))        DASD FREE SPACE
/*
//ASM     EXEC SMPASML,M=IKJEFTE2
//ASM     EXEC PGM=IFOX00,
//             PARM='DECK,NOOBJECT,NOXREF,TERM,SYSPARM(BSPPILOT)'
//*********************************************************************
//* You might need to change the following two DD statements to reflect
//* The correct dataset names for MACLIB and SYSIN
//*********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(IEECVXIT)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=SHR,DSN=SYS1.UMODOBJ(IEECVXIT)
//REJECT  EXEC SMPACC
//SMPCNTL DD *
 RESTORE G(ZUM0004).
 RESETRC.
 REJECT  S(ZUM0001,ZUM0003,ZUM0004).
//RECEIVE EXEC SMPREC
//SMPPTFIN DD DATA,DLM=$$
++USERMOD(ZUM0003).
++VER(Z038) FMID(EBB1102).
++MOD(IEECVXIT) TXLIB(UMODOBJ).
++MAC(COMMND01) DISTLIB(APARMLIB) SYSLIB(PARMLIB).
COM='S BSPPILOT,PARM=NOWTO'
++MAC(BSPPILOT) DISTLIB(APROCLIB) SYSLIB(PROCLIB).
//IEFPROC EXEC PGM=BSPPILOT               < added by ZUM0003/Autopilot
++ USERMOD(ZUM0001).
++ VER(Z038) FMID(EBB1102).
++ MOD(IKJEFTE2) DISTLIB(AOST4) LKLIB(UMODLIB).
++USERMOD (ZUM0004) .
++VER (Z038) FMID(EBB1102)
  /*
   Add entry to subsystem name table
  */ .
++ ZAP (IEFJESNM) .
 NAME IEFJESNM
 VER 0008 00000000   from X'00000000' empty slot
 REP 0008 C3D4C4F1     to C'CMD1'     added subsystem name
 IDRDATA ZUM0004
$$
//SMPCNTL DD *
 RECEIVE.
//APPLY EXEC SMPAPP,COND=(0,NE,RECEIVE.HMASMP)
//SMPCNTL DD *
 APPLY S(ZUM0001,ZUM0003,ZUM0004)
       DIS(WRITE)
       .
//UPDATE  EXEC PGM=IEBUPDTE,
//             PARM=NEW
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DISP=SHR,DSN=SYS1.PARMLIB
//SYSIN    DD  *
>< ADD NAME=IEAFIXIT
SYS1.LPALIB CMDDUMMY
>< ADD NAME=SHUTDOWN
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SHUTDOWN)                                        *
*                                                                     *
* Desc: Sample Shutdown member                                        *
*                                                                     *
***********************************************************************
PARM EXEC
PARM ECHO
COM SE 'Please logoff, the system will terminate in 5 minutes'
WAIT 180
COM SE 'You better finish now, the system will shutdown in 2 minutes'
WAIT 60
COM SE 'We mean it.  The system will terminate in 1 minute||'
WAIT 60
COM P TSO
WAIT 30
COM z net,quick
COM P MF1
COM P CMD1
COM $P PRT1
COM $P PRT2
COM $P PRT3
COM $P PUNCH1
COM $P RDR1
COM $P
>< ADD NAME=SHUTFAST
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SHUTFAST)                                        *
*                                                                     *
* Desc: Sample Shutdown member                                        *
*                                                                     *
***********************************************************************
PARM NOREPLYU
PARM NOECHO
MSG Sending first warning message
COM SE ',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'
COM SE '; Please logoff, the system will terminate in 2 minutes ;'
COM SE '"""""""""""""""""""""""""""""""""""""""""""""""""""""""""'
WAIT 60
MSG Sending second warning message
COM SE '***************************************************************'
COM SE '* You better finish now, the system will shutdown in 1 minute *'
COM SE '***************************************************************'
WAIT 60
MSG Shutdown beginning
COM P TSO
WAIT 10
COM z net,quick
COM P MF1
COM P CMD1
COM I SMF
COM $P PRT1
COM $P PRT2
COM $P PRT3
COM $P PUNCH1
COM $P RDR1
WAIT 5
COM $P
>< ADD NAME=SCRIPT00
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT00)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
IF MF1
   CONTINUE
ELSE
   COM S MF1
ENDIF
PARM NOECHO
WAIT 5
IF MF1
   CONTINUE
ELSE
   MSG MF/1 could not be started, check system log for errors
ENDIF
>< ADD NAME=SCRIPT01
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT01)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
IF MF1
   CMD P MF1
ENDIF
WAIT 5
CMD I SMF
WAIT 60
CMD I SMF
>< ADD NAME=SCRIPT02
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT02)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
CMD S CLEARDMP,DD=00
WAIT 5
CMD S CLEARDMP,DD=01
WAIT 5
CMD S CLEARDMP,DD=02
WAIT 5
>< ADD NAME=SETPFK01
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SETPFK01)                                        *
*                                                                     *
* Desc: Set console function keys on request                          *
*                                                                     *
***********************************************************************
01N K E,1
02N K E,D
03Y D U,,,_140,32
04Y F BSPPILOT,RUN=_
05Y V _xxx,offline;s dealloc
06Y M _xxx,vol=(SL,vvvvvv),use=uuuuuuuu;v _xxx,online
07Y V NET,INACT,ID=CUU0C_0,I;V NET,ACT,ID=CUU0C_0
08N K D,F
09N D TS,L
10N D A,L
11N K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,10
12N K A,NONE
>< ADD NAME=SETPFK02
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SETPFK02)                                        *
*                                                                     *
* Desc: Set console function keys on request                          *
*                                                                     *
***********************************************************************
01N K E,1
02N K E,D
03N $DJ1-999,l=A
04Y $LJ_xxx,HOLD,L=A
05Y $T_PRT1,Q=AX
06Y M _xxx,vol=(SL,vvvvvv),use=uuuuuuuu;v _xxx,online
07Y V NET,INACT,ID=CUU0C_0,I;V NET,ACT,ID=CUU0C_0
08N K D,F
09N D TS,L
10N D A,L
11N K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,10
12N K A,NONE
>< ADD NAME=COMMND01
COM='S CMD1'
COM='S BSPSETPF,PARM=NOREPLYU'
COM='S BSPPILOT,PARM=NOWTO'
//UPD2    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SYS1.PROCLIB,DISP=SHR
//SYSIN  DD  DATA,DLM=XX
>< ADD NAME=BSPSETPF
//IEFPROC EXEC PGM=BSPSETPF,PARM=NOREPLYU
>< ADD NAME=CMD1
//CMD1   PROC  A=ASE0,
//             B='$',
//             C=CSK0,
//             D=DSD0,
//             E=ESS0,
//             F=FSF0,
//             G='$',
//             H=HSM0,
//             I=ISJ0,
//             J=JSL0,
//             K='$',
//             L=LSC0,
//             M=MSO0,
//             N=NSA0,
//             O=OSR0,
//             P=PSP0,
//             Q=QSQ0,
//             R=RSG0,
//             S=SSH0,
//             T=TSN0,
//             U='$',
//             V=VSI0,
//             W='$',
//             X='$',
//             Y='$',
//             Z=ZSZ0
//CMD1  EXEC PGM=CMDSBINT,TIME=1440,DPRTY=(15,10),
// PARM='&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z'
//SYSUDUMP  DD  SYSOUT=A
//*CSC#ASYS  DD  DUMMY
//*CSC#BSYS  DD  DUMMY
//*CSC#CSYS  DD  DUMMY
//*CSCDATA   DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR
//*
//*      WHERE  -    FOR CSC#.... REPLACE .... WITH SMF SYSID OF ONE
//*                  OF THE SYSTEMS USING CROSS-SYSTEM COMMANDS.
//*                  AS MANY CSC#.... DD CARDS AS NECESSARY MAY EXIST.
//*
>< ADD NAME=CMDSBMON                          CHANGE THIS CARD TO ./
//CMDSBMON  PROC  U=0C3
//CMDSBMON  EXEC  PGM=CMDSBMON,PARM='&U.',REGION=8000K
//SYSUDUMP  DD    SYSOUT=Z
//CMDLOG    DD    SYSOUT=Z
//CSCDATA  DD  DSN=SYS1.SYSTEM.CMDSBSYS.CSCDATA,DISP=SHR
//*   WHERE  XXX  IS THE 3270 UNIT ADDRESS
XX
./ ADD NAME=FCOOK$   8026-74013-74082-2216-00061-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPFCOOK',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(FCOOK$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPFCOOK Module                               *
//*                                                                  *
//*  Desc: Builds the fortune cookie jar                             *
//*                                                                  *
//*  Note: Assembling with SYSPARM(TEST) is considerably faster,     *
//*        but it will give you only 10 fortune cookies              *
//*                                                                  *
//********************************************************************
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE SYS2.LINKLIB(BSPFCOOK)      NONVSAM
 DELETE SYS2.LINKLIB(FCOOKIE)       NONVSAM
 DELETE SYS2.LINKLIB(COOKIE)        NONVSAM
 DELETE SYS2.LINKLIB(FORTUNE)       NONVSAM
 DELETE SYS2.LINKLIB(MURPHY)        NONVSAM
 DELETE CBT.MVS38J.OBJ(BSPFCOOK)   NONVSAM
 SET MAXCC=0
 SET LASTCC=0
//ASM     EXEC PGM=IFOX00,
//*            PARM='DECK,NOOBJECT,NOXREF,NOESD,NORLD,SYSPARM(TEST)'
//             PARM='DECK,NOOBJECT,NOXREF,NOESD,NORLD,TERM'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPFCOOK)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=CBT.MVS38J.ASM
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(10,10))
//COMP1   EXEC COMPRESS,LIB='SYS2.LINKLIB'
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='RENT,REUS,REFR,LIST,LET,MAP'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//         DD  *
 ALIAS COOKIE
 ALIAS MURPHY
 ALIAS FCOOKIE
 ALIAS FORTUNE
 NAME BSPFCOOK(R)
./ ADD NAME=FCOOK#   8001-74029-74029-1744-00016-00016-00000-HERC02
//HERC01   JOB (CBT),
//             'Run BSPFCOOK',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(FCOOK#)                                   *
//*                                                                  *
//*  Type: JCL to run BSPFCOOK                                       *
//*                                                                  *
//*  Desc: Displays a fortune cookie                                 *
//*                                                                  *
//********************************************************************
//RUNSC   EXEC PGM=BSPFCOOK
./ ADD NAME=FCOOK@   8002-74014-74031-1704-00027-00156-00000-HERC02
 This program display my snoozing little cat (well, actually, he
 is no longer little at all, but a proud, big tomcat.  But snoozing
 is still my little friends favourite pastime)

 As usual, my little cat comes with some wisdom from the fortune
 cookie jar.  I merged my database with about 7000 entries with
 the one found on CBTTAPE 429, file 300, member MURPHY

 The program detects the environment it is running in and uses
 WTO when running as STC, PUT when running as batch, and TPUT
 when running under TSO

The installation JCL will create a load module and a few alias names:
  BSPFCOOK
  COOKIE
  FCOOKIE
  FORTUNE

If you have not already done so, you might want to include a call to
this program in the STDLOGON procedure of SYS1.CMDPROC

Note that in the previous version of the Turnkey system the MURPHY
program (from CBT249 FILE300) was included, and a call to MURPHY
will still invoke that program.  If you want to use the new
fortune cookie jar, delete MURPHY from SYS2.CMDLIB and assign
the alias MURPHY to the load module BSPFCOOK (using, e.g., RPF option
3.4)
./ ADD NAME=MOVELOD$ 8002-74082-74082-1737-00040-00061-00000-HERC01
//HERC01   JOB (CBT),
//             'Build MOVELOAD',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(MOVELOD$)                                 *
//*                                                                  *
//*  Type: Assembly of MOVELOAD Module                               *
//*                                                                  *
//*  Desc: Preloads IEHMOVE modules for faster execution             *
//*                                                                  *
//*  Note:  MOVELOAD source has been sent to me by somitcw@yahoo.com *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(MOVELOAD)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='NORENT,LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(MOVELOAD)  <<=== CHANGE        E
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=MOVELOD# 8003-74082-74082-1802-00022-00012-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Install MOVELOAD',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(MOVELOD#)
//*
//* Desc: MOVELOAD Sample run
//*
//********************************************************************
//MOVELOD EXEC PGM=MOVELOD,PARM='POWER=9'
//SYSPRINT DD  SYSOUT=*
 MOVE TO=3350=USER50,DSNAME=HERC02.TEST.PDS
//VUSER50  DD  UNIT=3350,VOL=SER=USER50,DISP=SHR
//PROTECT  DD  UNIT=3350,VOL=SER=WORK50,DISP=SHR
//SYSUT1   DD  UNIT=3380,VOL=SER=WORK80,DISP=SHR
//LOCKSTEP EXEC PGM=IEFBR14,COND=(0,LE)
//DSNLOCK  DD  DISP=OLD,DSN=HERC02.TEST.PDS
//
./ ADD NAME=MOVELOD@ 8002-74082-74082-1757-00020-00235-00000-HERC01
*
*   MOVELOAD - Load IEHMOVE modules & link to IEHMOVE
*   MOVELOD - Load/Delete IEHMOVE modules
*
*     Entry:  As at entry to IEHMOVE
*
*     Exit:   As at exit from IEHMOVE
*
* When using IEHMOVE on small data sets, IEHMOVE can do as much
* I/O loading its modules as copying data.  This program
* pre-loads all RENT or REUS IEHMOVE modules to avoid the
* program load I/O.
*
* Since the normal IEHMOVE requires APF authorization to run,
* this module would have to be linked AC=1 to run it.
*
* ( Note that there are Zap's which allow IEHMOVE to run without
*   APF authorization for a major subset of functions.
*   There are also Zap's which allow VIO work files for IEHMOVE ).
*
./ ADD NAME=OSCMD$   8001-74082-74082-1714-00037-00045-00000-HERC01
//HERC02   JOB (CBT),
//             'Build BSPOSCMD',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC02
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(OSCMD$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPOSCMD Module                               *
//*                                                                  *
//*  Desc: Run cmd from PARM or SYSIN                                *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPOSCMD)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,RENT,REUS,REFR'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPOSCMD) <<=== CHANGE|
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=OSCMD#   8001-74082-74082-1716-00018-00045-00000-HERC01
//HERC02   JOB (CBT),
//             'Run BSPOSCMD',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC02
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(OSCMD#)                                   *
//*                                                                  *
//*  Desc: Run cmd from PARM or SYSIN                                *
//*                                                                  *
//********************************************************************
//GO1     EXEC PGM=BSPOSCMD,PARM='D A,L'
//GO2     EXEC PGM=BSPOSCMD,PARM='S DBREPORT'
//SYSIN DD *
I SMF
D A,L
./ ADD NAME=OSCMD@   8001-74082-74082-1721-00014-00096-00000-HERC01
---------------- BSPOSCMD - Run OS command from Btach -----------------
*
This program executes OS commands in batch.  The commands can be
passed via PARM statement, or via SYSIN DD statement, or both
*
Required DD statements:

   none

Optional DD statements

   SYSPRINT  for messages

Sample JCL can be found in CBT.MVS38J.CNTL(OSCMD#)
./ ADD NAME=PA2SI$   8001-74082-74082-1722-00037-00044-00000-HERC01
//HERC02   JOB (CBT),
//             'Build BSPPA2SI',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC02
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(PA2SI$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPPA2SI Module                               *
//*                                                                  *
//*  Desc: Pass JCL parameters to SYSIN                              *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPPA2SI)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,RENT,REUS,REFR'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPPA2SI) <<=== CHANGE|
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=PA2SI#   8002-74082-74082-2147-00023-00044-00000-HERC01
//HERC01   JOB (CBT),
//             'Run BSPPA2SI',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC02
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(PA2SI#)                                   *
//*                                                                  *
//*  Desc: Test run of BSPPA2SI                                      *
//*                                                                  *
//********************************************************************
//LISTC   PROC L=
//PA2SI   EXEC PGM=BSPPA2SI,
//             PARM=' LISTCAT LEVEL(&L)'
//SYSUT1   DD  DISP=(,PASS),UNIT=VIO,SPACE=(80,(1,1))
//IDCAMS  EXEC PGM=IDCAMS,COND=(4,LT,PA2SI)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=(OLD,DELETE),DSN=*.PA2SI.SYSUT1
//        PEND
//HERC01  EXEC LISTC,L=HERC01
//HERC02  EXEC LISTC,L=HERC02
./ ADD NAME=PA2SI@   8001-74082-74082-1752-00011-00014-00000-HERC01
---------------- BSPPA2SI - Parm to SYSIN -----------------------------
*
This program takes the APRM statement (which can contain procedure
variables), and plaes it into an output file
*
This output file can then be fed later as input to another program
Required DD statements:

   SYSUT1  :  Card image output file

Sample JCL can be found in CBT.MVS38J.CNTL(PA2SI#)
./ ADD NAME=PILOT$   8059-74001-74039-1545-00160-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Install Autopilot',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(0,0),
//             REGION=8192K,
//             NOTIFY=HERC01
//* +----------------------------------------------------------------+
//* |                                                                |
//* | Name: CBT.MVS38J.CNTL(PILOT$)                                  |
//* |                                                                |
//* | Type: JCL to install Autopilot (BSPPILOT, AKA C3PO)            |
//* |                                                                |
//* | Desc: Build the automatic operator main control task BSPPILOT  |
//* |                                                                |
//* +----------------------------------------------------------------+
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPPILOT)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(NEW,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='XREF,LIST,MAP'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPPILOT)  <<==== change
//UPDATE  EXEC PGM=IEBUPDTE,
//             COND=(0,NE),
//             PARM=NEW
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DISP=SHR,DSN=SYS1.PARMLIB
//SYSIN    DD  *
>< ADD NAME=SHUTDOWN
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SHUTDOWN)                                        *
*                                                                     *
* Desc: Sample Shutdown member                                        *
*                                                                     *
***********************************************************************
PARM EXEC
PARM ECHO
COM SE 'Please logoff, the system will terminate in 5 minutes'
WAIT 180
COM SE 'You better finish now, the system will shutdown in 2 minutes'
WAIT 60
COM SE 'We mean it.  The system will terminate in 1 minute||'
WAIT 60
COM P TSO
WAIT 30
COM z net,quick
COM P MF1
COM P CMD1
COM $P PRT1
COM $P PRT2
COM $P PRT3
COM $P PUNCH1
COM $P RDR1
COM $P
>< ADD NAME=SHUTFAST
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SHUTFAST)                                        *
*                                                                     *
* Desc: Sample Shutdown member                                        *
*                                                                     *
***********************************************************************
PARM NOREPLYU
PARM NOECHO
MSG Sending first warning message
COM SE ',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'
COM SE '; Please logoff, the system will terminate in 2 minutes ;'
COM SE '"""""""""""""""""""""""""""""""""""""""""""""""""""""""""'
WAIT 60
MSG Sending second warning message
COM SE '***************************************************************'
COM SE '* You better finish now, the system will shutdown in 1 minute *'
COM SE '***************************************************************'
WAIT 60
MSG Shutdown beginning
COM P TSO
WAIT 10
COM z net,quick
COM P MF1
COM P CMD1
COM I SMF
COM $P PRT1
COM $P PRT2
COM $P PRT3
COM $P PUNCH1
COM $P RDR1
WAIT 5
COM $P
>< ADD NAME=SCRIPT00
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT00)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
IF MF1
   CONTINUE
ELSE
   COM S MF1
ENDIF
PARM NOECHO
WAIT 5
IF MF1
   CONTINUE
ELSE
   MSG MF/1 could not be started, check system log for errors
ENDIF
>< ADD NAME=SCRIPT01
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT01)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
IF MF1
   COM P MF1
ENDIF
WAIT 5
CMD I SMF
WAIT 60
CMD I SMF
>< ADD NAME=SCRIPT02
***********************************************************************
*                                                                     *
* Name: SYS1.PARMLIB(SCRIPT02)                                        *
*                                                                     *
* Desc: Sample Script member                                          *
*                                                                     *
***********************************************************************
PARM ECHO
PARM REPLYU
CMD S CLEARDMP,DD=00
WAIT 5
CMD S CLEARDMP,DD=01
WAIT 5
CMD S CLEARDMP,DD=02
WAIT 5
./ ADD NAME=PILOT#   8001-74013-74013-2052-00020-00041-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPOPRWT',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(OPRWT#)                                   *
//*                                                                  *
//*  Type: JCL to run program BSPOPRWT                               *
//*                                                                  *
//*  Desc: Wait indefinitely until stop or modify command.  Used     *
//*        by Autooperator                                           *
//*                                                                  *
//********************************************************************
//JOBLIB   DD  DISP=SHR,DSN=CBT.MVS38J.LOAD  <=== or omit
//OPRWT   EXEC PGM=BSPOPRWT                  <=== Show all WTOs
//OPRWT   EXEC PGM=BSPOPRWT,PARM=NOWTO       <=== Show no WTOs
//OPRWT   EXEC PGM=BSPOPRWT,PARM=CATWTO      <=== Show the cat only
./ ADD NAME=PILOT@   8004-74025-74083-1022-00099-00020-00000-HERC01
---------------- BSPPILOT - The MVS Auto Pilot ------------------------
*
The idea to the MVS auto pilot was taken from CBT tape 249, file 33.
Unfortunately, I couldn't get it to assemble correctly fro MVS 3.8.
*
After a little bit of poking around in the source and doing a few
changes here and there I could get it to compile, but it didn't
work reliably.  That's when I decided to rewrite the whole thing
and, while being at it, add a few functions as well
*
Rewrite might be too strong a word, though.  Large portions of the
R2D2 part in IEECVXIT were taken unchanged from the CBT tape
*
What do we have now:
   * IEECVXIT - The WTO exit to automatically react to WTOs.  This
                function is table driven, and currently the following
                messages are recognized (and are being processed on)
                  IST020I        S TSO          s TSO
                  IEE362A        S DUMPSMF      dump full SYS1.MANx
                  IEEXXXA        S DUMPEREP     dump full SYS1.LOGREC
                  IEA994A        S DUMPDUMP     dump full dump datasets
                  $HASP190       $SPRTx         setup printer
                  BSPSD999       S BSPSHUTD     Initiate shutdown
                The routing and descriptor codes of the following
                messages are altered such that they are now
                roll-deletetable
                   IEA911E        full dump on XXXX for asid N
                   IEA994E        partial dump.....
                   IEA994A        all dump datasets are full
                   IGF995I        I/O Restart scheduled
                   IGF991E        IGF msg for mount, swap etc
                The following messages are suppressed altogether
                   BSPTEST1       used for playtesting Autopilot
                   $HASP000       JEs OK msg
   * R2D2     - An SRB routine that runs in the BSPPILOT address
                space and replies to the following WTORs
                 IEF238D  - Device name, Wait, or Cancel      WAIT
                 IEF433D  - Hold or Nohold                    NOHOLD
                 IEF434D  - invalid reply, Hold or Nohold     NOHOLD
                 IKT010D  - SIC or FSTOP                      SIC
                 IKT012D  - Reply U                           U
                 IEC301A  - Master catalog password           U
                 IEC804A  -                                   POST
                 IFA006A  - Dump request for active MANx      CANCEL
                 BSPTEST0 - Autopilot test message            U
   * BSPPILOT - (Or should this be called C3PO)? A address space which
                is doing nothing most of the time. It serves as the
                companion address space to R2D2 and IEECVXIT.  The
                WTO exit and the WTOR reply processor will only if and
                only if the BSPPILOT address space is running.  You
                might consider starting it via COMMND00 processing of
                SYS1.PARMLIB

                The operator (that is you) can communicate with
                BSPPILOT via modify commands.  Some of them are useful
                some not quite so useful
                  P BSPPILOT            These commands will gracefully
                  F BSPPILOT,STOP       terminate the MVS autopilot
                  F BSPPILOT,END        and disable WTO(R) processing

                  F BSPPILOT,SHUTDOWN   will initiate the MVS shutdown
                                        processing.  A script in
                                        SYS1.PARMLIB(SHUTDOWN) will
                                        be used to run operator
                                        commands shutdown sequence

                  F BSPPILOT,SHUTFAST   Same as above, except that the
                                        operator will not be asked for
                                        confirmation of the shutdown
                                        request first
                                        commands shutdown sequence

                  F BSPPILOT,SHUTCANC   Will cancel the shutdown
                                        sequence that was initiated via
                                        the SHUTDOWN or SHUTFAST modify
                                        command
                                        commands shutdown sequence

                  F BSPPILOT,CAT        Shows the splash screen

                  F BSPPILOT,COOKIE     Gives you a wisdom from the
                                        fortune cookie jar

                  F BSPPILOT,SETPF      Invokes BSPSETPF program to
                                        set MVS console function keys

                  F BSPPILOT,LISTAPF    Invokes BSPAPFLS to list the
                  F BSPPILOT,APFLIST    APF priviledged data sets

                  F BSPPILOT,TEST       Issues a WTOR and a WTO that
                                        can be used in play testing
                                        the autooperator
                  F BSPPILOT,SCRIPT=sss This runs the script sss from
                  F BSPPILOT,RUN=sss    the PDS that is in the SCRIPTS
                                        DDNAME of the BSPPILOT proc.
                                        If there is no SCRIPTS DD name
                                        SYS1.PARMLIB will be used
                                        for more info see BSPRUNSC
                                        doc in member RUNSC@
./ ADD NAME=REQUEUE$ 8002-74082-74082-1824-00040-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build REQUEUE',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(REQUEUE)                                  *
//*                                                                  *
//*  Type: Assembly of REQUEUE Module                                *
//*                                                                  *
//*  Desc: Requeues running job for re-execution                     *
//*                                                                  *
//*  Note:  REQUEUE  source has been sent to me by somitcw@yahoo.com *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(REQUEUE)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='NORENT,LIST,LET,MAP,SIZE=(140K,6400),AC=1'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(REQUEUE)   <<=== CHANGE        E
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=REQUEUE# 8003-74082-74082-1823-00018-00022-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Test run REQUEUE',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name:REQUEUE#
//*
//* Desc: Sample run of REQUEUE module
//*
//********************************************************************
//IEHLIST EXEC PGM=IEHLIST
//SY5PR1NT DD SYSOUT=*
 LISTVTOC VOL=3350=MVSRES,FORMAT
//VSYSRES  DD UNIT=SYSDA,VOL=SER=MVSRES,DISP=SHR
//REQUEUE EXEC PGM=REQUEUE,COND=(0,EQ,IEHLIST)
./ ADD NAME=REQUEUE@ 8001-74082-74082-1819-00144-00020-00000-HERC01
***********************************************************************
*                                                                     *
* The source was sent to me by                   (somitcw@yahoo.com)  *
*                                                                     *
* If things don't work on the Turnkey system, blame me                *
* If everything works out okay, it is his fault                       *
*                                                                     *
***********************************************************************
PASS     TITLE 'REQUEUE - - - Program to re-queue a JOB'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   This program delays 1 minute and issues an operator command
* to re-queue the job that executed it.
*
*  Blame: somitcw@yahoo.com
*
*  Example:
*
* //IEHLIST EXEC PGM=IEHLIST
* //SY5PR1NT DD SYSOUT=*
*  LISTVTOC VOL=3350=SYSRES,FORMAT
* //VSYSRES  DD UNIT=SYSDA,VOL=SER=SYSRES,DISP=SHR
* //REQUEUE EXEC PGM=REQUEUE,COND=(0,EQ,IEHLIST)
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,GEN,NODATA
REQUEUE  CSECT ,
         USING *,R15              SET TEMPORARY BASE REGISTER
         SAVE  (14,12),,'REQUEUE.&SYSDATE..&SYSTIME' SAVE CALLER'S REGS
         LA    R12,SAVEAREA       LOAD THE ADDRESS ON THE NEW SAVE AREA
         ST    R12,8(,R13)        CONNECT OLD AND NEW SAVE AREAS
         ST    R13,4(,R12)        CONNECT OLD AND NEW SAVE AREAS
         LR    R13,R12            CONNECT OLD AND NEW SAVE AREAS
         DROP  R15                DROP THE TEMPORARY BASE REGISTER
         LR    R12,R15            LOAD THE PROGRAM'S BASE REGISTER
         USING REQUEUE,R12        GIVE THE ASSEMBLER THE NEW BASE
*
*   THE FOLLOWING CODE DELAYS THIS JOB FOR 1 MINUTE
         STIMER WAIT,BINTVL=TIME  WAIT FOR 6000 HUNDREDTHS OF SECONDS
*   THE PRECEEDING CODE DELAYS THIS JOB FOR 1 MINUTE
*
*   THE FOLLOWING CODE FINDS THE JES2 JOB OR STC NUMBER
         USING PSA,R0             SET ADDRESSIBILITY TO THE TCB
         L     R1,PSATOLD         LOAD THE ADDRESS OF THE TCB
         USING TCB,R1             SET ADDRESSIBILITY TO THE TCB
         L     R1,TCBJSCB         LOAD THE ADDRESS OF THE JOBSTEP CB
         USING IEZJSCB,R1         SET ADDRESSIBILITY TO THE JSCB
         L     R1,JSCBSSIB        LOAD THE ADDR. OF THE SUB-SYS ID BLK
         USING SSIB,R1            SET ADDRESSIBILITY TO THE SSIB
         MVC   CMD+06(8),SSIBJBID PUT JOB WITH NUMBER IN $E COMMAND
         MVC   CMD+16(8),SSIBJBID PUT JOB WITH NUMBER IN $C COMMAND
         MVC   CMD+26(8),SSIBJBID PUT JOB WITH NUMBER IN $H COMMAND
         DROP  R1
*  THE PRECEEDING CODE FINDS THE JES2 JOB OR STC NUMBER
*
         MODESET MODE=SUP,KEY=ZERO SWITCH TO SUPERVISOR MODE
         LTR   R15,R15            SEE IF MODESET WORKED
         BNE   ERROR1             GO ABEND IF MODESET FAILED
*
         LA    R1,CMD             LOAD ADDRESS OF COMMAND TO BE EXCUTED
         SLR   R0,R0              CLEAR REGISTER ZERO FOR SVC 34
         SVC   34                 ISSUE OPERATOR COMMAND
*
         MODESET MODE=PROB,KEY=NZERO SWITCH BACK TO PROBLEM STATE
         LTR   R15,R15            SEE IF MODESET WORKED
         BNE   ERROR2             GO ABEND IF MODESET FAILED
*
*   THE FOLLOWING CODE DELAYS THIS JOB TO GIVE THE CANCEL TIME TO WORK
         STIMER WAIT,BINTVL=TIME  WAIT FOR 6000 HUNDREDTHS OF SECONDS
*   THE PRECEEDING CODE DELAYS THIS JOB TO GIVE THE CANCEL TIME TO WORK
*
         WTO   'Please requeue this JOB - automatic requeue failed',   C
               ROUTCDE=(1,11),DESC=2    Highlight only first message
FAILED   DS   0H
         STIMER WAIT,BINTVL=TIME2  WAIT FOR 6000 HUNDREDTHS OF SECONDS
         WTO   'Please requeue this JOB - automatic requeue failed',   C
               ROUTCDE=(1,11)
         B     FAILED            Repeat message every 10 minutes
*
*  Never end normally
*        L     R13,SAVEAREA+4     LOAD CALLER'S SAVE AREA ADDRESS
*        RETURN (14,12),RC=0      RETURN TO CALLER
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      ERROR ROUTINES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
ERROR1   DS    0H
         WTO   'MODESET MODE=SUP,KEY=ZERO FAILED',      ERROR MESSAGE  C
               ROUTCDE=(1,11)     DISPLAY TO OPERATOR AND PROGRAMMER
         ABEND 1                  ABEND THE PROGRAM, NODUMP
         SPACE 2
ERROR2   DS    0H
         WTO   'MODESET MODE=PROB,KEY=NZERO FAILED',    ERROR MESSAGE  C
               ROUTCDE=(1,11)     DISPLAY TO OPERATOR AND PROGRAMMER
         ABEND 2                  ABEND THE PROGRAM, NODUMP
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      WORKAREA AND CONSTANTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
SAVEAREA DC    18F'0'             REGISTER SAVE AREA
*
TIME     DC    F'6000'            DELAY IN HUNDREDTHS/SECONDS IN BINARY
TIME2    DC    F'60000'           DELAY IN HUNDREDTHS/SECONDS IN BINARY
*
CMD      DC    AL2(35),AL2(0),CL31'$EXXXXXXXX;CXXXXXXXX;HXXXXXXXX '
         SPACE 3
R0       EQU   0                  REGISTER EQUATE FOR REGISTER 0
R1       EQU   1                  REGISTER EQUATE FOR REGISTER 1
R2       EQU   2                  REGISTER EQUATE FOR REGISTER 2
R3       EQU   3                  REGISTER EQUATE FOR REGISTER 3
R4       EQU   4                  REGISTER EQUATE FOR REGISTER 4
R5       EQU   5                  REGISTER EQUATE FOR REGISTER 5
R6       EQU   6                  REGISTER EQUATE FOR REGISTER 6
R7       EQU   7                  REGISTER EQUATE FOR REGISTER 7
R8       EQU   8                  REGISTER EQUATE FOR REGISTER 8
R9       EQU   9                  REGISTER EQUATE FOR REGISTER 9
R10      EQU   10                 REGISTER EQUATE FOR REGISTER 10
R11      EQU   11                 REGISTER EQUATE FOR REGISTER 11
R12      EQU   12                 REGISTER EQUATE FOR REGISTER 12
R13      EQU   13                 REGISTER EQUATE FOR REGISTER 13
R14      EQU   14                 REGISTER EQUATE FOR REGISTER 14
R15      EQU   15                 REGISTER EQUATE FOR REGISTER 15
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      DSECTS FOLLOW
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         IEFJSSIB ,               SUBSYSTEM IDENTIFICATION BLOCK DSECT
         EJECT
         IEZJSCB  ,               JOB STEP CONTROL BLOCK DSECT
         EJECT
         IKJTCB   ,               TASK CONTROL BLOCK DSECT
         EJECT
         IHAPSA   ,               PREFIXED STORAGE AREA
         END   ,                  THE END OF THE PROGRAM
./ ADD NAME=RUNSC$   8015-74021-74039-0842-00037-00037-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPRUNSC',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(RUNSC$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPRUNSC Module                               *
//*                                                                  *
//*  Desc: Run scripts.  Used as part of BSPPILOT                    *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPRUNSC)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,RENT,REUS,REFR'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPRUNSC) <<=== CHANGE!
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=RUNSC#   8003-74029-74037-1501-00016-00020-00000-HERC02
//HERC01   JOB (CBT),
//             'Run BSPRUNSC',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(RUNSC#)                                   *
//*                                                                  *
//*  Type: JCL to run BSPRUNSC                                       *
//*                                                                  *
//*  Desc: Reads scrut file from SCRIPTS DD and executes it          *
//*                                                                  *
//********************************************************************
//RUNSC   EXEC PGM=BSPRUNSC,PARM=S    <=== name of script
./ ADD NAME=RUNSC@   8001-74082-74082-1753-00054-01295-00000-HERC01
---------------- BSPRUNSC - Autopilot runscript module ----------------
*********************************************************************** 00213
*                                                                     * 00290
*  This program will read input data from a member of a PDS with      * 00251
*  DDNAME SCRIPTS.  If no SCRIPTS DDNAME is found, SYS1.PARMLIB       * 00253
*  will be used                                                       * 00253
*                                                                     * 00253
*  The member to be used is specified via the PARM passed to the      * 00253
*  program.  If none if specified, a default of BSPRUNSC is used      * 00254
*                                                                     * 00254
*  Syntax of script files:                                            * 00258
*  Leading spaces will be removed from the script line                * 00254
*                                                                     * 00254
*  An asteriks (*) in col 1 means a comment, this line gets ignored   * 00258
*  PARM TEST       - don't exec, just simulate (default),             *
*  PARM CHECK      - same as PARM TEST                                *
*  PARM ECHO       - show commands on console (default)               *
*  PARM NOECHO     - no longer echo commands to console               *
*  PARM EXEC       - Execute the script, ask operator first           *
*  PARM NOREPLYU   - Execute the script, don't ask operator permission*
*  PARM REPLYU     - Next time, ask operator permission again         *
*  WAIT xxx        - Wait specified number of seconds before going on * 00258
*                    Default is 10 seconds                            * 00258
*  COM  ccc        - Execute the command ccc                          * 00258
*  CMD  ccc        - Execute the command ccc, equivalent to COM       * 00258
*  MSG  ttt        - show the message with the text ttttt             * 00258
*  WTO  ttt        - equivalent to MSG                                * 00258
*  IF xxxxxxxx     - execute following command if xxxxxxxx is active  * 00290
*  ELSE            - otherwise execute the second branch              * 00290
*  ENDIF           - end of IF constructs.  IF may not be nested      * 00290
*                                                                     * 00266
*  JCL Execution Parameters are specified via the                     * 00266
*  PARM statement on the EXEC card:                                   * 00266
*                                                                     * 00266
*       PARM=xxxxxxxx - Member name of script to process              * 00266
*                                                                     * 00266
*  Required DD statement: none                                        * 00266
*                                                                     * 00266
*  Optional DD statements:                                            * 00266
*           SCRIPTS  -  Input dataset for control statements          * 00266
*                       Default: SYS1.PARMLIB                         * 00266
*                                                                     * 00290
*           SYSPRINT -  (When running as a batch job)                 * 00266
*                       Default: SYSOUT=A                             * 00266
*                                                                     * 00290
*           SYSUDUMP -  Default: SYSOUT=A                             * 00266
*                                                                     * 00290
*           SNAPDUMP -  (When compiled with &DEBUG=YES)               * 00266
*                       Default: SYSOUT=A                             * 00266
*                                                                     * 00290
*           JCLPDS   -  (When compiled with &DEBUG=YES)               * 00266
*                       Default: SYS1.PARMLIB                         * 00266
*                                                                     * 00290
***********************************************************************
./ ADD NAME=SETPF$   8006-74013-74039-0840-00035-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPSETPF',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(SETPF$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPAPFCK Module                               *
//*                                                                  *
//*  Desc: Set console PFKs from SETPFKxx members in PARMLIB         *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPSETPF)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,COND=(0,NE),PARM='LIST,LET,MAP'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPSETPF) <<=== CHANGE
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=SETPF#   8003-74013-74014-1615-00020-00037-00000-HERC01
//HERC01   JOB (CBT),
//             'Run BSPSETPF',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(SETPF#)                                   *
//*                                                                  *
//*  Type: JCL to run BSPSETPF                                       *
//*                                                                  *
//*  Desc: Set console PFKs from SETPFKxx members in PARMLIB         *
//*                                                                  *
//********************************************************************
//* Note:  When using UPDATE or NOREPLYU the program must run
//*        authorized||
//*SETPF1  EXEC PGM=BSPSETPF                  <=== check, do not update
//*SETPF2  EXEC PGM=BSPSETPF,PARM=UPDATE      <=== update after reply
//SETPF3  EXEC PGM=BSPSETPF,PARM=NOREPLYU    <=== update without reply
./ ADD NAME=SETPF@   8006-74014-74039-0841-00076-01168-00000-HERC01
  This program will search file PARMLIB for members with the name       00251
  SETPFKxx (where xx is the console ID), and will then modify the       00252
  PFK stoarage areas in memory with information found in those          00253
  members                                                               00254
                                                                        00258
  A member SETPFKxx, where xx is not a valid console id, will be        00258
  ignored.  A console with id yy, where there is no member SETPFKyy     00258
  will also be ignored.                                                 00258
                                                                        00258
  sample members are provided in CBT.MVS38J.CNTL(SETPFK01)              00258
                             and CBT.MVS38J.CNTL(SETPFK02)              00258
                                                                        00258
  These definitions are not permanent,  With other words, this          00255
  program should be run on every IPL, preferably via a start            00256
  command in SYS1.PARMLIB(COMMND00) or SYS1.PARMLIB(JES2PARM):          00257
  a)  copy BSPSETPF from 'CBT.MVS38J.PROCLIB' to SYS2.PROCLIB           00258
  b1) add the line COM='S BSPSETPF' to SYS1.PARMLIB(COMMND00)           00258
  or                                                                    00258
  b2) add the line $VS,'S BSPSETPF' to the end of SYS1.PARMLIB(JES2PARM)00258
                                                                        00258
  If the operator just changes on PFK definitions, BTW, all the         00259
  current active definitions will be permanently saved (I just          00260
  haven't found out where, yet)                                         00261
                                                                        00266
                                                                        00290
  JCL to assemble & Link this pgm: CBT.MVS38J.CNTL(SETPF$)              00290
  JCL to run this program:         CBT.MVS38J.CNTL(SETPF#)              00290
                                                                        00290
  JCL Execution Parameters are specified via the                        00266
  PARM statement on the EXEC card:                                      00266
                                                                        00266
       PARM=NOUPDATE:  (default) - PFKs will not be updated, the        00266
                       SETPFXxx members in PARMLIB will only be         00266
                       checked for correct syntax                       00266
       PARM=UPDATE:    The SETPFKxx members will be syntax-checked,     00266
                       and updaes to the in core PFK definition         00266
                       will be made after the operator has replied      00266
                       to message BSPSP80D                              00266
       PARM=NOREPLYU:  The SETPFKxx members will be syntax-checked,     00266
                       and updates to the in core PFK definition        00266
                       will be made.  There will be no confirmation     00266
                       request to the operator                          00266
                                                                        00266
                                                                        00266
  Required DD statement: none                                           00266
                                                                        00266
  Optional DD statements:                                               00266
           PARMLIB  -  PDS containing the SETPFKxx members to be        00266
                       processed. Default: SYS1.PARMLIB                 00266
                                                                        00266
           SYSPRINT -  Output queue for BSPSETPF messages.              00266
                       Default: SYSOUT=X                                00266
                                                                        00266
           SYSUDUMP -  Output queue for dumps (which, of course,        00266
                       will never happen). Default: SYSOUT=X            00266
                                                                        00266
 SYS1.PARMLIB(SETPFxx) record layout:                                   00267
 An asterisk (*) in colum 1 indicates a comment line, this line         00268
 will be ignored                                                        00268
                                                                        00268
  Colums            Description                                         00269
  01 - 02           PFK number                                          00271
  03                Processing flag: Y = Conversational, N nonconv.     00272
  04                ignored, should be empty                            00273
  05 - 71           (first part of) the command as the operator         00277
                    would issue it.  Multiple commands are separated    00278
                    by semicolon.  Prompt position is specified         00279
                    by an underscore                                    00279
  72                Continuation column.  If non-blank then the         00280
                    command extends to the next line of the member      00281
                    The continuation must begin exactly at col 05       00281
                    and must end on or before colum 45                  00282
                                                                        00268
 If a function key definition line is omitted, that PFK will not be     00290
 updated.  If a function key definition is provided with an empty       00290
 command area, that PFK will be deactivated                             00290
./ ADD NAME=SMPSL$   8004-74004-74038-1154-00047-00019-00000-HERC01
//HERC01   JOB (CBT),
//             'Build SMPTFSEL',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(SMPSL$)                                   *
//*                                                                  *
//*  Type: Assembly of SMPSEL Module                                 *
//*                                                                  *
//*  Desc: Select SYSMOD entries via FMID                            *
//*                                                                  *
//*  Note: Requires CBT249.FILE038 (File 38 from CBT TAPE 249)       *
//*                                                                  *
//********************************************************************
//CBTASML PROC CBT='CBT249.FILE038',
//             SYSLMOD='SYS2.LINKLIB',    <<==== CHANGE
//             MEMBER=SMPTFSEL
//ASM     EXEC PGM=IFOX00,
//             REGION=1024K,
//             PARM='NOXREF,NOLIST,TERM,DECK,NOOBJECT'
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSLIB   DD  DISP=SHR,DSN=&CBT,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB
//         DD  DISP=SHR,DSN=CBT.MVS38J.ASM
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//SYSPUNCH DD  UNIT=VIO,
//             SPACE=(CYL,(1,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),
//             DISP=(NEW,PASS)
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=&CBT(&MEMBER)
//LINK    EXEC PGM=IEWL,PARM='XREF,LIST,MAP',COND=(0,NE,ASM)
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DISP=SHR,DSN=&SYSLMOD(&MEMBER)
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
//         DD  DDNAME=SYSIN
//        PEND
//SMPTFSEL EXEC CBTASML
./ ADD NAME=SMPSL#   8006-74004-74014-2125-00041-00024-00000-HERC01
//HERC01  JOB  (SMP),
//             'Select PTFs',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* NAME: SYS1.SETU.CNTL(SMPSEL02)
//*
//* DESC: Select SYSMODs via Filter Criteria
//*
//********************************************************************
//LIST    EXEC PGM=HMASMP,REGION=1024K,PARM='DATE=U'
//SMPCDS   DD  DSN=SYS1.SMPCDS,DISP=SHR
//SMPACDS  DD  DSN=SYS1.SMPACDS,DISP=SHR
//SMPPTS   DD  DSN=SYS1.SMPPTS,DISP=SHR
//SMPLIST  DD  UNIT=VIO,SPACE=(CYL,(10,4),RLSE),DISP=(,PASS)
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPLOG   DD  DUMMY
//SMPCNTL  DD  *
           LIST PTS SYSMOD .
           LIST CDS SYSMOD NOACCEPT .
//*
//SELECT  EXEC PGM=SMPTFSEL
//INPUT    DD  DSN=*.LIST.SMPLIST,DISP=(OLD,PASS)
//OUTPUT   DD  SYSOUT=*
//*UTPUT   DD  DSN=HERC01.SMPTFSEL.CNTL,DISP=(MOD,CATLG,DELETE),
//*            UNIT=SYSDA,SPACE=(TRK,(4,1),RLSE)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 FMID(EJE1103)
 APP(72000-74365)
 REQ(UZ7-UZ9)
 PRE(JVT1102)
 LMOD(IEANUC01)
 RMID(ZUM0001-ZUM0002) UMID(ZUM0004)
 SZAP(IEFJESNM)
 .
./ ADD NAME=SMPSL@   8001-74014-74014-1954-00028-00019-00000-HERC02
SMPTFSEL is from CBT Tape 249, file 38.  It allows filtering of
data stored in SMP libraries.
Selection parameters are given in SYSIN in free format as a sequence of
keywords and parameters where
              KEYWORD is field label in SMPLIST report
              VALUE   is generic value to be selected
                      or a generic value range
              .       indicates end of parameters
Examples:
 FMID(ESP1200) FMID(JSP1210) .      (A)
 APP(80-80.122) .                   (B)
 REQ(UZ9-UZ95).                     (C)
 PRE(UZ27866) .                     (D)
 LMOD(IKJCT469) .                   (E)
 UMID(USER-USER50) UMID(USER900).   (F)
 SZAP(IRARMCNS) .                   (G)
Results: (depending on SMP list parameters)
 (A) all elements belonging to the FMIDs
 (B) all elements applied 80.000 thru 80.122
 (C) all elements that req any element in the range
 (D) all elements that pre-req UZ27866
 (E) all modules of IKJCT469
 (F) all elements updated by USER50. thru USER900
 (G) all superzaps for IRARMCNS

Sample execution JCL is in CBT.MVS38J.CNTL(SMPSL#)


./ ADD NAME=TAPEHDR$ 8001-74082-74082-1804-00040-00040-00000-HERC01
//HERC01   JOB (CBT),
//             'Build TAPEHDR',
//             CLASS=A,
//*            RESTART=LINK,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(TAPEHDR$)                                 *
//*                                                                  *
//*  Type: Assembly of TAPEHDR  Module                               *
//*                                                                  *
//*  Desc: Preloads info about tape label(s)                         *
//*                                                                  *
//*  Note:  MOVELOAD source has been sent to me by somitcw@yahoo.com *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(TAPEHDR)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='NORENT,LIST,LET,MAP,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(TAPEHDR)   <<=== CHANGE        E
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=TAPEHDR# 8000-74082-74082-1811-00017-00017-00000-HERC01
//HERC01  JOB  (SETUP),
//             'Run TAPEHDR',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: CBT.MVS38J.CNTL(TAPEHDR#)
//*
//* Desc: Testrun of TAPEHDR modules
//*
//********************************************************************
//TAPEHDR EXEC PGM=TAPEHDR
//SYSPRINT DD  SYSOUT=*
//TAPEIN   DD  DISP=SHR,DSN=TAPEIN,UNIT=TAPE,VOL=SER=TAPEIN,
//             LABEL=(,BLP)
./ ADD NAME=UZ61025  8000-74038-74038-1651-00424-00424-00000-HERC01
++ PTF (UZ61025)        /*    5752-SC120-EBT1102-SCP
//UZ61025  JOB 5752-61025-0,SC120,MSGLEVEL=(1,1),CLASS=A     */  .
++ VER (Z038)
   FMID(EBT1102)
   SUP  (UZ57310,UZ55395,UZ30403,UZ23590,AZ65419,AZ64835,
         AZ61484,AZ59479,AZ45123,AZ37047)                  .
++ IF FMID(EBB1102) THEN REQ (UZ29156)                     .
++ IF FMID(JBT1112) THEN REQ (UZ57594)
 /*
  PROBLEM DESCRIPTION(S):
           OZ64835 - THE NAME FOR THE RESETPL MACRO IS SPELLED
                     INCORRECTLY. THE CORRECT SPELLING SHOULD BE
                     'RESETPL'. NOTE ALSO THAT THIS PTF CONTAINS A TEST
                     PROCEDURE USED FOR COMPLING THE MODULE. THIS CODE
                     CODE CAUSE PROBLEM IF APPLIED TO THE SYSTEM.
           OZ65419 - ON SWITCHED LINES AFTER A RESETPL MACRO
                     INSTRUCTION THE USER MAY RECIEVE A RETURN CODE OF
                     SOME KIND. RESETPL DOES NOT PROPERLY PROCESS A RC
                     OF X'00' OR X'04', SUBSEQUENTLY A WAIT WILL BE
                     ISSUED AND MAY NEVER BE SATISFIED. RESETPL RETRY
                     THE RETURN CODES AS TO ELIMINATE AN INDEFINITE
                     WAIT.
  COMPONENT: 5752-SC120-EBT1102
  APARS FIXED: OZ64835,OZ65419
  SPECIAL CONDITIONS:
    NONE:
  COMMENTS:          NONE
 */.
++ MAC (RESETPL) DISTLIB(AMACLIB)
          SYSLIB(MACLIB)
          SSI(23120932) .
         MACRO
&NAME    RESETPL &DECB,&TYPE,&SPEC                   @AZ64835
         LCLC  &X
&X       SETC  '&SYSNDX'
.*
.* CHANGE ACTIVITY
.*            APARS                    PTMS
.*        YA03232  (12/20/73)      YM4072  (10/19/73)
.*        YA03226  (2/1/74)        YM5667  (12/14/73)
.*        YA03242  (2/1/74)        YM5699  (2/13/74)
.*        YA03253  (2/1/74)        YM7709  (4/2 74)
.*        YA03236
.*        ZA00503   05/03/74
.*        ZA00537   11/15/74
.*        ZA00548  (11/15/74)
.*        ZA00549   11/15/74
.*        AZ04199   09/22/75
.*        AZ04659   09/22/75
.*        AZ05393   09/22/75
.*        AZ08050   01/29/76       AZ08056   01/29/76
.*        AZ13193   09/10/76       AZ14028   09/13/76
.*        AZ15411   11/12/76       AZ15413   11/12/76
.*        AZ17733   05/26/77       AZ25182   09/26/77
.*        AZ31061   03/16/78       AZ31078   03/16/78
.*        AZ37047   12/06/78       AZ45123   02/21/80
.*        AZ59479   02/05/82
.*        AZ61484   04/15/82
.*        AZ65835   08/26/82
.*        AZ65419   10/21/82
.*
&NAME    DS    0H
         AIF   ('&DECB'(1,1) EQ '(').REG
         LA    1,&DECB
         AGO   .CON
.REG     AIF   ('&DECB(1)' EQ '1').CON
         AIF   (T'&DECB EQ 'U').UREG
         AIF   ('&DECB(1)' GT '12').ER
.UREG    LR    1,&DECB(1)
.CON     SR    0,0
         SR    15,15
         IC    0,25(1)        GET RELATIVE LINE NUMBER FROM DECB.
         L     14,8(1)        GET DCB ADDRESS FROM DECB.
         TM    48(14),X'10'            HAS DCB BEEN OPENED?
         BO    IECA&X              IF SO, CONTINUE.
IECJ&X   LA    15,12                   IF NOT, SET RETURN CODE   A28622
         B     IECB&X              AND EXIT.
IECA&X   EQU   *
         AIF   ('&TYPE' EQ 'ATTENT' OR '&TYPE' EQ '').ANR
.NOTANR  MVC   IECK&X.(1),26(1)    MOVE RESPN TO SAVE
         MVC   IECK&X+1(1),5(1)  MOVE OPERATION TYPE               000H
         NI    IECK&X+1,X'7F' HIGH ORDER BIT OFF                   000H
         SR    1,1                                                 000G
         IC    1,36(14)       GET IOB SIZE FROM DCB.
         MR    0,0            MULTIPLY IOB SIZE TIMES RELATIVE LINE NO.
         A     1,28(14)       ADD IOB ADDRESS MINUS SIZE TO RESULT.
         OI    1(1),X'01'     SET POLLING RESET BIT IN IOB.        000A
         L     15,44(14)      GET ADDR FROM DEB                @ZA31061
         LA    15,0(15)       CLEAR HI-ORDER BYTE              @ZA31061
         IC    0,32(1)        GET UCB-INDEX FROM IOB           @ZA31061
         SLA   0,2            MULTIPLY RLN BY 4                @ZA31061
         AR    15,0           USE RLN*R AS INDEX               @ZA31061
         L     15,32(15)      TO DEBUCBAD AND GET UCB ADDR     @ZA31061
         CLI   19(15),X'82'  IS THIS A 2260                    @ZA15413
         BE    IECE&X         YES, GIVE ZERO RC                @ZA25182
.*            ONE LINE DELETED FOR THE FOLLOWING APAR           YA03236
.*
         AIF   ('&TYPE' EQ 'POLLING' OR '&TYPE' EQ '').POLL        000D
         AIF   ('&TYPE' EQ 'ANSRING').ANSR
         MNOTE 12,'***  IHB002  INVALID TYPE OPERAND SPECIFIED-&TYPE'
         MEXIT
.*
.*
.POLL    ANOP                                                      000A
.*
         L     15,16(1)       LOAD ADDRESS OF FIRST CCW.
         CLI   0(15),X'06' IS THE CCW A PREPARE COMMAND            000G
         BE    IECR&X  IF SO BRANCH                                000H
         CLI   IECK&X+1,X'0E'  IS THIS WRITE TCO                   000H
         BE    IECV&X  YES, CHECK FOR PREPARE                      000H
         CLI   IECK&X+1,X'1E'      READ CONNECT WITH TONE      @ZA13193
         BE    IECF&X              YES, HANDLE              CC @ZA37047
         CLI   8(15),X'06'  IS NEXT CCW A PREPARE                  000H
         BNE   IECC&X   BRANCH IF NOT                              000H
         CLI   16(15),X'04'  IS THE CCW A SENSE                    000H
         BNE   IECC&X         BRANCH IF NOT                        000H
         B     IECS&X     BRANCH TO CHECK RESPONSE                 000H
IECV&X   LA    15,40(15)  POINT TO SIXTH CCW                       000H
         CLI   0(15),X'06'  IS THIS CCW A PREPARE                  000H
         BE    IECR&X  CHECK FOR SENSE COMMAND NEXT                000H
         B     IECE&X                                              000H
IECR&X   CLI   8(15),X'04'  IS THE CCW A SENSE                     000H
         BNE   IECC&X   BRANCH IF NOT                              000G
IECS&X   CLI   IECK&X,X'FF'  IS RESPN X'FF'                        000H
         BE    IECP&X   BRANCH IF YES                              000G
         B     IECE&X                                              000G
IECC&X   LA    15,72(1)           POLL ALWAYS AT IOBCPA+8       YA01244
         CLI   0(15),X'09'        IS IT THERE?                  YA01244
         BE    IECD&X             YES, CHECK FOR WRAPLIST       YA01244
         AIF   ('&TYPE' EQ 'POLLING').POLL01                    YA01244
         B     IECF&X             CHECK ENABLE,PREPARE          YA01244
         AGO   .POLL02                                          YA01244
.POLL01  B     IECE&X             QUIT                          YA01244
.POLL02  ANOP                                                   YA01244
IECD&X   CLI   8(15),X'08'    IS THE CCW FOLLOWING THE POLL        000A
         BNE   IECQ&X    COMMAND A TIC COMMAND?  IF NOT, EXIT. @ZA15411
         L     15,8(15)       LOAD ADDRESS OF SECOND POLL COMMAND. 000A
         MVI   8(15),X'03'    SET COMMAND CODE IN CCW FOLLOWING    000A
*                        SECOND POLL COMMAND TO AN I/O NO-OP.      000A
         LA    1,0(1)         CLEAR HI-ORDER BYTE OF IOB ADDR    YM4072
         LA    0,8(15)        ADDR OF ALTERED VIRTUAL CCW        YM4072
         SR    0,1            OFFSET OF THIS CCW FROM IOB        YM4072
         SR    15,15          CLEAR WORK REG                     YM4072
***      PREPARE FOR REISSUE OF IOHALT IF RC=4 AND IOBBUSY     @ZA59479
         ST    15,IEC2&X+12   INIT *COUNTER TO ZEROES          @ZA59479
         ST    15,IEC2&X+16   INIT *COUNTER TO ZEROES
         ST    1,IEC2&X+8     SAVE *IOBADDR                    @ZA59479
***      *COUNTER AND *IOBADDR ARE INITIALIZED                 @ZA59479
         IC    15,32(1)       NUMBER OF EXTENTS FROM IOB         YM4072
         SLL   15,2           MULT EXTENTS BY 4                  YM4072
         L     14,44(14)      GET DEB ADDR FROM DCB              YM4072
         L     1,32(14,15)    GET UCB ADDR IN PARAMETER REG      YM4072
***      THIS STATEMENT DELETED BY APAR OZ45123                @ZA45123
         LA    1,0(1)         CLEAR HI_ORDER BYTE              @ZA45123
         STM   0,1,IEC2&X     SAVE R0 AND R1                   @ZA59479
***      THIS STATEMENT DELETED BY APAR OZ45123                @ZA45123
IECM&X   IOHALT (1),(0)       TERMINATE POLLING (CCW MODIFY)   @ZA59479
         LA    14,4           LOAD X'04' FOR COMPARE             YM4072
         CLR   15,14          RETURN CODE = X'04' ? IF NO,       YM4072
         BNE   IEC3&X        TEST IOHALT RC=X'10'             @ZA59479
         L     14,IEC2&X+8   ELSE, GET *IOBADDR               @ZA59479
         TM    28(14),X'40'   IS IOBBUSY ON?                  @ZA59479
         BNO   IECE&X        IOHALT DONE; EXIT WITH RC=0      @ZA59479
***      IF IOHALT RC=04 AND THE IOB IS BUSY, RESETPL TRIES   @ZA59479
***      TO AVOID PASSING A RESETPL RETURN CODE OF X'00'.     @ZA59479
***      IT WILL REISSUE IOHALT AND TEST FOR IOBBUSY FOR      @ZA59479
***      A MAXIMUM OF 7 TIMES BEFORE PASSING RC OF X'0C'.     @ZA59479
         IC    15,IEC2&X+12 GET RETRY COUNT FOR TEST          @ZA59479
         LA    14,6          GET RELATIVE MAX RETRY COUNT     @ZA59479
         CLR   15,14         IS RETRY AT MAX COUNT? IF NO,    @ZA59479
         BNH   IEC4&X       INCREMENT COUNTER AND RE-IOHALT   @ZA59479
IEC5&X   LA    15,12         ELSE GIVE UP, SET RC  TO X'0C'   @ZA59479
         B     IECB&X       AND EXIT.                         @ZA59479
IEC3&X   LA    14,16          LOAD X'10' INTO REG FOR COMPARES @ZA59479
         CLR   15,14          RETURN CODE = X'10'                YM4072
         BL    IECB&X        EXIT WITH IOHALT RETURN CODE       YM4072
         BE    IECE&X        EXIT WITH 0 RETURN CODE            YM4072
         LA    14,24          LOAD X'18' FOR COMPARE          LD YM7709
         CLR   15,14          IS RETURN CODE X'18'            LD YM7709
         BE    IECE&X        YES, EXIT WITH 0 RTN CODE       LD YM7709
         LA    14,20          LOAD X'14' INTO REG FOR COMPARES   YM4072
         CLR   15,14          RETURN CODE = X'14'                YM4072
         LM    0,1,IEC2&X    RESTORE R0 AND R1                @ZA31061
         BNE   IEC5&X        IF NOT X'14' SET RC=X'0C'          YM4072
**  IF THE RETURN CODE = X'14', REISSUE SVC 33 FOR MAXIMUM OF    YM4072
**  255 TIMES.
         IC    15,IEC2&X+16 GET RETRY COUNT FOR TEST          @ZA59479
         LA    14,6          GET RELATIVE MAX RETRY COUNT     @ZA59479
         CLR   15,14         IS RETRY AT MAX COUNT? IF NO,    @ZA59479
         BE    IEC5&X       SET RC=X'0C'
         LA    15,1(15)     ELSE ADD ONE TO RETRY COUNT
         ST    15,IEC2&X+16 SAVE UPDATED COUNT                @ZA59479
         B     IECM&X       RE-ISSUE IOHALT                   @ZA59479
IEC4&X   LA    15,1(15)      ADD ONE TO RETRY COUNT           @ZA59479
         ST    15,IEC2&X+12 SAVE UPDATED COUNT                @ZA59479
         B     IECM&X        RE-ISSUE IOHALT
.*
.*        THIS STATEMENT DELETED BY APAR OZ37047            CC @ZA37047
IECF&X   EQU   *                                                   000D
.*
.*
.ANSR    ANOP                                                      000A
.*
.*
         L     15,16(1)       LOAD ADDRESS OF FIRST CCW.
         CLI   0(15),X'2F'    IS THE CCW A DISABLE COMMAND?        000A
         BNE   IECG&X         IF NOT, BRANCH.                      000A
         TM    4(15),X'40'    IS THE CCW COMMAND CHAINED?          000A
         BNO   IEC0&X         IF NOT, EXIT WITH RC=X'10'       @ZA04199
         LA    15,8(15)       LOAD ADDRESS OF NEXT CCW.            000A
         CLI   0(15),X'08'         IS IT A TIC?                 YA02058
         BNE   IECG&X              NO, BRANCH                   YA02058
         L     15,0(15)            GET NEXT CCW ADDRESS         YA02058
         LA    15,0(15)            CLEAR HI ORDER BYTE          YA02058
IECG&X   CLI   0(15),X'27'        IS THE CCW AN ENABLE COMMAND     000B
         BE    IECN&X                                              000B
         CLI   0(15),X'06'        IS THE CCW A PREPARE COMMAND     000B
         BNE   IEC1&X             IF NOT, EXIT                 @ZA17733
         CLI   13(15),X'0B'       IS THE NEXT CCW READ INQUIRY     000B
         BE    IECP&X                                              000B
         CLI   13(15),X'8B'            IS IT READ INQUIRY          3128
         BE    IECP&X                                              3128
         B     IECI&X                                              000H
.*
IECN&X   CLI   13(15),X'0B'       IS THE NEXT CCW READ INQUIRY     000B
         BE    IECP&X                                              000B
         CLI   13(15),X'8B'            IS IT READ INQUIRY          3128
         BE    IECP&X                                   Y          3128
         CLI   13(15),X'07'            IS NEXT CCW READ ID ENQ?  A43785
         BE    IECP&X                  GO TO ISSUE HIO           A43785
         CLI   21(15),X'07'                                       M2860
         BE    IECP&X                                             M2860
         CLI   21(15),X'87'   READ ID ENQ CCW WITH             @ZA04659
*                              LAST CCW FLAG ON                @ZA04659
         BE    IECP&X          YES, ISSUE HALT IO              @ZA04659
         TM    4(15),X'40'              IS CCW COMMAND CHAIN     A30763
         BNO   IECP&X                   NO, ISSUE HIO            A30763
IECH&X   LA    15,8(15)       LOAD ADDRESS OF NEXT CCW.            000H
         CLI   0(15),X'06'              IS THIS CCW PREP?          000H
         BE    IECI&X                                              000H
IEC1&X   EQU   *                                               @ZA17733
         TM    4(15),X'40'              IS THE CCW COMMAND CHAINED? 00H
         BO    IECH&X         TRY NEXT CCW                     @ZA31078
         CLI   IECK&X+1,X'0B' WRITE RESET MONITOR ?            @ZA31078
         BE    IECQ&X         SET RETURN CODE TO X'04'         @ZA31078
         B     IEC0&X         SET RETURN CODE TO X'10'         @ZA31078
IEC0&X   LA    15,16          SET RETURN CODE = X'10'          @ZA04199
         B     IECB&X                   EXIT                   @ZA04199
.*       2 LINES DELETED FOR THE FOLLOWING APAR                 YA03232
IECI&X   CLI   8(15),X'0A'    IS NEXT CCW INHIBIT?              YA03232
         AIF   ('&SPEC' EQ 'HIO2740').HAL2740                   YA02146
         AIF   (T'&SPEC EQ 'O').NO2740                          YA02146
         MNOTE * '***          SPEC &SPEC NOT RECOGNIZED.'      YA02146
         AGO   .NO2740                                          YA02146
.HAL2740 ANOP                                                   YA02146
         BE    IECP&X                   YES, DO THE HIO         YA02146
         CLI   13(15),X'11'              READ DATA?            @ZA00503
         BE    IECP&X                   YES, DO THE HIO         YA02146
         CLI   13(15),X'91'             LAST A READ DATA?       YA02146
         BE    IECP&X                   YES, DO THE HIO         YA03242
*        THE ABOVE GENERATED CODE WILL CAUSE A HALT I/O TO      YA02146
*        BE INDISCRIMINENTLY ISSUED TO A 2740                   YA02146
         AGO   .YES2740                                         YA02146
.NO2740  ANOP                                                   YA02146
         BE    IECP&X                   YES, DO THE HIO         YA03232
.YES2740 ANOP                                                   YA02146
.*       3 LINES DELETED FOR THE FOLLOWING APAR                 YA03232
         CLI   13(15),X'0B'        CCW READ RESPONSE?           YA03232
         BE    IECP&X              YES, HALT I/O                 S99245
         CLI   13(15),X'8B'        LAST CCW READ RESPONSE?      YA03232
         BNE   IECE&X              NO, SET RETURN CODE           S99245
.*
.END     ANOP                                                    A28606
IECP&X   SR    15,15                                               000B
***      PREPARE FOR REISSUE OF IOHALT IF RC=4 AND IOBBUSY     @ZA65419
         ST    15,IEC2&X+12   INIT *COUNTER TO ZEROES          @ZA65419
         ST    15,IEC2&X+16   INIT *COUNTER TO ZEROES          @ZA65419
         ST    1,IEC2&X+8     SAVE *IOBADDR                    @ZA59479
***      *COUNTER AND *IOBADDR ARE INITIALIZED                 @ZA59479
         IC    15,32(1)       GET EXTENT NUMBER.
         SLL   15,2           MULTIPLY EXTENT NUMBER BY 4.
         L     14,44(14)      GET DEB ADDRESS.
         L     1,32(14,15)    LOAD UCB ADDRESS INTO PARAMTER REG.
         LA    1,0(1)         CLEAR HI-ORDER BYTE             @ZA45123
         STM   0,1,IEC2&X    SAVE R0 AND R1                   @ZA65419
IEC6&X   IOHALT (1)            ISSUE IOHALT                   @ZA65419
         LA    14,4           LOAD X'04' FOR COMPARE          @ZA65419
         CLR   15,14          RETURN CODE = X'04' ? IF NO,    @ZA65419
         BNE   IEC7&X        TEST IOHALT RC=X'10'             @ZA65419
         L     14,IEC2&X+8   ELSE, GET *IOBADDR               @ZA65419
         TM    28(14),X'40'   IS IOBBUSY ON?                  @ZA65419
         BNO   IECE&X        IOHALT DONE; EXIT WITH RC=0      @ZA65419
***      IF IOHALT RC=04 AND THE IOB IS BUSY, RESETPL TRIES   @ZA65419
***      TO AVOID PASSING A RESETPL RETURN CODE OF X'00'.     @ZA65419
***      IT WILL REISSUE IOHALT AND TEST FOR IOBBUSY FOR      @ZA65419
***      A MAXIMUM OF 7 TIMES BEFORE PASSING RC OF X'0C'.     @ZA65419
         IC    15,IEC2&X+12 GET RETRY COUNT FOR TEST          @ZA65419
         LA    14,6          GET RELATIVE MAX RETRY COUNT     @ZA65419
         CLR   15,14         IS RETRY AT MAX COUNT? IF NO,    @ZA65419
         BNH   IEC8&X       INCREMENT COUNTER AND RE-IOHALT   @ZA65419
         B     IECJ&X       AND EXIT.                         @ZA65419
IEC7&X   LA    14,16       LOAD X'10' INTO REG FOR COMPARES   @ZA65419
         CLR   15,14          RETURN CODE = X'10'             @ZA65419
         BL    IECB&X        EXIT WITH IOHALT RETURN CODE     @ZA65419
         BE    IECE&X        EXIT WITH 0 RETURN CODE          @ZA65419
         LA    14,24          LOAD X'18' FOR COMPARE          @ZA65419
         CLR   15,14          IS RETURN CODE X'18'            @ZA65419
         BE    IECE&X        YES, EXIT WITH 0 RTN CODE        @ZA65419
         LA    14,20          LOAD X'14' INTO REG FOR COMPARES
         CLR   15,14          RETURN CODE = X'14'
         LM    0,1,IEC2&X    RESTORE R0 AND R1                @ZA65419
         BNE   IECJ&X        IF NOT X'14' SET RC=X'0C'
**  IF THE RETURN CODE = X'14', REISSUE SVC 33 FOR MAXIMUM OF
**  255 TIMES.
         IC    15,IEC2&X+16 GET RETRY COUNT FOR TEST          @ZA65419
         LA    14,6          GET RELATIVE MAX RETRY COUNT     @ZA65419
         CLR   15,14         IS RETRY AT MAX COUNT? IF NO,    @ZA65419
         BE    IECJ&X       SET RC=X'0C'
         LA    15,1(15)     ELSE ADD ONE TO RETRY COUNT
         ST    15,IEC2&X+16 SAVE UPDATED COUNT                @ZA65419
         B     IEC6&X       RE-ISSUE IOHALT                   @ZA65419
IEC8&X   LA    15,1(15)      ADD ONE TO RETRY COUNT
         ST    15,IEC2&X+12 SAVE UPDATED COUNT                @ZA65419
         B     IEC6&X       RE-ISSUE IOHALT
**   PSEUDO LABELS USED IN COMMENTS                           @ZA65419
IEC2&X   DC    5F'0'         CREATE SAVE AREA
*REG0    DC    F'0'          REGISTER 0
*REG1    DC    F'0'          REGISTER 1
*IOBADDR DC    F'0'          IEC2&X+8 EQU *IOBADDR
*COUNTER DC    F'0'          IEC2&X+12 EQU *COUNTER
*CNTER1  DC    F'0'          IEC2&X+16 EQU *COUNTER1
.*
IECY&X   EQU   *
         CLI   0(15),X'27'   STILL ENABLE?
         BE    IECP&X        YES, RESET
         B     IECE&X         RETURN
.*
.ANREND  ANOP
IECK&X   DC    H'0'           SAVE AREA FOR WTTA
IECL&X   DC    X'0080'        FLAG FOR SVC 33
*
IECQ&X   LA    15,4           SET RETURN CODE 4                @ZA15411
         B     IECB&X         AND EXIT                         @ZA15411
*
IECE&X   SR    15,15                                            YA02053
IECB&X   EQU   *
         MEXIT                                                     000D
.*
.ER      MNOTE 12,'***  IHB078  DECB OPERAND REGISTER NOTATION INVALID-X
               &DECB'
         MEXIT
.ANR     ANOP
         L     15,44(14)           GET ADDR OF DEB
         LA    15,0(15)            CLEAR HIGH-ORDER BYTE
         SLA   0,2                 MULTIPLY RLN BY 4
         AR    15,0                USE RLN*4 AS INDEX
         L     15,28(15)           TO DEBUCBAD-4 AND GET UCB ADDR
         CLI   18(15),X'10'        DEVICE CLASS = GRAPHICS
         BNE   IECO&X              NO, DEVICE IS NOT ANR
         CLI   5(1),X'01'          IS OPERATION READ INITIAL
         BNE   IECX&X              NO, GIVE RC=10 AND EXIT
         TM    0(1),X'40'          IS THE OPERATION COMPLETE
         BO    IECQ&X              YES, GIVE RC=4 AND EXIT
         LR    0,1                 DECB ADDR TO REG 0
.*     ONE LINE DELETED BY THE FOLLOWING PTM:                    YM5699
         LR    1,15                UCB ADDR TO REG 1
         LA    15,4                ROUTING CODE OF 4 IN REG 15
         SVC   116                 INVOKE ESR TO DO RESET
         LR    0,15                LOAD DECB ADDR              @ZA14028
         SRL   0,8                 SHIFT DECB ADDR LO 3 BYTES  @ZA14028
         SLL   15,24               MAKE SURE THAT ONLY      LD @ZA05393
         SRL   15,24               RC IS IN REG 15          LD @ZA00537
         LA    1,4                 ESTABLISH COMPARAND
         CR    15,1                IS RC 0 OR 4
         BH    IECZ&X              NO RETURN WITH R.C.         @ZA14028
         STH   15,IECK&X           SAVE RETURN CODE
*
         L     1,28(14)            GET IOB BASE FROM DCB
         LA    1,88(1)             GET ADDR OF FIRST IOB
         L     14,44(14)           GET DEB ADDR FROM DCB
         SR    0,0
         IC    0,16(14)            GET NO. OF EXTENTS FROM DEB
*                                  AND USE AS LOOP COUNTER
         LA    14,32(14)           GET ADDR OF FIRST DEB UCB PTR
*
IECT&X   OI    1(1),X'01'          SET RESETPL ISSUED FLAG
         TM    28(1),X'01'         RFT IN PROGRESS
         BO    IECW&X              YES, GIVE R.C. = 0          @ZA08056
         L     15,0(14)            GET ADDR OF UCB
         TM    6(15),X'20'         OUTSTANDING I/O OPERATION
         BO    IECU&X              YES, KEEP IOB BUSY
         NI    28(1),X'BF'         TURN OFF IOB BUSY FLAG
*
IECU&X   LA    1,88(1)             STEP TO NEXT IOB
         LA    14,4(14)            STEP TO NEXT UCB PTR
         BCT   0,IECT&X            LOOP IF NOT FINISHED
         LH    15,IECK&X           RESTORE RETURN CODE
         B     IECB&X              EXIT WITH RC
*
IECZ&X   LA    1,16                ESTABLISH COMPARAND         @ZA14028
         CR    15,1                IS RC = 16                  @ZA14028
         BNE   IECB&X              NO - EXIT WITH RC           @ZA14028
         LR    1,0                 LOAD DECB ADDR              @ZA14028
         TM    0(1),X'40'          IS OPERATION COMPLETE       @ZA14028
         BO    IECQ&X              YES - GIVE RC = 4 AND EXIT  @ZA14028
         B     IECB&X              EXIT WITH ORIGINAL RC       @ZA14028
*
IECW&X   XC    IECK&X,IECK&X       SET RC TO ZERO
         B     IECU&X
*               THREE LINES REMOVED BY------------------------>@ZA15411
IECX&X   LA    15,16               SET RETURN CODE OF X'10'
         B     IECB&X              AND EXIT
*
.*
         AIF   ('&TYPE' EQ 'ATTENT').ANRRC8
IECO&X   SRA   0,2                 RESTORE REG 0 (RLN)
         AGO   .NOTANR
.*
.ANRRC8  ANOP
IECO&X   LA    15,8                INVALID DEVICE, SET RC=8
         B     IECB&X              AND EXIT
         AGO   .ANREND
.*
         MEND                                                      000D
./ ADD NAME=VTMWT$   8002-74038-74038-2130-00037-00037-00000-HERC01
//HERC01   JOB (CBT),
//             'Build BSPVTMWT',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             NOTIFY=HERC01
//********************************************************************
//*                                                                  *
//*  Name: CBT.MVS38J.CNTL(VTMWT$)                                   *
//*                                                                  *
//*  Type: Assembly of BSPVTMWT Module                               *
//*                                                                  *
//*  Desc: Wait for specified VTAM ACB to become available           *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IFOX00,PARM='DECK,NOOBJECT,TERM,NOXREF'
//********************************************************************
//* You might have to change the DSNAMES in the next 2 DD statements *
//********************************************************************
//SYSIN    DD  DISP=SHR,DSN=CBT.MVS38J.ASM(BSPVTMWT)
//SYSLIB   DD  DISP=SHR,DSN=CBT.MVS38J.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(1,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DISP=(,PASS),UNIT=VIO,SPACE=(CYL,(1,1))
//LINK    EXEC PGM=IEWL,
//             COND=(0,NE),
//             PARM='LIST,LET,MAP,AC=1,SIZE=(140K,6400)'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(50,20))
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB(BSPVTMWT) <<=== CHANGE!
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSPUNCH
./ ADD NAME=VTMWT#   8002-74038-74038-1351-00008-00005-00000-HERC01
//TSO     PROC MEM=00
//********************************************************************
//* THIS IS ONLY NEEDED IF YOU DO NOT USE THE AUTOPILOT FUNCTIONS    *
//********************************************************************
//WAITTSO EXEC PGM=BSPVTMWT,PARM='TXX'
//TSO     EXEC PGM=IKTCAS00,TIME=1440,COND=(4,LT,WAITTSO)
//PARMLIB  DD  DISP=SHR,DSN=SYS1.PARMLIB(TSOKEY&MEM),FREE=CLOSE
//PRINTOUT DD  SYSOUT=A,DCB=(LRECL=133,RECFM=FBB)
./ ADD NAME=VTMWT@   8001-74038-74038-1345-00009-00098-00000-HERC01

 This routine waits for a VTAM ACB to become available.  The ACB
 name to be waited for is specified in the PARM keyword of the
 JCL EXEC Card

 This module can be used to start a VTAM application only if its
 related ACB is available

 A sample JCL (for TSO) can be found in member VTMWT#
