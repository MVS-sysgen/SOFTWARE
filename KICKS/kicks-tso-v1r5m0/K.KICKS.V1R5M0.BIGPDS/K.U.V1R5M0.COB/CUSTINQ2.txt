       IDENTIFICATION DIVISION.

       PROGRAM-ID.  CUSTINQ2.

       ENVIRONMENT DIVISION.

       DATA DIVISION.

       WORKING-STORAGE SECTION.

       01  SWITCHES.

           05  VALID-DATA-SW               PIC X(01)  VALUE 'Y'.
               88  VALID-DATA                         VALUE 'Y'.
           05  CUSTOMER-FOUND-SW           PIC X(01)  VALUE 'Y'.
               88  CUSTOMER-FOUND                     VALUE 'Y'.

       01  FLAGS.

           05  DISPLAY-FLAG                PIC X(01).
               88  DISPLAY-NEW-CUSTOMER               VALUE '1'.
               88  DISPLAY-SPACES                     VALUE '2'.
               88  DISPLAY-LOW-VALUES                 VALUE '3'.
           05  SEND-FLAG                   PIC X(01).
               88  SEND-ERASE                         VALUE '1'.
               88  SEND-DATAONLY                      VALUE '2'.
               88  SEND-DATAONLY-ALARM                VALUE '3'.

       01  COMMUNICATION-AREA.

           05  CA-CUSTOMER-NUMBER          PIC X(06).

       01  RESPONSE-CODE                   PIC S9(08) COMP.

       COPY CUSTMAS.

       COPY INQSET2.

       COPY KIKAID.

       COPY ERRPARM.

       LINKAGE SECTION.

       01  KIKCOMMAREA                     PIC X(06).

       PROCEDURE DIVISION.

       0000-PROCESS-CUSTOMER-INQUIRY.

           IF EIBCALEN > ZERO
               MOVE KIKCOMMAREA TO COMMUNICATION-AREA.

      *    EVALUATE TRUE

      *        WHEN EIBCALEN = ZERO
               IF EIBCALEN = ZERO
                   MOVE LOW-VALUE TO CA-CUSTOMER-NUMBER
                   MOVE LOW-VALUE TO INQMAP2O
      *            SET SEND-ERASE TO TRUE
                   MOVE '1' TO SEND-FLAG
                   PERFORM 1500-SEND-INQUIRY-MAP

      *        WHEN EIBAID = KIKCLEAR
               ELSE
               IF EIBAID = KIKCLEAR
                   MOVE LOW-VALUE TO CA-CUSTOMER-NUMBER
                   MOVE LOW-VALUE TO INQMAP2O
      *            SET SEND-ERASE TO TRUE
                   MOVE '1' TO SEND-FLAG
                   PERFORM 1500-SEND-INQUIRY-MAP

      *        WHEN EIBAID = DFHPA1 OR DFHPA2 OR DFHPA3
      *           CONTINUE -- let these fall into 'other'...

      *        WHEN EIBAID = KIKPF3 OR KIKPF12
               ELSE
               IF EIBAID = KIKPF3 OR KIKPF12
                   EXEC KICKS
                       XCTL PROGRAM('INVMENU')
                   END-EXEC

      *        WHEN EIBAID = KIKENTER
               ELSE
               IF EIBAID = KIKENTER
                   PERFORM 1000-DISPLAY-SELECTED-CUSTOMER

      *        WHEN EIBAID = KIKPF5
               ELSE
               IF EIBAID = KIKPF5
                   PERFORM 2000-DISPLAY-FIRST-CUSTOMER

      *        WHEN EIBAID = KIKPF6
               ELSE
               IF EIBAID = KIKPF6
                   PERFORM 3000-DISPLAY-LAST-CUSTOMER

      *        WHEN EIBAID = KIKPF7
               ELSE
               IF EIBAID = KIKPF7
                   PERFORM 4000-DISPLAY-PREV-CUSTOMER

      *        WHEN EIBAID = KIKPF8
               ELSE
               IF EIBAID = KIKPF8
                   PERFORM 5000-DISPLAY-NEXT-CUSTOMER

      *        WHEN OTHER
               ELSE
                   MOVE LOW-VALUE TO INQMAP2O
                   MOVE 'Invalid key pressed.' TO MESSAGEO
      *            SET SEND-DATAONLY-ALARM TO TRUE
                   MOVE '3' TO SEND-FLAG
                   PERFORM 1500-SEND-INQUIRY-MAP.

      *    END-EVALUATE.

           EXEC KICKS
               RETURN TRANSID('INQ2')
                      COMMAREA(COMMUNICATION-AREA)
           END-EXEC.

       1000-DISPLAY-SELECTED-CUSTOMER.

           PERFORM 1100-RECEIVE-INQUIRY-MAP.
           PERFORM 1200-EDIT-CUSTOMER-NUMBER.
           IF VALID-DATA
               PERFORM 1300-READ-CUSTOMER-RECORD
               PERFORM XXXX-UNNESTED-1
           ELSE
      *        SET DISPLAY-LOW-VALUES TO TRUE
               MOVE '3' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       1100-RECEIVE-INQUIRY-MAP.

           EXEC KICKS
               RECEIVE MAP('INQMAP2')
                       MAPSET('INQSET2')
                       INTO(INQMAP2I)
           END-EXEC.

      *    INSPECT INQMAP2I
           EXAMINE INQMAP2I
               REPLACING ALL '_' BY SPACE.

       1200-EDIT-CUSTOMER-NUMBER.

           IF       CUSTNOL = ZERO
                 OR CUSTNOI = SPACE
               MOVE 'N' TO VALID-DATA-SW
               MOVE 'You must enter a customer number.' TO MESSAGEO.

       1300-READ-CUSTOMER-RECORD.

           EXEC KICKS
               READ FILE('CUSTMAS')
                    INTO(CUSTOMER-MASTER-RECORD)
                    RIDFLD(CUSTNOI)
                    RESP(RESPONSE-CODE)
           END-EXEC.

           IF RESPONSE-CODE = KIKRESP(NOTFND)
               MOVE 'N' TO CUSTOMER-FOUND-SW
               MOVE 'That customer does not exist.' TO MESSAGEO
           ELSE
               PERFORM XXXX-UNNESTED-2.

       1400-DISPLAY-INQUIRY-RESULTS.

           IF DISPLAY-NEW-CUSTOMER
               MOVE CM-CUSTOMER-NUMBER TO CUSTNOO
               MOVE CM-LAST-NAME       TO LNAMEO
               MOVE CM-FIRST-NAME      TO FNAMEO
               MOVE CM-ADDRESS         TO ADDRO
               MOVE CM-CITY            TO CITYO
               MOVE CM-STATE           TO STATEO
               MOVE CM-ZIP-CODE        TO ZIPCODEO
               MOVE SPACE              TO MESSAGEO
      *        SET SEND-DATAONLY       TO TRUE
               MOVE '2' TO SEND-FLAG
           ELSE
               PERFORM XXXX-UNNESTED-3.

           PERFORM 1500-SEND-INQUIRY-MAP.

       1500-SEND-INQUIRY-MAP.

           MOVE 'INQ2' TO TRANIDO.

      *    EVALUATE TRUE
      *        WHEN SEND-ERASE
               IF SEND-ERASE
                   EXEC KICKS
                       SEND MAP('INQMAP2')
                            MAPSET('INQSET2')
                            FROM(INQMAP2O)
                            ERASE
                   END-EXEC
      *        WHEN SEND-DATAONLY
               ELSE
               IF SEND-DATAONLY
                   EXEC KICKS
                       SEND MAP('INQMAP2')
                            MAPSET('INQSET2')
                            FROM(INQMAP2O)
                            DATAONLY
                   END-EXEC
      *        WHEN SEND-DATAONLY-ALARM
               ELSE
               IF SEND-DATAONLY-ALARM
                   EXEC KICKS
                       SEND MAP('INQMAP2')
                            MAPSET('INQSET2')
                            FROM(INQMAP2O)
                            DATAONLY
                            ALARM
                   END-EXEC.
      *    END-EVALUATE.

       2000-DISPLAY-FIRST-CUSTOMER.

           MOVE LOW-VALUE TO CM-CUSTOMER-NUMBER
                             INQMAP2O.
           PERFORM 2100-START-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
               PERFORM 2200-READ-NEXT-CUSTOMER.
           PERFORM 2300-END-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
      *        SET DISPLAY-NEW-CUSTOMER TO TRUE
               MOVE '1' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS
               MOVE CM-CUSTOMER-NUMBER TO CA-CUSTOMER-NUMBER
           ELSE
      *        SET DISPLAY-SPACES TO TRUE
               MOVE '2' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       2100-START-CUSTOMER-BROWSE.

           EXEC KICKS
               STARTBR FILE('CUSTMAS')
                       RIDFLD(CM-CUSTOMER-NUMBER)
                       RESP(RESPONSE-CODE)
           END-EXEC.

           IF RESPONSE-CODE = KIKRESP(NORMAL)
               MOVE 'Y' TO CUSTOMER-FOUND-SW
               MOVE SPACE TO MESSAGEO
           ELSE
               PERFORM XXXX-UNNESTED-4.

       2200-READ-NEXT-CUSTOMER.

           EXEC KICKS
               READNEXT FILE('CUSTMAS')
                        INTO(CUSTOMER-MASTER-RECORD)
                        RIDFLD(CM-CUSTOMER-NUMBER)
                        RESP(RESPONSE-CODE)
           END-EXEC.

      *    EVALUATE RESPONSE-CODE
      *        WHEN KIKRESP(NORMAL)
               IF RESPONSE-CODE EQUAL KIKRESP(NORMAL)
                   MOVE 'Y' TO CUSTOMER-FOUND-SW
      *        WHEN KIKRESP(ENDFILE)
               ELSE
               IF RESPONSE-CODE EQUAL KIKRESP(ENDFILE)
                   MOVE 'N' TO CUSTOMER-FOUND-SW
                   MOVE 'There are no more records in the file.'
                       TO MESSAGEO
      *        WHEN OTHER
               ELSE
                   PERFORM 9999-TERMINATE-PROGRAM.
      *    END-EVALUATE.

       2300-END-CUSTOMER-BROWSE.

           EXEC KICKS
               ENDBR FILE('CUSTMAS')
                     RESP(RESPONSE-CODE)
           END-EXEC.

      *    IF RESPONSE-CODE NOT = DFHRESP(NORMAL)
      *        PERFORM 9999-TERMINATE-PROGRAM
      *    END-IF.

       3000-DISPLAY-LAST-CUSTOMER.

           MOVE HIGH-VALUE TO CM-CUSTOMER-NUMBER.
           MOVE LOW-VALUE  TO INQMAP2O.
           PERFORM 2100-START-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
               PERFORM 3100-READ-PREV-CUSTOMER.
           PERFORM 2300-END-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
      *        SET DISPLAY-NEW-CUSTOMER TO TRUE
               MOVE '1' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS
               MOVE CM-CUSTOMER-NUMBER TO CA-CUSTOMER-NUMBER
           ELSE
      *        SET DISPLAY-SPACES TO TRUE
               MOVE '2' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       3100-READ-PREV-CUSTOMER.

           EXEC KICKS
               READPREV FILE('CUSTMAS')
                        INTO(CUSTOMER-MASTER-RECORD)
                        RIDFLD(CM-CUSTOMER-NUMBER)
                        RESP(RESPONSE-CODE)
           END-EXEC.

      *    EVALUATE RESPONSE-CODE
      *        WHEN KIKRESP(NORMAL)
               IF RESPONSE-CODE EQUAL KIKRESP(NORMAL)
                   MOVE 'Y' TO CUSTOMER-FOUND-SW
      *        WHEN KIKRESP(ENDFILE)
               ELSE
               IF RESPONSE-CODE EQUAL KIKRESP(ENDFILE)
                   MOVE 'N' TO CUSTOMER-FOUND-SW
                   MOVE 'There are no more records in the file.'
                       TO MESSAGEO
      *        WHEN OTHER
               ELSE
                   PERFORM 9999-TERMINATE-PROGRAM.
      *    END-EVALUATE.

       4000-DISPLAY-PREV-CUSTOMER.

           MOVE CA-CUSTOMER-NUMBER TO CM-CUSTOMER-NUMBER.
           MOVE LOW-VALUE          TO INQMAP2O.
           PERFORM 2100-START-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
               PERFORM 2200-READ-NEXT-CUSTOMER
               PERFORM 3100-READ-PREV-CUSTOMER
               PERFORM 3100-READ-PREV-CUSTOMER.
           PERFORM 2300-END-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
      *        SET DISPLAY-NEW-CUSTOMER TO TRUE
               MOVE '1' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS
               MOVE CM-CUSTOMER-NUMBER TO CA-CUSTOMER-NUMBER
           ELSE
      *        SET DISPLAY-LOW-VALUES TO TRUE
               MOVE '3' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       5000-DISPLAY-NEXT-CUSTOMER.

           MOVE CA-CUSTOMER-NUMBER TO CM-CUSTOMER-NUMBER.
           MOVE LOW-VALUE          TO INQMAP2O.
           PERFORM 2100-START-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
               PERFORM 2200-READ-NEXT-CUSTOMER
               PERFORM 2200-READ-NEXT-CUSTOMER.
           PERFORM 2300-END-CUSTOMER-BROWSE.
           IF CUSTOMER-FOUND
      *        SET DISPLAY-NEW-CUSTOMER TO TRUE
               MOVE '1' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS
               MOVE CM-CUSTOMER-NUMBER TO CA-CUSTOMER-NUMBER
           ELSE
      *        SET DISPLAY-LOW-VALUES TO TRUE
               MOVE '3' TO DISPLAY-FLAG
               PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       9999-TERMINATE-PROGRAM.

           MOVE EIBRESP  TO ERR-RESP.
           MOVE EIBRESP2 TO ERR-RESP2.
           MOVE EIBTRNID TO ERR-TRNID.
           MOVE EIBRSRCE TO ERR-RSRCE.

           EXEC KICKS
               XCTL PROGRAM('SYSERR')
                    COMMAREA(ERROR-PARAMETERS)
                    LENGTH(20)
           END-EXEC.

       XXXX-UNNESTED SECTION.

       XXXX-UNNESTED-1.
               IF CUSTOMER-FOUND
      *            SET DISPLAY-NEW-CUSTOMER TO TRUE
                   MOVE '1' TO DISPLAY-FLAG
                   PERFORM 1400-DISPLAY-INQUIRY-RESULTS
                   MOVE CM-CUSTOMER-NUMBER TO CA-CUSTOMER-NUMBER
               ELSE
      *            SET DISPLAY-SPACES TO TRUE
                   MOVE '2' TO DISPLAY-FLAG
                   PERFORM 1400-DISPLAY-INQUIRY-RESULTS.

       XXXX-UNNESTED-2.
               IF RESPONSE-CODE NOT = KIKRESP(NORMAL)
                   PERFORM 9999-TERMINATE-PROGRAM.

       XXXX-UNNESTED-3.
               IF DISPLAY-SPACES
                   MOVE LOW-VALUE TO CUSTNOO
                   MOVE SPACE     TO LNAMEO
                                     FNAMEO
                                     ADDRO
                                     CITYO
                                     STATEO
                                     ZIPCODEO
      *            SET SEND-DATAONLY-ALARM TO TRUE
                   MOVE '3' TO SEND-FLAG
               ELSE
                   PERFORM XXXX-UNNESTED-5.

       XXXX-UNNESTED-4.
               IF RESPONSE-CODE = KIKRESP(NOTFND)
                   MOVE 'N' TO CUSTOMER-FOUND-SW
                   MOVE 'There are no customers in the file.'
                       TO MESSAGEO
               ELSE
                   PERFORM 9999-TERMINATE-PROGRAM.

       XXXX-UNNESTED-5.
                   IF DISPLAY-LOW-VALUES
      *                SET SEND-DATAONLY-ALARM TO TRUE
                       MOVE '3' TO SEND-FLAG.
