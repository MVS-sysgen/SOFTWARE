PROC 0 SIP(1$) SIT(1$) VER(V1R5M0) +
       KIKID(HERC01) TSOID() +
       TRCFLAGS() TRCNUM() FFREEKB() ICVR() QUIET() CRLP() OPID() +
       NATLANG() PLTPI() PLTSD() PCT() PPT() FCT() DCT() +
       KCP() PCP() FCP() DCP() SCP() TSP() BMS() TCP(1$)
 /* */
 /* IS KICKS STARTUP ALLOWED?                                   */
 /* */
 CONTROL NOMSG NOFLUSH
 FREE FI(X1)
 ALLOC FILE(X1) DSN('&KIKID..S.&VER..SKIKLOAD') SHR
 IF &LASTCC = 0 THEN FREE FI(X1)
 ELSE +
    DO
      CONTROL MSG FLUSH
      WRITE SORRY, KICKS STARTUP NOT CURRENTLY ALLOWED...
      EXIT
    END
 /* */
 /* USE USERID FOR TSOID UNLESS OVERRIDDEN                      */
 /* */
 IF &LENGTH(&TSOID) = 0 THEN SET &TSOID = &SYSUID
 /* */
 /* CREATE THE USERID QUALIFIED FILES IF THEY DON'T EXIST YET   */
 /* */
 ALLOC FILE(X1) DSN('&TSOID..U.&VER..SKIKLOAD') SHR
 IF &LASTCC = 0 THEN FREE FI(X1)
 ELSE +
    DO
      FREE AT(RECFMU)
      CONTROL MSG FLUSH
      ATTRIB RECFMU DSORG(PO) RECFM(U) BLKSIZE(6140)
      ALLOC FILE(X1) DSN('&TSOID..U.&VER..SKIKLOAD') +
         USING(RECFMU) SPACE (90,90) TRACKS DIR(20) +
         UNIT(SYSDA) NEW CATALOG
      FREE AT(RECFMU)
      FREE FI(X1)
      CONTROL NOMSG NOFLUSH
    END
 ALLOC FILE(X1) DSN('&TSOID..U.&VER..KIKRPL') SHR
 IF &LASTCC = 0 THEN FREE FI(X1)
 ELSE +
    DO
      FREE AT(RECFMU)
      CONTROL MSG FLUSH
      ATTRIB RECFMU DSORG(PO) RECFM(U) BLKSIZE(6140)
      ALLOC FILE(X1) DSN('&TSOID..U.&VER..KIKRPL') +
         USING(RECFMU) SPACE (90,90) TRACKS DIR(20) +
         UNIT(SYSDA) NEW CATALOG
      FREE AT(RECFMU)
      FREE FI(X1)
      CONTROL NOMSG NOFLUSH
    END
 ALLOC FILE(X1) DSN('&TSOID..U.&VER..COBCOPY') SHR
 IF &LASTCC = 0 THEN FREE FI(X1)
 ELSE +
    DO
      FREE AT(RECFMF)
      CONTROL MSG FLUSH
      ATTRIB RECFMF DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(3120)
      ALLOC FILE(X1) DSN('&TSOID..U.&VER..COBCOPY') +
         USING(RECFMF) SPACE (90,90) TRACKS DIR(20) +
         UNIT(SYSDA) NEW CATALOG
      FREE AT(RECFMF)
      FREE FI(X1)
      CONTROL NOMSG NOFLUSH
    END
 ALLOC FILE(X1) DSN('&TSOID..U.&VER..GCCCOPY') SHR
 IF &LASTCC = 0 THEN FREE FI(X1)
 ELSE +
    DO
      FREE AT(RECFMV)
      CONTROL MSG FLUSH
      ATTRIB RECFMV DSORG(PO) RECFM(V B) LRECL(80) BLKSIZE(3120)
      ALLOC FILE(X1) DSN('&TSOID..U.&VER..GCCCOPY') +
         USING(RECFMV) SPACE (90,90) TRACKS DIR(20) +
         UNIT(SYSDA) NEW CATALOG
      FREE AT(RECFMV)
      FREE FI(X1)
      CONTROL NOMSG NOFLUSH
    END
 /* */
 /* FREE KICKS SYSTEM FILES                                     */
 /* */
 /* SKIKLOAD IS FOR A PDS CONTAINING KICKS SYSTEM PGMS/TABLES   */
 FREE  FI(SKIKLOAD)
 /* KIKRPL   IS THE KICKS SYSTEM PDS FOR THE RPL CONCATENATION  */
 FREE  FI(KIKRPL)
 /* KIKINTRA IS THE KICKS INTRAPARTITION TRANSIENT DATA QUEUE   */
 FREE  FI(KIKINTRA)
 /* KIKTEMP  IS THE KICKS TEMPORARY STORAGE QUEUES              */
 FREE  FI(KIKTEMP)
 /* KSDB IS USED BY KEDF TO DISPLAY API CALL IN SOURCE CODE     */
 FREE  FI(KSDB)
 /* LICENSE  IS THE KICKS SYSTEM DOC PDS                        */
 FREE  FI(LICENSE)
 /* SYSIN    IS USED FOR SIT OVERRIDES                          */
 FREE  FI(SYSIN)
 /* SYSTERM  IS ALLOC TO TERMINAL FOR TSO COMMAND OUTPUT        */
 FREE  FI(SYSTERM)
 /* SYSPRINT IS ALLOC TO TERMINAL FOR KICKS LINE MODE OUTPUT    */
 FREE  FI(SYSPRINT)
 /* SYSI     IS ALLOC TO DUMMY for the SYSI queue               */
 FREE  FI(SYSI)
 /* SYSO     IS ALLOC TO SYSOUT(?) FOR the SYSO queue           */
 FREE  FI(SYSO)
 /* SYSOUT   IS ALLOC TO SYSOUT(?) FOR COBOL DEBUGGING OUTPUT   */
 FREE  FI(SYSOUT)
 /* CEEOUT   IS ALLOC TO SYSOUT(?) FOR LE MESSAGES              */
 FREE  FI(CEEOUT)
 /* SYSUDUMP IS ALLOC TO SYSOUT(?) FOR ABEND DUMP               */
 FREE  FI(SYSUDUMP)
 /* TRANDUMP IS ALLOC TO SYSOUT(?) FOR KICKS TRANACTION DUMPS   */
 FREE  FI(TRANDUMP)
 /* AUXTRT, RECFMF, RECFM2 AREN'T FILES BUT ATTRIBUTE LISTS...  */
 FREE  AT(AUXTAT)
 FREE  AT(RECFMF)
 FREE  AT(RECFM2)
 /* AUXTRC   IS ALLOC TO SYSOUT(?) FOR KICKS EXTERNAL TRACE     */
 FREE  FI(AUXTRC)
 IF &CRLP NE USE THEN DO
   /* CRLPIN   INPUT FOR CARD READER / LINE PRINTER TERMINAL    */
   FREE  FI(CRLPIN)
   /* CRLPOUT OUTPUT FOR CARD READER / LINE PRINTER TERMINAL    */
   FREE  FI(CRLPOUT)
 END
 /* */
 /* USER FILES                                                  */
 /* */
 /* 'TAC' KICKS EXAMPLE SYSTEM                                  */
 /* */
 FREE  FI(TACDATA)
 /* */
 /* 'MURACH' KICKS EXAMPLE SYSTEM                               */
 /* */
 FREE  FI(CUSTMAS)
 FREE  FI(INVCTL)
 FREE  FI(INVOICE)
 FREE  FI(INVPATH)
 FREE  FI(PRODUCT)
 /* */
 DELETE KICKS.AUXTRC
 /* */
 CONTROL MSG FLUSH
 ALLOC FILE(SKIKLOAD) DSN('&TSOID..U.&VER..SKIKLOAD' +
                          '&KIKID..U.&VER..SKIKLOAD' +
                          '&KIKID..S.&VER..SKIKLOAD' +
                               ) SHR BLKSIZE(32760)
 ALLOC FILE(KIKRPL)   DSN('&TSOID..U.&VER..KIKRPL' +
                          '&KIKID..U.&VER..KIKRPL' +
                          '&KIKID..S.&VER..KIKRPL' +
                               ) SHR BLKSIZE(32760)
 ALLOC FILE(LICENSE)  DSN('&KIKID..S.&VER..DOC(LICENSE)') SHR
 CONTROL NOMSG NOFLUSH
 ALLOC FILE(KIKTEMP)  DSN('&KIKID..S.&VER..KIKTEMP')             SHR
 ALLOC FILE(KIKINTRA) DSN('&KIKID..S.&VER..KIKINTRA')            SHR
 ALLOC FILE(KSDB)     DSN('&KIKID..U.&VER..SDB')                 SHR
 ALLOC FI(SYSIN) DSN('&TSOID..U.&VER..OPIDS(&SYSUID)')           SHR
 IF &LASTCC NE 0 THEN DO
   FREE FI(SYSIN)
   ALLOC FI(SYSIN) BLKSIZE(80) DUMMY
   GOTO ERRDONE2
  END
 ELSE DO /* MAKE SURE MEMBER EXISTS */
 /* FOLLOWING UGLINESS (THRU ERRDONE2) IS NECESSARY BECAUSE     */
 /* THE ORIGINAL (PLAIN) TK3 LACKS SUPPORT FOR &SYSDSN.         */
 /* -- ALSO, WHILE THIS WORKS, IT CAN'T SUPPRESS THE 013-18     */
 /* -- ---   CONSOLE MESSAGE WHEN THE MEMBER ISN'T FOUND        */
 /* -- ---   WHEN THIS CLIST IS RUN ON A PLAIN TK3 SYSTEM.      */
 /* -- RECOMMEND EITHER (1) CREATE MEMBERS FOR ALL, OR          */
 /* -- --        OR     (2) INSTALL ZP60014                     */
   ERROR GOTO ERRDONE1
   SET FND=&SYSDSN('&TSOID..U.&VER..OPIDS(&SYSUID)')
   IF &FND EQ OK THEN GOTO ERRDONE2
   FREE FI(SYSIN)
   ALLOC FI(SYSIN) BLKSIZE(80) DUMMY
   GOTO ERRDONE2
 ERRDONE1: +
  ERROR DO
    FREE FI(SYSIN)
    ALLOC FI(SYSIN) BLKSIZE(80) DUMMY
    GOTO ERRDONE2
   END
   OPENFILE SYSIN INPUT
   CLOSFILE SYSIN INPUT
  END
 ERRDONE2: +
  ERROR OFF
 CONTROL MSG FLUSH
 /* END OF SYSIN UGLINESS...                                    */
 ATTRIB RECFMF RECFM(F) LRECL(80)  BLKSIZE(80)
 ATTRIB RECFM2 RECFM(F) LRECL(121) BLKSIZE(121)
 IF &LENGTH(&SYSUID) > 0 THEN +
   ALLOC FI(SYSTERM) DA(*) USING(RECFMF)
 ELSE +
   ALLOC FI(SYSTERM) SYSOUT(A) USING(RECFMF)
 IF &LENGTH(&QUIET) = 0 THEN DO
   IF &LENGTH(&SYSUID) > 0 THEN +
     ALLOC FI(SYSPRINT) DA(*) USING(RECFMF)
   ELSE +
     ALLOC FI(SYSPRINT) SYSOUT(A) USING(RECFMF)
   END
  ELSE DO
   ALLOC FI(SYSPRINT) SYSOUT(&QUIET) USING(RECFMF)
  END
 ALLOC FI(SYSOUT) SYSOUT(A) USING(RECFMF)
 ALLOC FI(CEEOUT) SYSOUT(A) USING(RECFM2)
 /* DO NOT ALLOC TRANDUMP IF YOU WANT ITS DUMP LISTINGS */
 /*        'SPUN' TO YOU AS SOON AS THEY ARE DONE.      */
 /* OC FI(TRANDUMP) SYSOUT(A) BLKSIZE(132)              */
 /*                                                     */
 ALLOC FI(SYSUDUMP) SYSOUT(A) BLKSIZE(132)
 /* */
 ATTRIB AUXTAT LRECL(2000) BLKSIZE(2010) RECFM(V B)
 ALLOC FI(AUXTRC) DA(KICKS.AUXTRC) USING(AUXTAT) +
      NEW CATALOG SPACE(90 90) TRACKS RELEASE UNIT(SYSDA)
 IF &CRLP NE USE THEN DO
   IF &LENGTH(&CRLP) > 0 THEN DO
     /* HOPEFULLY IF YOU DO THIS YOU ARE UNDER TSO... */
     ALLOC FI(CRLPIN)  DA(*) USING(RECFMF)
     ALLOC FI(CRLPOUT) DA(*) USING(RECFMF)
   END
 END
 /* */
 CONTROL NOMSG NOFLUSH
 /* */
 ALLOC FI(SYSI) DUMMY       USING(RECFMF)
 ALLOC FI(SYSO) SYSOUT(A)   USING(RECFMF)
 /* */
 /* */
 ALLOC FI(TACDATA) DA('&KIKID..U.TACDATA')            SHR
 /* */
 ALLOC FI(CUSTMAS) DA('&KIKID..U.MURACH.CUSTMAS') SHR
 ALLOC FI(INVCTL)  DA('&KIKID..U.MURACH.INVCTL')      SHR
 ALLOC FI(INVOICE) DA('&KIKID..U.MURACH.INVOICE') SHR
 ALLOC FI(INVPATH) DA('&KIKID..U.MURACH.INVOICE.PATH')      SHR
 ALLOC FI(PRODUCT) DA('&KIKID..U.MURACH.PRODUCT') SHR
 /* */
 CONTROL MSG FLUSH
 /* */
 /* FOLLOWING LONG CALL NEEDS TO BE LEFT JUSTIFIED TO REDUCE
 /*           THE SIZE OF THE PARM AREA SO IT WILL ALL FIT!
 /* */
CALL '&KIKID..S.&VER..SKIKLOAD(KIKSIP&SIP)' 'SIT=&SIT +
PCT=&PCT PPT=&PPT FCT=&FCT DCT=&DCT OPID=&OPID TCP=&TCP +
FCP=&FCP PLTPI=&PLTPI PLTSD=&PLTSD FFREEKB=&FFREEKB +
ICVR=&ICVR TRCFLAGS=&TRCFLAGS TRCNUM=&TRCNUM'
 /* */
 /* 'parm field truncated to 100 characters' message prompted     */
 /* removal of the following... could replace (some) if required. */
 /* KCP=&KCP PCP=&PCP FCP=&FCP DCP=&DCP SCP=&SCP TSP=&TSP         */
 /* BMS=&BMS TCP=&TCP NATLANG=&NATLANG                            */
 /* */
 CONTROL NOMSG NOFLUSH
 /* */
 FREE  FI(TACDATA)
 /* */
 FREE  FI(CUSTMAS)
 FREE  FI(INVCTL)
 FREE  FI(INVOICE)
 FREE  FI(INVPATH)
 FREE  FI(PRODUCT)
 /* */
 FREE  AT(RECFM2)
 FREE  AT(RECFMF)
 FREE  AT(AUXTAT)
 FREE  FI(AUXTRC)
 FREE  FI(SKIKLOAD)
 FREE  FI(KIKRPL)
 FREE  FI(KSDB)
 FREE  FI(KIKINTRA)
 FREE  FI(KIKTEMP)
 FREE  FI(LICENSE)
 FREE  FI(SYSIN)
 FREE  FI(SYSTERM)
 FREE  FI(SYSPRINT)
 FREE  FI(SYSOUT)
 FREE  FI(CEEOUT)
 FREE  FI(SYSI)
 FREE  FI(SYSO)
 FREE  FI(SYSUDUMP)
 FREE  FI(TRANDUMP)
 IF &CRLP NE USE THEN DO
   FREE  FI(CRLPIN)
   FREE  FI(CRLPOUT)
 END
EXIT
