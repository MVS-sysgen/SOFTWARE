//KEBRHELP JOB  CLASS=C,MSGCLASS=A,MSGLEVEL=(1,1)
//*
//ASM      EXEC PGM=IFOX00,PARM='DECK,LIST'
//*                 ASMA90             FOR Z/OS
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DUMMY
//SYSPUNCH DD DSN=&&OBJSET,
//         UNIT=SYSDA,SPACE=(80,(200,200)),
//         DISP=(,PASS)
//SYSGO    DD DDNAME=SYSLIN
//SYSIN    DD *
*/////////////////////////////////////////////////////////////////////
*//   KICKS is an enhancement for TSO that lets you run your CICS
*//   applications directly in TSO instead of having to 'install'
*//   those apps in CICS.
*//   You don't even need CICS itself installed on your machine!
*//
*//   KICKS for TSO
*//   © Copyright 2008-2014, Michael Noel, All Rights Reserved.
*//
*//   Usage of 'KICKS for TSO' is in all cases subject to license.
*//   See http://www.kicksfortso.com
*//   for most current information regarding licensing options..
*////////1/////////2/////////3/////////4/////////5/////////6/////////7
*
* This is help text for KEBR, loaded at execution time as needed.
*
* generated by kebrhelp.sh at 16:15:58Jul 11, 2013
* hand modified since...
*
KEBRHELP START 0
*
 DC H'60' number of lines of text following
*
 DC   CL78'                                                            +
                                 '
 DC   CL78'      KEBR is a part of the `KICKS for TSO` project         +
                                 '
 DC   CL78'      © Copyright 2008-2014, Michael Noel, All Rights Reserv+
               ed.               '
 DC   CL78'                                                            +
                                 '
 DC   CL78' HELP NAVIGATION: press ENTER or PF3 to exit help; PF7/8 to +
               scroll thru it.   '
 DC   CL78'                                                            +
                                 '
 DC   CL78' The KEBR transaction is used to examine temporary storage a+
               nd transient data '
 DC   CL78' queues. Its usage is similar to IBM`s CEBR transaction. The+
                User`s Guide at  '
 DC   CL78'            www.kicksfortso.com/User`s Guide/Operation.shtml+
               #KEBR             '
 DC   CL78' provides detailed instructions and examples of all its comm+
               ands. Following   '
 DC   CL78' are a few of the notable extensions to CEBR:               +
                                 '
 DC   CL78'                                                            +
                                 '
 DC   CL78' QUIT (aka END, CANCEL, =X) (also PF3, PF12) - all quick way+
               s to exit KEBR.   '
 DC   CL78'                                                            +
                                 '
 DC   CL78' RULER - toggles on/off the display of rulers at the top and+
                bottom of the    '
 DC   CL78' screen to make it easier to determine exactly where somethi+
               ng is.            '
 DC   CL78'                                                            +
                                 '
 DC   CL78' HEX (aka PF2) - like the CEBR command, toggles from charact+
               er to hex display '
 DC   CL78' mode. The difference is KEBR uses a `vertical hex` display +
               like DITTO, so you'
 DC   CL78' see both the character and the hex at once, and it lines up+
                with the rulers. '
 DC   CL78'                                                            +
                                 '
 DC   CL78' TERM [ your terminal id ]                                  +
                                 '
 DC   CL78' Like the CEBR command, adds the id of the terminal specifie+
               d to the current  '
 DC   CL78' queue name overlaying whatever was previously in columns 4-+
               7 (or equivelent  '
 DC   CL78' positions if the queue was specified in hex). If no termina+
               l id is specified '
 DC   CL78' KEBR simply uses the current terminal`s id.                +
                                 '
 DC   CL78'                                                            +
                                 '
 DC   CL78' PF7 and PF8 are `full` scrolls, not `half` scrolls as in CE+
               BR. `Half` scrolls'
 DC   CL78' are not supported. However, KEBR provides cursor sensitive +
               scrolling: if the '
 DC   CL78' cursor is on a line of the displayed queue and you press PF+
               7 or PF8 to scroll'
 DC   CL78' KEBR will make that line the new top or bottom line. You ca+
               n also use PF19   '
 DC   CL78' (shift PF7) for `MAX` scrolls to the first line of the queu+
               e, or PF20 (shift '
 DC   CL78' PF8) to scroll to the last line of the queue.              +
                                 '
 DC   CL78'                                                            +
                                 '
 DC   CL78' Horizontal scrolls are handled with PF10 (scroll right, tow+
               ard column 1) and '
 DC   CL78' PF11 (scroll left, toward the last column). Cursor sensing +
               and use of shifted'
 DC   CL78' PFs for MAX scrolls is similar to use in vertical scrolls a+
               s described above.'
 DC   CL78'                                                            +
                                 '
 DC   CL78' Use of CEBR`s LINE, COLUMN, TOP and BOTTOM commands continu+
               e as supported    '
 DC   CL78' scrolls, as does the ability to overtype the `Line/Item` an+
               d `Column` fields.'
 DC   CL78'                                                            +
                                 '
 DC   CL78' KEBR tries to keep as much data on the screen as possible. +
               As a result, if a '
 DC   CL78' requested scroll would result in much of the screen being e+
               mpty KEBR will    '
 DC   CL78' limit the scroll to (for example) put the last line of the +
               queue at the      '
 DC   CL78' bottom of the screen.                                      +
                                 '
 DC   CL78'                                                            +
                                 '
 DC   CL78' PUT SYSOUT [ CLASS A LPP 60 FIRST 1 ITEMS 50 ]             +
                                 '
 DC   CL78'   or PRINT [ CLASS A LPP 60 FIRST 1 ITEMS 50 ]             +
                                 '
 DC   CL78' Prints a report to JES (sysout) of the first 50 items of th+
               e current queue,  '
 DC   CL78' either as lines of printable characters, or as vertical hex+
                depending on the '
 DC   CL78' current screen display. Rulers or not, also as per the curr+
               ent display.      '
 DC   CL78' Output class, lines per page, starting item number and numb+
               er of items can be'
 DC   CL78' specified with optional arguments in any order.            +
                                 '
 DC   CL78'                                                            +
                                 '
 DC   CL78' VGET filename [ FIRST 1 RECS 50 ]                          +
                                 '
 DC   CL78' Similar to GET, but instead of loading a transient data que+
               ue loads a named  '
 DC   CL78' vsam file (ksds, path, esds, or rrds defined in the FCT). I+
               t defaults to     '
 DC   CL78' loading the first 50 records but this range can be overridd+
               en with optional  '
 DC   CL78' arguments.                                                 +
                                 '
 DC   CL78'                                                            +
                                 '
*
 END
/*
//LKED     EXEC PGM=IEWL,PARM='XREF,MAP,LET,NCAL',
//         COND=(0,NE,ASM)
//SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)
//SYSIN    DD DUMMY
//SYSLMOD  DD DSN=K.S.V1R5M0.KIKRPL(KEBRHELP),DISP=SHR
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSPRINT DD SYSOUT=*
//
