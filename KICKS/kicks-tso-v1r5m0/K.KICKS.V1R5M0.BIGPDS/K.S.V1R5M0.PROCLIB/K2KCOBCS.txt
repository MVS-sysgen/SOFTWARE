//K2KCOBCS PROC CBLPARM='SUPMAP,DMAP,CLIST',
//            SOUT='*',
//            ZOUT=Z,      KICKS discards most msgs
//            UNT=SYSDA,
//            KICKSYS='K.KICKSSYS',
//            KIKSUSR='K.KICKS',
//            VER=V1R5M0,
//            SIT=S$,      KICKS tables for source load
//            ICVR=0,      KICKS no runaway tasks
//            XTIME=       KICKS max 1 cpu minute
//*
//*   PROC for MVT ANSI COBOL with load of source to SDB
//*   NON-LE compiler -- runs twice for 'LENGTH OF'...
//*
//* - copy input for pp1 & pp2
//COPY   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=&ZOUT
//SYSIN    DD DUMMY
//SYSUT2   DD DSN=&&PPIN,DISP=(,PASS),UNIT=SYSDA,
//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),
//         SPACE=(TRK,(90,15),RLSE)
//SYSUT1   DD DSN=&KIKSUSR..&VER..COBCOPY(&VER),DISP=SHR
//*
//* - first pp, make input for first cob
//PP1    EXEC PGM=KIKPPCOB,
//            PARM='-v -t -dmapin1'
//STEPLIB  DD DSN=&KICKSYS..&VER..SKIKLOAD,DISP=SHR
//SYSPRINT DD DISP=(,PASS),UNIT=&UNT,SPACE=(800,(500,100),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SYSTERM  DD SYSOUT=&SOUT,DCB=(BLKSIZE=120,RECFM=F)
//SYSUDUMP DD SYSOUT=&SOUT
//SYSLIB   DD DISP=SHR,DSN=&KIKSUSR..&VER..COBCOPY
//         DD DISP=SHR,DSN=&KICKSYS..&VER..COBCOPY
//SYSIN    DD DSN=&&PPIN,DISP=(OLD,PASS)
//*
//* - first cob, generate dmap
//COB1   EXEC PGM=IKFCBL00,
//            REGION=4096K,
//            COND=(5,LT),
// PARM='DMAP,SOURCE,NOCLIST,NODECK,NOLOAD,SIZE=2048K,BUF=1024K,LIB'
//SYSPRINT DD DISP=(,PASS),UNIT=&UNT,SPACE=(1210,(500,100),RLSE),
//            DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210)
//SYSPUNCH DD DUMMY
//SYSLIB   DD DISP=SHR,DSN=&KIKSUSR..&VER..COBCOPY
//         DD DISP=SHR,DSN=&KICKSYS..&VER..COBCOPY
//SYSLIN   DD UNIT=&UNT,SPACE=(80,(250,100)),DISP=(MOD,DELETE)
//SYSUT1   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT2   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT3   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT4   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSIN    DD DISP=(OLD,DELETE),DSN=*.PP1.SYSPRINT
//*
//* - 2nd pp, use dmap for LENGTH's, make input to 2nd cob
//*           also generate source trace input for sb load
//PP2    EXEC PGM=KIKPPCOB,COND=((5,LT,PP1),(12,LT,COB1)),
//            PARM='-t -dmapin2 -s'
//STEPLIB  DD DSN=&KICKSYS..&VER..SKIKLOAD,DISP=SHR
//SYSPRINT DD DISP=(,PASS),UNIT=&UNT,SPACE=(800,(500,100),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SYSTERM  DD SYSOUT=&SOUT,DCB=(BLKSIZE=120,RECFM=F)
//SYSUDUMP DD SYSOUT=&SOUT
//SYSLIB   DD DISP=SHR,DSN=&KIKSUSR..&VER..COBCOPY
//         DD DISP=SHR,DSN=&KICKSYS..&VER..COBCOPY
//DMAPIN   DD DISP=(OLD,DELETE),DSN=*.COB1.SYSPRINT
//SDBOUT1 DD DSN=&&SDB1,UNIT=&UNT,SPACE=(TRK,(1,1)),
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),DISP=(,PASS)
//SDBOUT2 DD DSN=&&SDB2,UNIT=&UNT,SPACE=(TRK,(15,15)),
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),DISP=(,PASS)
//SYSIN    DD DSN=&&PPIN,DISP=(OLD,PASS)
//*
//* - 2nd cob, make object deck for linker
//COB2   EXEC PGM=IKFCBL00,
//            REGION=4096K,
//            COND=(5,LT),
//            PARM='NODECK,LOAD,SIZE=2048K,BUF=1024K,&CBLPARM,LIB'
//SYSPRINT DD SYSOUT=&SOUT
//SYSPUNCH DD DUMMY
//SYSLIB   DD DISP=SHR,DSN=&KIKSUSR..&VER..COBCOPY
//         DD DISP=SHR,DSN=&KICKSYS..&VER..COBCOPY
//SYSLIN   DD UNIT=&UNT,SPACE=(80,(250,100)),DISP=(MOD,PASS)
//SYSUT1   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT2   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT3   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSUT4   DD UNIT=&UNT,SPACE=(460,(350,100))
//SYSIN    DD DISP=(OLD,DELETE),DSN=*.PP2.SYSPRINT
//*
//LKED   EXEC PGM=IEWL,
//            COND=(5,LT),
//            PARM='XREF,LIST,LET,MAP'
//SYSPRINT DD SYSOUT=&SOUT
//SYSLIB   DD DISP=SHR,DSN=SYS1.COBLIB
//SYSLMOD  DD DISP=SHR,DSN=&KIKSUSR..&VER..KIKRPL
//SYSLIN   DD DISP=(OLD,DELETE),DSN=*.COB2.SYSLIN
//         DD DDNAME=SYSIN
//SYSUT1   DD UNIT=(SYSDA,SEP=(SYSLMOD,SYSLIN)),
//         SPACE=(1024,(200,20))
//SKIKLOAD DD DISP=SHR,DSN=&KICKSYS..&VER..SKIKLOAD
//KIKRPL   DD DISP=SHR,DSN=&KICKSYS..&VER..KIKRPL
//SYSIN    DD DUMMY
//*
//* Use batch KICKS to load program into source database
//*
//LOADSDB EXEC PGM=KIKSIP1$,COND=(5,LT),
//  REGION=2000K,
//  TIME=&XTIME,
//  PARM='SIT=&SIT ICVR=&ICVR PLTPI=KSDB '
//*
//STEPLIB  DD DSN=&KICKSYS..&VER..SKIKLOAD,DISP=SHR
//SKIKLOAD DD DSN=&KICKSYS..&VER..SKIKLOAD,DISP=SHR
//KIKRPL   DD DSN=&KICKSYS..&VER..KIKRPL,DISP=SHR
//*
//SYSPRINT DD SYSOUT=&ZOUT,DCB=(RECFM=F,BLKSIZE=80)
//SYSTERM  DD SYSOUT=&ZOUT,DCB=(RECFM=F,BLKSIZE=80)
//SYSOUT   DD SYSOUT=&SOUT,DCB=BLKSIZE=132
//CRLPOUT  DD SYSOUT=&ZOUT,DCB=(RECFM=F,BLKSIZE=132)
//TRANDUMP DD SYSOUT=&SOUT,DCB=(RECFM=F,BLKSIZE=132)
//AUXTRC   DD SYSOUT=&ZOUT,DCB=(RECFM=V,BLKSIZE=2000)
//SYSUDUMP DD SYSOUT=&SOUT
//*
//SYSIN    DD DUMMY,DCB=(RECFM=F,BLKSIZE=80)
//CRLPIN   DD DUMMY,DCB=BLKSIZE=80
//*
//* Theoretically the source database can be shared, but
//* as a practical matter that's probably not what you want
//*
//KSDB     DD DSN=&KIKSUSR..&VER..SDB,DISP=OLD
//*
//KSDBIN   DD DSN=&&SDB1,DISP=(OLD,DELETE)
//         DD DSN=&&SDB2,DISP=(OLD,DELETE)
//         DD DSN=&&PPIN,DISP=(OLD,DELETE)
