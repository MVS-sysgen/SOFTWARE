 /////////////////////////////////////////////////////////////////////
 // 'KICKS for TSO' is a product to deliver 'CICS like' functionality
 // in MVS/TSO. Its CICS functionality is delivered at the source code
 // level, not at the object code level. Applications must be
 // recompiled and the recompiled programs are not compatible with any
 // known version of 'real' CICS (the IBM program product),
 //
 // Â© Copyright 2008-2014, Michael Noel, All Rights Reserved.
 //
 // Usage of 'KICKS for TSO' is in all cases subject to license. See
 // http://www.kicksfortso.com
 // for most current information regarding licensing options..
 ////////1/////////2/////////3/////////4/////////5/////////6/////////7

 ///////////////////////////////////////////////////////////////
 //
 //  KICKS FCTE (FILE CONTROL TABLE ENTRY)
 //
 ///////////////////////////////////////////////////////////////

 typedef struct __fcte__ {
  struct __fcte__ *next;
  short  flag1;     // 1=disabled, 2=open, ... (see FCTEflag1... below)
  short  keylen;    // from open showcb
  int    nlogr, lrecl, rkp; // from open showcb
  short  resp;      // resp  code of last op
  short  resp2;     // resp2 code of last op
  char   rcode[6];  // rcode of last op
  short  numreq;    // entries in reqid table
  short  lastreqid; // reqid (table index) of last op
  char ddname[8];   // save ddname for open
  char ddbase[8];   // ddname of base (if this is path)
  char dsname[44];  // save dsname (of base) for enqueues
  ifgacb acb;       // the acb
  struct {
    short   reqid;  // tables of reqid info
    short   lastop; // 0=nothing (or close), 1=open, 2=delete,
                    // 3=endbr, 4=readnext, 5=readprev,
                    // 6=read, 7=resetbr, 8=rewrite,
                    // 9=startbr, 10=unlock, 11=write
    short   flagsb; // flags from last start browse
    short   keylen; // keylen frm last start browse
    ifgrpl rpl;     // the rpls
    char *keys;     // last keys
    } reqids[0];
 } fcte;

#define FCTEflag1disabled  1
#define FCTEflag1open      2
#define FCTEflag1ksds      4
#define FCTEflag1esds      8
#define FCTEflag1rrds      16
#define FCTEflag1base      32
#define FCTEflag1path      64
#define FCTEflag1aix       128
#define FCTEflag1dispshr   256
#define FCTEflag1usedbase  512
#define FCTEflag1pendupdt  1024
#define FCTEflag1InitOpend 2048

#define FCTElastopclose    0
#define FCTElastopopen     1
#define FCTElastopdelete   2
#define FCTElastopendbr    3
#define FCTElastopreadnext 4
#define FCTElastopreadprev 5
#define FCTElastopread     6
#define FCTElastopresetbr  7
#define FCTElastoprewrite  8
#define FCTElastopstartbr  9
#define FCTElastopunlock   10
#define FCTElastopwrite    11

#define FCTEflagsbgeneric    1
#define FCTEflagsbrba        2
#define FCTEflagsbrrn        4
#define FCTEflagsbgteq       8
#define FCTEflagsbequal      16
#define FCTEflagsbupdate     32
#define FCTEflagsbmassins    64
#define FCTEflagsbactive     256
#define FCTEflagsnextprev    512 // signals BWD in 'point' calls...
 // following signifies that ridfld is NOT specified
#define FCTEflagsbridfld     8388608 // hi order in 3rd byte


