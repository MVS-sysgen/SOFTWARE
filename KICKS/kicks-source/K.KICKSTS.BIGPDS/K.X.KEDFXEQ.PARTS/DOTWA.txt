 /////////////////////////////////////////////////////////////////////
 // 'KICKS for TSO' is a product to deliver 'CICS like' functionality
 // in MVS/TSO. Its CICS functionality is delivered at the source code
 // level, not at the object code level. Applications must be
 // recompiled and the recompiled programs are not compatible with any
 // known version of 'real' CICS (the IBM program product),
 //
 // Â© Copyright 2008-2014, Michael Noel, All Rights Reserved.
 //
 // Usage of 'KICKS for TSO' is in all cases subject to license. See
 // http://www.kicksfortso.com
 // for most current information regarding licensing options..
 ////////1/////////2/////////3/////////4/////////5/////////6/////////7

#include "kedfxeq.h"

void DoTWA(KIKEIB *eib, DEBUGGERCA *comm) {
char *tioa, buffer[200];
int row, col, topline, botline, lines;
short sbuf;

 if((pwhich == 21) && (eib->eibaid == KIKPF21)) {
  offset = -1;
  DoMain(eib, comm);
  return;
  }
 pwhich = 21;

 DoTop(eib, comm);

 tioa = csa->tctte->tioa;
 topline = 6;
 botline = bot - helpv - 1;
 lines = botline - topline + 1;

 SPRINTF(buffer, "TWA address %06X, length %hd",
                 csa->tca->twaa, csa->tca->twal);
 PUT_SBA(4,1)
 APPEND_MSG(buffer);

 if (csa->tca->twal == 0) {
  DoBottom(eib, comm);
  return;
  }

 if (eib->eibaid == KIKPF21) offset = 0;  // initial entry
 if (eib->eibaid == KIKPF7) {             // scroll back
  offset -= lines*sba_1632;
  if (offset < 0) offset = 0;
  }
 if (eib->eibaid == KIKPF8) {             // scroll fwd
  col = offset + lines*sba_1632;
  if (col < csa->tca->twal) offset = col;
  }
 if (eib->eibaid == KIKPF19) offset = 0;  // scroll top
 if (eib->eibaid == KIKPF20) {            // scroll bottom
  offset = csa->tca->twal / sba_1632;     // num lines in area
  if (csa->tca->twal % sba_1632 > 0) offset++;
  offset -= lines;              // less num lines on screen
  offset *= sba_1632;           // times chars / line
  if (offset < 0) offset = 0;   // zero if negative...
  }

 DoDump((char*)csa->tca->twaa, csa->tca->twal, offset, topline, lines);

 DoBottom(eib, comm);
}


